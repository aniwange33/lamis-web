import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import * as moment_ from 'moment';
import { ClinicService } from '../../services/clinic.service';
import { NotificationService } from '@alfresco/adf-core';
import { ActivatedRoute } from '@angular/router';
import { AppLoaderService } from '@lamis/web-core';
import { EacService } from '../../services/eac.service';
import { catchError, tap } from 'rxjs/operators';
var moment = moment_;
var EacEditComponent = /** @class */ (function () {
    function EacEditComponent(clinicService, eacService, notification, activatedRoute, appLoaderService) {
        this.clinicService = clinicService;
        this.eacService = eacService;
        this.notification = notification;
        this.activatedRoute = activatedRoute;
        this.appLoaderService = appLoaderService;
        this.today = moment();
        this.isSaving = false;
    }
    EacEditComponent.prototype.createEntity = function () {
        return {};
    };
    EacEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.activatedRoute.data.subscribe(function (_a) {
            var entity = _a.entity;
            _this.entity = !!entity && entity.body ? entity.body : entity;
            if (_this.entity === undefined) {
                _this.entity = _this.createEntity();
            }
            var patientId = _this.activatedRoute.snapshot.paramMap.get('patientId');
            _this.clinicService.getPatient(patientId).subscribe(function (res) {
                _this.entity.patient = res;
                _this.entity.facility = res.facility;
                _this.dateRegistration = res.dateRegistration;
                _this.updateMinDates(res.id, moment());
                if (!_this.entity.id) {
                    _this.eacService.getLatestByPatient(res.uuid).subscribe(function (r) {
                        _this.entity = r.ok ? r.body : _this.createEntity();
                        _this.repeatVLMin = _this.entity.dateEac3 ? _this.entity.dateEac3.clone().add(1, 'day') :
                            _this.entity.dateLastViralLoad;
                        _this.eac2Min = _this.entity.dateEac1 ? _this.entity.dateEac1.clone().add(2, 'week') :
                            _this.entity.dateLastViralLoad;
                        _this.eac3Min = _this.entity.dateEac2 ? _this.entity.dateEac2.clone().add(2, 'week') :
                            _this.entity.dateLastViralLoad;
                    });
                }
            });
        });
    };
    EacEditComponent.prototype.updateMinDates = function (id, date) {
        var _this = this;
        this.eacService.getLatestViralLoadByPatient(id, date).pipe(tap(function (r) {
            _this.entity.dateLastViralLoad = moment(r.laboratory.dateResultReceived);
            _this.entity.lastViralLoad = r.result;
            _this.eac1Min = _this.entity.dateLastViralLoad.clone().add(1, 'day');
            _this.eac2Min = _this.entity.dateEac1 ? _this.entity.dateEac1.clone().add(2, 'week') :
                _this.entity.dateLastViralLoad;
            _this.eac3Min = _this.entity.dateEac2 ? _this.entity.dateEac2.clone().add(2, 'week') :
                _this.entity.dateLastViralLoad;
            _this.repeatVLMin = _this.entity.dateEac3 ? _this.entity.dateEac3.clone().add(1, 'day') :
                _this.entity.dateLastViralLoad;
        }), catchError(function (err) {
            _this.entity.dateLastViralLoad = null;
            _this.entity.lastViralLoad = null;
            _this.eac1Min = _this.entity.patient.dateRegistration.clone().add(1, 'day');
            _this.eac2Min = _this.entity.dateEac1 ? _this.entity.dateEac1.clone().add(2, 'week') :
                _this.entity.dateLastViralLoad;
            _this.eac3Min = _this.entity.dateEac2 ? _this.entity.dateEac2.clone().add(2, 'week') :
                _this.entity.dateLastViralLoad;
            _this.repeatVLMin = _this.entity.dateEac3 ? _this.entity.dateEac3.clone().add(1, 'day') :
                _this.entity.dateLastViralLoad;
            return null;
        }));
    };
    EacEditComponent.prototype.dateEac1Changed = function (date) {
        this.eac2Min = date.clone().add(2, 'weeks');
        this.updateMinDates(this.entity.patient.id, date);
    };
    EacEditComponent.prototype.dateEac2Changed = function (date) {
        this.eac3Min = date.clone().add(2, 'weeks');
    };
    EacEditComponent.prototype.dateEac3Changed = function (date) {
        this.repeatVLMin = date.clone().add(1, 'days');
        this.repeatVLMax = date.clone().add(6, 'months');
    };
    EacEditComponent.prototype.save = function () {
        //this.submitButton.disabled = true;
        //this.progressBar.mode = 'indeterminate';
        this.isSaving = true;
        this.appLoaderService.open('Saving EAC session..');
        if (this.entity.id !== undefined) {
            this.subscribeToSaveResponse(this.eacService.update(this.entity));
        }
        else {
            this.subscribeToSaveResponse(this.eacService.create(this.entity));
        }
    };
    EacEditComponent.prototype.previousState = function () {
        window.history.back();
    };
    EacEditComponent.prototype.subscribeToSaveResponse = function (result) {
        var _this = this;
        result.subscribe(function (res) { return _this.onSaveSuccess(res.body); }, function (res) {
            _this.onSaveError();
            _this.onError(res.message);
        });
    };
    EacEditComponent.prototype.onSaveSuccess = function (result) {
        this.appLoaderService.close();
        this.isSaving = false;
        this.notification.openSnackMessage('EAC session successfully saved');
        this.previousState();
    };
    EacEditComponent.prototype.onSaveError = function () {
        this.isSaving = false;
        this.appLoaderService.close();
        //this.submitButton.disabled = true;
        this.notification.showError('Error occurred saving EAC session; try again');
        //this.progressBar.mode = 'determinate';
    };
    EacEditComponent.prototype.onError = function (errorMessage) {
        this.appLoaderService.close();
        this.notification.showError(errorMessage);
    };
    EacEditComponent.ctorParameters = function () { return [
        { type: ClinicService },
        { type: EacService },
        { type: NotificationService },
        { type: ActivatedRoute },
        { type: AppLoaderService }
    ]; };
    EacEditComponent = tslib_1.__decorate([
        Component({
            selector: 'eac-edit',
            template: "<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <mat-card class=\"default\">\n            <mat-card-content>\n                <mat-progress-bar mode=\"determinate\" class=\"session-progress\"></mat-progress-bar>\n            </mat-card-content>\n        </mat-card>\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #clinicForm=\"ngForm\">\n            <mat-card class=\"default\">\n                <mat-card-content *ngIf=\"entity.patient\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field>\n                                <mat-label>Date Last Viral Load</mat-label>\n                                <input matInput\n                                       [value]=\"entity.dateLastViralLoad && entity.dateLastViralLoad.format('DD MMM, YYYY')\"\n                                       disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field>\n                                <input matInput [value]=\"entity.lastViralLoad\" disabled>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <input matInput [matDatepicker]=\"picker\"\n                                   placeholder=\"Date of 1st EAC Session\"\n                                   [(ngModel)]=\"entity.dateEac1\"\n                                   #visit=\"ngModel\"\n                                   (dateChange)=\"dateEac1Changed($event.value)\"\n                                   [max]=\"today\"\n                                   [min]=\"eac1Min\"\n                                   name=\"visit\"\n                                   required>\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.required)\">\n                                Date of first EAC session is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.min)\">\n                                Date of first EAC session cannot be before {{eac1Min | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.max)\">\n                                Date of first EAC session cannot be after {{today | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\" *ngIf=\"entity.id && !!eac2Min\">\n                            <input matInput [matDatepicker]=\"picker2\"\n                                   placeholder=\"Date of 2nd EAC Session\"\n                                   [(ngModel)]=\"entity.dateEac2\"\n                                   #visit2=\"ngModel\"\n                                   (dateChange)=\"dateEac2Changed($event.value)\"\n                                   [max]=\"today\"\n                                   [min]=\"eac2Min\"\n                                   name=\"visit2\">\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker2\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker2></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"visit2.errors && (visit2.dirty || visit2.touched) && (visit2.errors.required)\">\n                                Date of second EAC session is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit2.errors && (visit2.dirty || visit2.touched) && (visit2.errors.min)\">\n                                Date of second EAC session cannot be before {{eac2Min | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit2.errors && (visit2.dirty || visit2.touched) && (visit2.errors.max)\">\n                                Date of second EAC session cannot be after {{today | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\" *ngIf=\"entity.dateEac2 && !!eac3Min\">\n                            <input matInput [matDatepicker]=\"picker3\"\n                                   placeholder=\"Date of 3rd EAC Session\"\n                                   [(ngModel)]=\"entity.dateEac3\"\n                                   #visit3=\"ngModel\"\n                                   (dateChange)=\"dateEac3Changed($event.value)\"\n                                   [max]=\"today\"\n                                   [min]=\"eac3Min\"\n                                   name=\"visit3\">\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker3\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker3></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"visit3.errors && (visit3.dirty || visit3.touched) && (visit3.errors.required)\">\n                                Date of third EAC session is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit3.errors && (visit3.dirty || visit3.touched) && (visit3.errors.min)\">\n                                Date of third EAC session cannot be before {{eac3Min | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit3.errors && (visit3.dirty || visit3.touched) && (visit3.errors.max)\">\n                                Date of third EAC session cannot be after {{today | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\" *ngIf=\"entity.dateEac3 && !!repeatVLMin\">\n                            <input matInput [matDatepicker]=\"picker4\"\n                                   placeholder=\"Date of Repeat VL Sample Collection\"\n                                   [(ngModel)]=\"entity.dateSampleCollected\"\n                                   #visit4=\"ngModel\"\n                                   [max]=\"repeatVLMax\"\n                                   [min]=\"repeatVLMin\"\n                                   name=\"repeat\">\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker4\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker4></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"visit4.errors && (visit4.dirty || visit4.touched) && (visit4.errors.required)\">\n                                Date of Repeat VL Sample Collection is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit4.errors && (visit4.dirty || visit4.touched) && (visit4.errors.min)\">\n                                Date of Repeat VL Sample Collection cannot be\n                                before {{repeatVLMin | date:'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit4.errors && (visit4.dirty || visit4.touched) && (visit4.errors.max)\">\n                                Date of Repeat VL Sample Collection cannot be\n                                after {{repeatVLMax | date:'dd MMM, yyyy'}}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <textarea matInput placeholder=\"Notes\"\n                                      cols=\"30\"\n                                      rows=\"3\"\n                                      name=\"notes\"\n                                      #note=\"ngModel\" [(ngModel)]=\"entity.notes\"></textarea>\n                        </mat-form-field>\n                    </div>\n                    <mat-card-actions class=\"lamis-edit-form-actions\">\n                        <button mat-raised-button type=\"button\" (click)=\"previousState()\">Back</button>\n                        <button mat-raised-button color='primary'\n                                [disabled]=\"clinicForm.invalid || isSaving\"\n                                type=\"submit\">\n                            {{entity.id !== undefined ? 'Update' : 'Save'}}\n                        </button>\n                    </mat-card-actions>\n                </mat-card-content>\n            </mat-card>\n        </form>\n    </div>\n</div>\n"
        }),
        tslib_1.__metadata("design:paramtypes", [ClinicService,
            EacService,
            NotificationService,
            ActivatedRoute,
            AppLoaderService])
    ], EacEditComponent);
    return EacEditComponent;
}());
export { EacEditComponent };
//# sourceMappingURL=data:application/json;base64,
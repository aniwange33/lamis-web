{"version":3,"file":"lamis-clinic-1.4.0.js","sources":["ng://lamis-clinic-1.4.0/lib/services/clinic.service.ts","ng://lamis-clinic-1.4.0/lib/components/clinic/clinic-details.component.ts","ng://lamis-clinic-1.4.0/lib/components/clinic/clinic-edit.component.ts","ng://lamis-clinic-1.4.0/lib/services/clinic.route.ts","ng://lamis-clinic-1.4.0/lib/components/clinic/clinic.widget.ts","ng://lamis-clinic-1.4.0/lib/material.module.ts","ng://lamis-clinic-1.4.0/lib/clinic.widget.module.ts","ng://lamis-clinic-1.4.0/lib/clinic.module.ts","ng://lamis-clinic-1.4.0/lib/services/chronic.care.service.ts","ng://lamis-clinic-1.4.0/lib/components/chronic-care/chronic.care.detail.component.ts","ng://lamis-clinic-1.4.0/lib/components/chronic-care/chronic.care.edit.component.ts","ng://lamis-clinic-1.4.0/lib/services/chronic.care.route.ts","ng://lamis-clinic-1.4.0/lib/chronic.care.module.ts","ng://lamis-clinic-1.4.0/lib/services/eac.service.ts","ng://lamis-clinic-1.4.0/lib/components/eac/eac.details.component.ts","ng://lamis-clinic-1.4.0/lib/components/eac/eac.edit.component.ts","ng://lamis-clinic-1.4.0/lib/services/eac.route.ts","ng://lamis-clinic-1.4.0/lib/eac.module.ts","ng://lamis-clinic-1.4.0/lib/services/case-management.service.ts","ng://lamis-clinic-1.4.0/lib/components/case-management/patient.list.component.ts","ng://lamis-clinic-1.4.0/lib/services/case-management.route.ts","ng://lamis-clinic-1.4.0/lib/case-management.module.ts","ng://lamis-clinic-1.4.0/lib/services/case-manager.service.ts","ng://lamis-clinic-1.4.0/lib/components/case-management/case-manager.details.component.ts","ng://lamis-clinic-1.4.0/lib/components/case-management/case-manager.edit.component.ts","ng://lamis-clinic-1.4.0/lib/components/case-management/case-manager.list.component.ts","ng://lamis-clinic-1.4.0/lib/services/case-manager.route.ts","ng://lamis-clinic-1.4.0/lib/case-manager.module.ts","ng://lamis-clinic-1.4.0/lib/services/cervical-cancer-screening.service.ts","ng://lamis-clinic-1.4.0/lib/components/cervical-cancer-screening/cervical-cancer-screening.component.ts","ng://lamis-clinic-1.4.0/lib/components/cervical-cancer-screening/cervical-cancer-screening-detail.component.ts","ng://lamis-clinic-1.4.0/lib/services/cervical-cancer-screening.route.ts","ng://lamis-clinic-1.4.0/lib/cervical-cancer.module.ts","ng://lamis-clinic-1.4.0/public_api.ts","ng://lamis-clinic-1.4.0/lamis-clinic-1.4.0.ts"],"sourcesContent":["import {Inject, Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {DATE_FORMAT, SERVER_API_URL_CONFIG, ServerApiUrlConfig} from '@lamis/web-core';\nimport {map} from 'rxjs/operators';\nimport {\n    Clinic,\n    ClinicAdhere,\n    ClinicAdverseDrugReaction,\n    ClinicOpportunisticInfection,\n    ClinicVm,\n    Patient\n} from '../model/clinic.model';\n\nimport * as moment_ from 'moment';\nimport {Moment} from 'moment';\n\nconst moment = moment_;\n\ntype EntityResponseType = HttpResponse<Clinic>;\ntype EntityArrayResponseType = HttpResponse<Clinic[]>;\n\n@Injectable({providedIn: 'root'})\nexport class ClinicService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/clinics';\n    }\n\n    create(clinic: Clinic): Observable<EntityResponseType> {\n        clinic = this.convertDateFromClient(clinic);\n        return this.http\n            .post<Clinic>(this.resourceUrl, clinic, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    update(clinic: Clinic): Observable<EntityResponseType> {\n        clinic = this.convertDateFromClient(clinic);\n        return this.http\n            .put<Clinic>(this.resourceUrl, clinic, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    find(id: number): Observable<EntityResponseType> {\n        return this.http\n            .get<Clinic>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    findByUuid(id: string): Observable<EntityResponseType> {\n        return this.http\n            .get<Clinic>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    getVisitDatesByPatient(patientId: number) {\n        return this.http.get<Moment[]>(`${this.resourceUrl}/patient/${patientId}/visit-dates`)\n            .pipe(map((res) => {\n                    res.forEach(d => moment(d));\n                    return res;\n                })\n            );\n    }\n\n    getPatient(id: any) {\n        return this.http.get<Patient>(`/api/patients/by-uuid/${id}`, {observe: 'body'})\n            .pipe(map((res) => {\n                if (res) {\n                    res.dateRegistration = res.dateRegistration != null ? moment(res.dateRegistration) : null;\n                    res.dateBirth = res.dateBirth != null ? moment(res.dateBirth) : null;\n                }\n                return res;\n            }));\n    }\n\n    getRegimenLines() {\n        return this.http.get<any[]>(`${this.resourceUrl}/regimen-types`);\n    }\n\n    getRegimenByLine(id) {\n        return this.http.get<any[]>(`${this.resourceUrl}/regimens/regimen-type/${id}`);\n    }\n\n    adverseDrugReactions() {\n        return this.http.get<any[]>(`${this.resourceUrl}/adverse-drug-reactions`);\n    }\n\n    opportunisticInfections() {\n        return this.http.get<any[]>(`${this.resourceUrl}/opportunistic-infections`);\n    }\n\n    adheres() {\n        return this.http.get<any[]>(`${this.resourceUrl}/adheres`);\n    }\n\n    regimes(regimenType: number) {\n        return this.http.get(`${this.resourceUrl}/regimens/${regimenType}`);\n    }\n\n    latestVisit(patientId: number) {\n        return this.http.get<Clinic>(`${this.resourceUrl}/patient/${patientId}/latest`);\n    }\n\n    enrolledOnOTZ(id: number) {\n        return this.http.get<boolean>(`${this.resourceUrl}/patient/${id}/enrolled-on-otz`);\n    }\n\n    protected convertDateFromClient(clinic: Clinic): Clinic {\n        const copy: Clinic = Object.assign({}, clinic, {\n            dateVisit: clinic.dateVisit != null && clinic.dateVisit.isValid() ? clinic.dateVisit.format(DATE_FORMAT) : null,\n            lmp: clinic.lmp != null && clinic.lmp.isValid() ? clinic.lmp.format(DATE_FORMAT) : null,\n            nextAppointment: clinic.nextAppointment != null && clinic.nextAppointment.isValid() ?\n                clinic.nextAppointment.format(DATE_FORMAT) : null,\n            pregnant: clinic.pregnancyStatus != null && clinic.pregnancyStatus === 2,\n            breastfeeding: clinic.pregnancyStatus != null && clinic.pregnancyStatus === 3,\n            bp: clinic.bp1 > 0 && clinic.bp2 > 0 ? clinic.bp1 + '/' + clinic.bp2 : null\n        });\n        return copy;\n    }\n\n    protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n        if (res.body) {\n            res.body.nextAppointment = res.body.nextAppointment != null ? moment(res.body.nextAppointment) : null;\n            res.body.dateVisit = res.body.dateVisit != null ? moment(res.body.dateVisit) : null;\n            res.body.lmp = res.body.lmp != null ? moment(res.body.lmp) : null;\n            res.body.pregnancyStatus = res.body.pregnant ? 2 : res.body.breastfeeding ? 3 : 1;\n            if (res.body.bp) {\n                const parts = res.body.bp.split('/');\n                res.body.bp1 = parseInt(parts[0], 10);\n                res.body.bp2 = parts.length === 2 ? parseInt(parts[1], 10) : null;\n            }\n        }\n        return res;\n    }\n\n    protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n        if (res.body) {\n            res.body.forEach((clinic: Clinic) => {\n                clinic.dateVisit = clinic.dateVisit != null ? moment(clinic.dateVisit) : null;\n                clinic.lmp = clinic.lmp != null ? moment(clinic.lmp) : null;\n                clinic.nextAppointment = clinic.nextAppointment != null ? moment(clinic.nextAppointment) : null;\n                clinic.pregnancyStatus = clinic.pregnant ? 2 : clinic.breastfeeding ? 3 : 1;\n            });\n        }\n        return res;\n    }\n}\n","import {Component, ComponentFactoryResolver, OnDestroy, OnInit} from '@angular/core';\nimport {Clinic} from '../../model/clinic.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ClinicService} from '../../services/clinic.service';\nimport {TdDialogService} from '@covalent/core';\nimport {\n    CardViewBoolItemModel,\n    CardViewDateItemModel,\n    CardViewFloatItemModel,\n    CardViewIntItemModel,\n    CardViewItem,\n    CardViewTextItemModel,\n    NotificationService\n} from '@alfresco/adf-core';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n    selector: 'lamis-clinic',\n    templateUrl: './clinic-details.component.html'\n})\nexport class ClinicDetailsComponent implements OnInit, OnDestroy {\n    properties: CardViewItem[] = [];\n    entity: Clinic;\n\n    constructor(private router: Router, private route: ActivatedRoute, private clinicService: ClinicService,\n                private cfr: ComponentFactoryResolver, private _dialogService: TdDialogService,\n                private notificationService: NotificationService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            const patientId = this.route.snapshot.paramMap.get('patientId');\n            this.clinicService.getPatient(patientId).subscribe((res) => this.entity.patient = res);\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'clinics', this.entity.uuid, 'patient', this.entity.patient.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this clinic visit, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.clinicService.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['patients']);\n                    } else {\n                        this.notificationService.showError('Error deleting visit, please try again');\n                    }\n                });\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewDateItemModel({\n            key: 'ds',\n            value: this.entity.dateVisit,\n            label: this.entity.commence ? 'ART Start Date' : 'Date Visit',\n            format: 'dd MMM, yyyy'\n        }));\n        if (this.entity.commence) {\n            this.properties.push(new CardViewIntItemModel({\n                label: 'CD4 at start of ART',\n                key: 'cd4',\n                value: this.entity.cd4p || null\n            }));\n            this.properties.push(new CardViewFloatItemModel({\n                label: 'CD4%',\n                key: 'cd4p',\n                value: this.entity.cd4p || null\n            }));\n            this.properties.push(new CardViewTextItemModel({\n                label: 'Original Regimen Line',\n                key: 'rl',\n                value: this.entity.regimenType != null ? this.entity.regimenType.description : ''\n            }));\n            this.properties.push(new CardViewTextItemModel({\n                label: 'Original Regimen',\n                key: 'rl',\n                value: this.entity.regimen != null ? this.entity.regimen.description : ''\n            }));\n        }\n        if (this.entity.extra && this.entity.patient.extra.prep && this.entity.patient.extra.prep.registered) {\n            if (this.entity.commence) {\n                this.properties.push(new CardViewTextItemModel({\n                    label: 'HIV Status at PrEP Initiation',\n                    key: 'cs',\n                    value: this.entity.extra.prep.hivTestResult\n                }));\n                this.properties.push(new CardViewTextItemModel({\n                    label: 'Creatinine Clearance (mL/min)',\n                    key: 'cs',\n                    value: this.entity.extra.prep.creatinineClearance\n                }));\n                this.properties.push(new CardViewTextItemModel({\n                    label: 'Urinalysis',\n                    key: 'cs',\n                    value: this.entity.extra.prep.urinalysis\n                }));\n                this.properties.push(new CardViewTextItemModel({\n                    label: 'Hepatitis B Screening',\n                    key: 'cs',\n                    value: this.entity.extra.prep.hepatitisB\n                }));\n                this.properties.push(new CardViewTextItemModel({\n                    label: 'Hepatitis C Screening',\n                    key: 'cs',\n                    value: this.entity.extra.prep.hepatitisC\n                }));\n            } else {\n                this.properties.push(new CardViewTextItemModel({\n                    label: 'HIV Status /Test Result',\n                    key: 'cs',\n                    value: this.entity.extra.prep.hivTestResult\n                }));\n            }\n        }\n        if (this.entity.extra && this.entity.extra.otz && this.entity.extra.otz.dateEnrolledOnOTZ) {\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: moment(this.entity.extra.dateEnrolledOnOTZ),\n                label: 'Date Enrolled on OTZ',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Clinical Stage',\n            key: 'cs',\n            value: this.entity.clinicStage\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Functional Status',\n            key: 'fs',\n            value: this.entity.funcStatus\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'TB Status',\n            key: 'ts',\n            value: this.entity.tbStatus\n        }));\n        this.properties.push(new CardViewFloatItemModel({\n            label: 'Body Weight(Kg)',\n            key: 'bw',\n            value: this.entity.bodyWeight || null\n        }));\n        this.properties.push(new CardViewFloatItemModel({\n            label: 'Height(m)',\n            key: 'h',\n            value: this.entity.height || null\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Blood Pressure',\n            key: 'cd4p',\n            value: this.entity.bp\n        }));\n        if (this.entity.patient.gender === 'Female') {\n            this.properties.push(new CardViewBoolItemModel({\n                label: 'Pregnant',\n                key: 'pg',\n                value: this.entity.pregnant\n            }));\n            this.properties.push(new CardViewBoolItemModel({\n                label: 'Breastfeeding',\n                key: 'bf',\n                value: this.entity.breastfeeding\n            }));\n            this.properties.push(new CardViewDateItemModel({\n                key: 'lpm',\n                value: this.entity.lmp,\n                label: 'LMP',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Level of Adherence',\n            key: 'ts',\n            value: this.entity.tbStatus\n        }));\n        if (this.entity.extra && this.entity.extra.otz && this.entity.extra.otz.dateLastOTZMeeting) {\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: moment(this.entity.extra.dateLastOTZMeeting),\n                label: 'Date of Last OTZ Meeting',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n        this.properties.push(new CardViewDateItemModel({\n            key: 'na',\n            value: this.entity.nextAppointment,\n            label: 'Next Appointment Date',\n            format: 'dd MMM, yyyy'\n        }));\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    public ngOnDestroy() {\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {\n    Adhere,\n    AdverseDrugReaction,\n    Clinic,\n    ClinicAdverseDrugReaction,\n    ClinicVm,\n    OpportunisticInfection\n} from '../../model/clinic.model';\nimport {ClinicService} from '../../services/clinic.service';\nimport {NotificationService} from '@alfresco/adf-core';\nimport {ActivatedRoute} from '@angular/router';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport * as moment_ from 'moment';\nimport {Moment} from 'moment';\nimport {AppLoaderService, DATE_FORMAT, entityCompare} from '@lamis/web-core';\nimport {ColumnMode} from '@swimlane/ngx-datatable';\n\nconst moment = moment_;\n\n@Component({\n    selector: 'lamis-clinic-edit',\n    templateUrl: './clinic-edit.component.html'\n})\nexport class ClinicEditComponent implements OnInit {\n    // @ViewChild(MatProgressBar, {static: true}) progressBar: MatProgressBar;\n    // @ViewChild(MatButton, {static: true}) submitButton: MatButton;\n    entity: Clinic;\n    isSaving: boolean;\n    error = false;\n    commence: any;\n    today = moment();\n    lmpMin: Moment;\n    appointmentMax: Moment;\n    appointmentMin: Moment;\n    opportunisticInfections: OpportunisticInfection[];\n    adverseDrugReactions: AdverseDrugReaction[];\n    adheres: Adhere[];\n    regimenLines: any[];\n    regimens: any[];\n    dateBirth: Moment;\n    dateRegistration: Moment;\n    visitDates: Moment[] = [];\n    selectedClinicAdr: ClinicAdverseDrugReaction[] = [];\n    oiList: OpportunisticInfection[] = [];\n    adhereList: Adhere[] = [];\n    ColumnMode = ColumnMode;\n    adr = false;\n    enrolledOnOTZ: boolean;\n    fullDisclosure: boolean;\n    dateOfFullDisclosure: Moment;\n    dateEnrolledOnOTZ: Moment;\n    attendedLastOTZMeeting: boolean;\n    dateLastOTZMeeting: Moment;\n    modulesCompleted: number;\n    caregiverPhone: string;\n    caregiverAddress: string;\n    otzApplicable = false;\n    hasOtz = false;\n    hivTestResult: string;\n    prep: boolean;\n    urinalysis: string;\n    hepatitisB: string;\n    hepatitisC: string;\n    creatinineClearance: any;\n\n    constructor(private clinicService: ClinicService,\n                protected notification: NotificationService,\n                protected activatedRoute: ActivatedRoute,\n                private appLoaderService: AppLoaderService) {\n    }\n\n    createEntity(): Clinic {\n        return <Clinic>{};\n    }\n\n    ngOnInit(): void {\n        this.clinicService.opportunisticInfections().subscribe(res => this.opportunisticInfections = res);\n        this.clinicService.adheres().subscribe(res => this.adheres = res);\n        this.isSaving = false;\n        this.clinicService.getRegimenLines().subscribe(res => {\n            this.regimenLines = res;\n        });\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.commence = !!this.activatedRoute.snapshot.data['commence'];\n\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\n\n            this.clinicService.getPatient(patientId).subscribe((res) => {\n                this.entity.patient = res;\n                this.entity.facility = res.facility;\n                this.dateBirth = res.dateBirth;\n                this.dateRegistration = res.dateRegistration;\n\n                if (res.statusAtRegistration === 'ART_TRANSFER_IN') {\n                    this.dateRegistration = moment('1999-01-01', 'YYYY-MM-DD');\n                    if (this.dateRegistration.isBefore(this.entity.patient.dateBirth)) {\n                        this.dateRegistration = this.entity.patient.dateBirth.clone().add(3, 'months');\n                    }\n                }\n                if (res.extra && res.extra.prep && res.extra.prep.registered) {\n                    this.prep = true;\n\n                    this.clinicService.getRegimenLines().subscribe(res1 => {\n                        this.regimenLines = res1.filter(t => {\n                            return t.id === 30;\n                        });\n                    });\n                }\n\n                this.clinicService.enrolledOnOTZ(res.id).subscribe(r => {\n                    this.enrolledOnOTZ = r;\n                    this.hasOtz = r;\n                });\n\n                this.otzApplicable = !moment().subtract(24, 'years').isAfter(this.entity.patient.dateBirth)\n                    && !moment().subtract(10, 'years').isBefore(this.entity.patient.dateBirth);\n\n                this.clinicService.getVisitDatesByPatient(this.entity.patient.id).subscribe((res1) => {\n                    this.visitDates = res1;\n                });\n            });\n            if (this.entity.commence && this.entity.regimenType) {\n                this.regimenLineChange(this.entity.regimenType);\n            }\n            this.commence = this.commence || this.entity.commence;\n\n            if (this.commence) {\n                this.entity.commence = true;\n                if (this.entity.regimenType) {\n                    this.regimenLineChange(this.entity.regimenType);\n                }\n            }\n\n            if (this.entity.id) {\n                this.appointmentMin = this.entity.dateVisit.clone().add(14, 'days');\n                this.appointmentMax = this.entity.dateVisit.clone().add(8, 'months');\n                this.clinicService.adverseDrugReactions().subscribe(res1 => {\n                    this.adverseDrugReactions = res1;\n\n                    this.adr = !!this.entity.adverseDrugReactions;\n                    this.adverseDrugReactions.forEach(adr => {\n                        let found = false;\n                        (this.entity.adverseDrugReactions || []).forEach(cadr => {\n                            if (cadr.adverseDrugReaction.id === adr.id) {\n                                found = true;\n                                this.selectedClinicAdr.push(cadr);\n                            }\n                        });\n                        if (!found) {\n                            this.selectedClinicAdr.push({\n                                adverseDrugReaction: adr\n                            });\n                        }\n                    });\n                    this.selectedClinicAdr = [...this.selectedClinicAdr];\n\n                    if (this.entity.extra) {\n                        if (this.entity.extra.prep) {\n                            this.hivTestResult = this.entity.extra.prep.hivTestResult;\n                            this.creatinineClearance = this.entity.extra.prep.creatinineClearance;\n                            this.hepatitisB = this.entity.extra.prep.hepatitisB;\n                            this.hepatitisC = this.entity.extra.prep.hepatitisC;\n                            this.urinalysis = this.entity.extra.prep.urinalysis;\n                        }\n\n                        if (this.entity.extra.otz) {\n                            if (!!this.entity.extra.otz.dateOfFullDisclosure) {\n                                this.dateOfFullDisclosure = moment(this.entity.extra.otz.dateOfFullDisclosure);\n                            }\n                            this.attendedLastOTZMeeting = !!this.entity.extra.otz.attendedLastOTZMeeting;\n                            this.enrolledOnOTZ = !!this.entity.extra.otz.enrolledOnOTZ;\n                            if (!!this.entity.extra.otz.dateEnrolledOnOTZ) {\n                                this.dateEnrolledOnOTZ = moment(this.entity.extra.otz.dateEnrolledOnOTZ);\n                            }\n\n                            if (!!this.entity.extra.otz.dateLastOTZMeeting) {\n                                this.dateLastOTZMeeting = moment(this.entity.extra.otz.dateLastOTZMeeting);\n                            }\n                            this.caregiverPhone = this.entity.extra.otz.caregiverPhone;\n                            this.caregiverAddress = this.entity.extra.otz.caregiverAddress;\n                            this.modulesCompleted = this.entity.extra.otz.modulesCompleted;\n                            this.fullDisclosure = this.entity.extra.otz.fullDisclosure;\n                        }\n                    }\n                });\n            } else {\n                this.clinicService.adverseDrugReactions().subscribe(res => {\n                    this.adverseDrugReactions = res;\n                    this.adverseDrugReactions.forEach(adr => {\n                        this.selectedClinicAdr.push({\n                            adverseDrugReaction: adr\n                        });\n                    });\n                });\n\n                this.selectedClinicAdr = [...this.selectedClinicAdr];\n            }\n        });\n    }\n\n    updateValue(event, cell, row: AdverseDrugReaction) {\n        console.log('Edit', event, cell, row);\n        this.selectedClinicAdr = [...this.selectedClinicAdr.map(cadr => {\n            if (cadr.adverseDrugReaction && cadr.adverseDrugReaction.id === row.id) {\n                cadr.severity = event;\n            }\n            return cadr;\n        })];\n        console.log('UPDATED!', row, event);\n    }\n\n\n    filterDates(date: Moment): boolean {\n        let exists = false;\n\n        this.visitDates.forEach(d => {\n            if (date.diff(d, 'days') === 0) {\n                exists = true;\n            }\n        });\n        return (this.entity.id && date.diff(this.entity.dateVisit, 'days') === 0) || !exists;\n    }\n\n    dateChanged(date: Moment) {\n        this.appointmentMax = date.clone().add(6, 'months');\n        this.lmpMin = date.clone().subtract(2, 'years');\n        this.appointmentMin = date.clone().add(14, 'days');\n\n        this.otzApplicable = !date.clone().subtract(24, 'years').isAfter(this.entity.patient.dateBirth)\n            && !date.clone().subtract(10, 'years').isBefore(this.entity.patient.dateBirth);\n    }\n\n    entityCompare(e1, e2) {\n        return entityCompare(e1, e2);\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        if (!this.entity.extra) {\n            this.entity.extra = {};\n        }\n        this.entity.extra.otz = {};\n\n        this.entity.extra.otz.fullDisclosure = this.fullDisclosure;\n        this.entity.extra.otz.dateOfFullDisclosure = this.dateOfFullDisclosure != null && this.dateOfFullDisclosure.isValid() ?\n            this.dateOfFullDisclosure.format(DATE_FORMAT) : null;\n        this.entity.extra.otz.dateEnrolledOnOTZ = this.dateEnrolledOnOTZ != null && this.dateEnrolledOnOTZ.isValid() ?\n            this.dateEnrolledOnOTZ.format(DATE_FORMAT) : null;\n        this.entity.extra.otz.attendedLastOTZMeeting = !!this.attendedLastOTZMeeting;\n        this.entity.extra.otz.dateLastOTZMeeting = this.dateLastOTZMeeting != null && this.dateLastOTZMeeting.isValid() ?\n            this.dateLastOTZMeeting.format(DATE_FORMAT) : null;\n        this.entity.extra.otz.enrolledOnOTZ = this.enrolledOnOTZ;\n        this.entity.extra.otz.caregiverPhone = this.caregiverPhone;\n        this.entity.extra.otz.caregiverAddress = this.caregiverAddress;\n        this.entity.extra.otz.modulesCompleted = this.modulesCompleted;\n\n        if (this.prep) {\n            this.entity.extra.prep = {};\n            this.entity.extra.prep.hivTestResult = this.hivTestResult;\n            this.entity.extra.prep.creatinineClearance = this.creatinineClearance;\n            this.entity.extra.prep.hepatitisB = this.hepatitisB;\n            this.entity.extra.prep.hepatitisC = this.hepatitisC;\n            this.entity.extra.prep.urinalysis = this.urinalysis;\n        }\n        this.entity.adverseDrugReactions = this.selectedClinicAdr.filter(cadr => !!cadr.severity);\n        this.entity.opportunisticInfections = this.oiList;\n        this.entity.adheres = this.adhereList;\n        this.appLoaderService.open('Saving clinic visit..');\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.clinicService.update(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.clinicService.create(this.entity));\n        }\n    }\n\n    regimenLineChange(type: any) {\n        this.clinicService.getRegimenByLine(type.id).subscribe(res => this.regimens = res);\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.onSaveError();\n                this.onError(res.message);\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.showInfo('Clinic visit successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.appLoaderService.close();\n        this.error = true;\n        // this.submitButton.disabled = true;\n        this.notification.showError('Error occurred saving clinic visit; try again');\n        // this.progressBar.mode = 'determinate';\n    }\n\n    protected onError(errorMessage: string) {\n        this.appLoaderService.close();\n        this.notification.showError(errorMessage);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpResponse} from '@angular/common/http';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes} from '@angular/router';\nimport {Observable, of} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\nimport {ClinicService} from './clinic.service';\nimport {Clinic} from '../model/clinic.model';\nimport {ClinicDetailsComponent} from '../components/clinic/clinic-details.component';\nimport {ClinicEditComponent} from '../components/clinic/clinic-edit.component';\n\n@Injectable()\nexport class ClinicResolve implements Resolve<Clinic> {\n    constructor(private service: ClinicService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Clinic> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<Clinic>) => response.ok),\n                map((patient: HttpResponse<Clinic>) => patient.body)\n            );\n        }\n        return of(<Clinic>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Clinic Visit',\n            breadcrumb: 'CLINIC VISIT'\n        },\n        children: [\n            {\n                path: ':id/patient/:patientId/view',\n                component: ClinicDetailsComponent,\n                resolve: {\n                    entity: ClinicResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Clinic Visit',\n                    breadcrumb: 'CLINIC VISIT'\n                },\n                // canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'patient/:patientId/new',\n                component: ClinicEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Clinic Visit',\n                    breadcrumb: 'ADD CLINIC VISIT'\n                },\n                // canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'art-commencement/patient/:patientId/new',\n                component: ClinicEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'ART Commencement /PrEP Initiation',\n                    breadcrumb: 'ADD ART COMMENCEMENT /PREP INITIATION',\n                    commence: true\n                },\n                // canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: ClinicEditComponent,\n                resolve: {\n                    entity: ClinicResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Clinic Visit Edit',\n                    breadcrumb: 'CLINIC VISIT EDIT'\n                },\n                // canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ClinicService} from '../../services/clinic.service';\nimport {Clinic} from '../../model/clinic.model';\nimport {CardViewDateItemModel, CardViewFloatItemModel, CardViewItem, CardViewTextItemModel} from '@alfresco/adf-core';\n\n@Component({\n    selector: 'clinic-widget',\n    templateUrl: './clinic.widget.html'\n})\nexport class ClinicWidget implements OnInit {\n    @Input()\n    patientId: number;\n    clinic: Clinic;\n    properties: CardViewItem[] = [];\n\n    constructor(private clinicService: ClinicService) {\n    }\n\n    ngOnInit(): void {\n        this.clinicService.latestVisit(this.patientId).subscribe((res) => {\n            this.clinic = res;\n            this.buildProperties();\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewDateItemModel({\n            key: 'dv',\n            value: this.clinic.dateVisit,\n            label: 'Last Clinic Visit',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewDateItemModel({\n            key: 'nv',\n            value: this.clinic.nextAppointment,\n            label: 'Next Clinic Visit',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Functional Status',\n            key: 'fs',\n            value: this.clinic.funcStatus\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Clinical Stage',\n            key: 'cs',\n            value: this.clinic.clinicStage\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'TB Status',\n            key: 'ts',\n            value: this.clinic.tbStatus\n        }));\n        this.properties.push(new CardViewFloatItemModel({\n            label: 'Body Weight(Kg)',\n            key: 'bw',\n            value: this.clinic.bodyWeight\n        }));\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatDatetimepickerModule, MatNativeDatetimeModule} from '@mat-datetimepicker/core';\n\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatOptionModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n        MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n        MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n        MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n        MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n        MatTooltipModule, MatDatetimepickerModule, MatNativeDatetimeModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {\n}\n","import {NgModule} from '@angular/core';\nimport {ClinicWidget} from './components/clinic/clinic.widget';\nimport {CommonModule} from '@angular/common';\nimport {CoreModule} from '@alfresco/adf-core';\nimport {MaterialModule} from './material.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule\n    ],\n    declarations: [\n        ClinicWidget\n    ],\n    entryComponents: [\n        ClinicWidget\n    ],\n    exports: [\n        ClinicWidget\n    ],\n    providers: []\n})\nexport class ClinicWidgetModule {\n\n}\n","import {CoreModule} from '@alfresco/adf-core';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatProgressBarModule,\n    MatSelectModule\n} from '@angular/material';\nimport {RouterModule} from '@angular/router';\nimport {CovalentDialogsModule, CovalentMessageModule} from '@covalent/core';\nimport {ClinicDetailsComponent} from './components/clinic/clinic-details.component';\nimport {ClinicEditComponent} from './components/clinic/clinic-edit.component';\nimport {ClinicResolve, ROUTES} from './services/clinic.route';\nimport {ClinicWidgetModule} from './clinic.widget.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {LamisSharedModule, MatDateFormatModule} from '@lamis/web-core';\nimport {CustomFormsModule} from 'ng2-validation';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\n\n@NgModule({\n    declarations: [\n        ClinicDetailsComponent,\n        ClinicEditComponent\n    ],\n    imports: [\n        CommonModule,\n        MatInputModule,\n        MatIconModule,\n        MatCardModule,\n        MatSelectModule,\n        MatButtonModule,\n        RouterModule.forChild(ROUTES),\n        MatProgressBarModule,\n        CovalentMessageModule,\n        CovalentDialogsModule,\n        MatListModule,\n        CoreModule,\n        ClinicWidgetModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDateFormatModule,\n        CustomFormsModule,\n        LamisSharedModule,\n        NgxDatatableModule,\n    ],\n    exports: [\n        ClinicDetailsComponent,\n        ClinicEditComponent\n    ],\n    entryComponents: [],\n    providers: [\n        ClinicResolve\n    ]\n})\nexport class ClinicModule {\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {DATE_FORMAT, SERVER_API_URL_CONFIG, ServerApiUrlConfig} from '@lamis/web-core';\nimport {ChronicCare, ChronicCareVm} from '../model/clinic.model';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport * as moment_ from 'moment';\nimport {Moment} from 'moment';\n\nconst moment = moment_;\n\n@Injectable({providedIn: 'root'})\nexport class ChronicCareService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/chronic-cares';\n    }\n\n    create(chronicCare: ChronicCare): Observable<HttpResponse<ChronicCare>> {\n        const copy = this.convertDateFromClient(chronicCare);\n        return this.http\n            .post<ChronicCare>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: HttpResponse<ChronicCare>) => this.convertDateFromServer(res)));\n    }\n\n    update(chronicCare: ChronicCare): Observable<HttpResponse<ChronicCare>> {\n        const copy = this.convertDateFromClient(chronicCare);\n        return this.http\n            .put<ChronicCare>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: HttpResponse<ChronicCare>) => this.convertDateFromServer(res)));\n    }\n\n    find(id: number): Observable<HttpResponse<ChronicCare>> {\n        return this.http\n            .get<ChronicCare>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<ChronicCare>) => this.convertDateFromServer(res)));\n    }\n\n    findByUuid(id: string): Observable<HttpResponse<ChronicCare>> {\n        return this.http\n            .get<ChronicCare>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<ChronicCare>) => this.convertDateFromServer(res)));\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    getDmScreens() {\n        return this.http.get(`${this.resourceUrl}/dm-screens`);\n    }\n\n    getTbScreens() {\n        return this.http.get(`${this.resourceUrl}/tb-screens`);\n    }\n\n    getDmScreenByChronicCare(id: number) {\n        return this.http.get(`${this.resourceUrl}/${id}/dm-screens`);\n    }\n\n    getTbScreenByChronicCare(id: number) {\n        return this.http.get(`${this.resourceUrl}/${id}/tb-screens`);\n    }\n\n    getVisitDatesByPatient(patientId: number) {\n        return this.http.get<Moment[]>(`${this.resourceUrl}/patient/${patientId}/visit-dates`)\n            .pipe(map((res) => {\n                    res.forEach(d => moment(d));\n                    return res;\n                })\n            );\n    }\n\n    protected convertDateFromServer(res: HttpResponse<ChronicCare>): HttpResponse<ChronicCare> {\n        if (res.body) {\n            res.body.dateLastCd4 = res.body.dateLastCd4 != null ? moment(res.body.dateLastCd4) : null;\n            res.body.dateVisit = res.body.dateVisit != null ? moment(res.body.dateVisit) : null;\n            res.body.dateLastViralLoad = res.body.dateLastViralLoad != null ? moment(res.body.dateLastViralLoad) : null;\n            res.body.dateStartedTbTreatment = res.body.dateStartedTbTreatment != null ? moment(res.body.dateStartedTbTreatment) : null;\n        }\n        return res;\n    }\n\n    protected convertDateFromClient(chronicCare: ChronicCare): ChronicCare {\n        chronicCare = Object.assign({}, chronicCare, {\n            dateLastViralLoad: chronicCare.dateLastViralLoad != null && chronicCare.dateLastViralLoad.isValid() ?\n                chronicCare.dateLastViralLoad.format(DATE_FORMAT) : null,\n            dateVisit: chronicCare.dateVisit != null && chronicCare.dateVisit.isValid() ?\n                chronicCare.dateVisit.format(DATE_FORMAT) : null,\n            dateLastCd4: chronicCare.dateLastCd4 != null && chronicCare.dateLastCd4.isValid() ?\n                chronicCare.dateLastCd4.format(DATE_FORMAT) : null,\n            dateStartedTbTreatment: chronicCare.dateStartedTbTreatment != null &&\n            chronicCare.dateStartedTbTreatment.isValid() ? chronicCare.dateStartedTbTreatment.format(DATE_FORMAT) : null\n        });\n        return chronicCare;\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ClinicService} from '../../services/clinic.service';\nimport {CardViewItem, NotificationService} from '@alfresco/adf-core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ChronicCare} from '../../model/clinic.model';\nimport {TdDialogService} from '@covalent/core';\nimport {ChronicCareService} from '../../services/chronic.care.service';\n\n@Component({\n    selector: 'chronic-care-detail',\n    templateUrl: './chronic.care.detail.component.html'\n})\nexport class ChronicCareDetailComponent implements OnInit {\n    properties: CardViewItem[] = [];\n    entity: ChronicCare;\n\n    constructor(private router: Router, private route: ActivatedRoute, private chronicCareService: ChronicCareService,\n                private _dialogService: TdDialogService, private notificationService: NotificationService,\n                private clinicService: ClinicService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            const patientId = this.route.snapshot.paramMap.get('patientId');\n            this.clinicService.getPatient(patientId).subscribe((res) => this.entity.patient = res);\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'chronic-cares', this.entity.uuid, 'patient', this.entity.patient.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this chronic care visit, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.chronicCareService.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['patients']);\n                    } else {\n                        this.notificationService.showError('Error deleting visit, please try again');\n                    }\n                });\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n\n    }\n\n\n    previousState() {\n        window.history.back();\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ChronicCare, ChronicCareDm, ChronicCareTB, Patient} from '../../model/clinic.model';\nimport {ClinicService} from '../../services/clinic.service';\nimport {NotificationService} from '@alfresco/adf-core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ChronicCareService} from '../../services/chronic.care.service';\nimport {Observable} from 'rxjs';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport * as moment_ from 'moment';\nimport {Moment} from 'moment';\nimport {AppLoaderService} from '@lamis/web-core';\n\nconst moment = moment_;\n\n@Component({\n    selector: 'chronic-care-edit',\n    templateUrl: './chronic.care.edit.component.html'\n})\nexport class ChronicCareEditComponent implements OnInit {\n    entity: ChronicCare;\n    patient: Patient;\n    today = moment();\n    tbs: ChronicCareTB[] = [];\n    dms: ChronicCareDm[] = [];\n    visitDates: Moment[] = [];\n    isSaving = false;\n    bmi = '';\n    bmiCalculated = '';\n\n    constructor(private clinicService: ClinicService,\n                private chronicCareService: ChronicCareService,\n                protected notification: NotificationService,\n                protected activatedRoute: ActivatedRoute,\n                private appLoaderService: AppLoaderService) {\n    }\n\n    createEntity(): ChronicCare {\n        return <ChronicCare>{};\n    }\n\n    ngOnInit(): void {\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\n            this.clinicService.getPatient(patientId).subscribe((res) => {\n                this.entity.patient = res;\n                this.entity.facility = res.facility;\n                this.chronicCareService.getVisitDatesByPatient(this.entity.patient.id).subscribe((res1) => {\n                    this.visitDates = res1;\n                });\n            });\n\n            this.calculateBmi();\n        });\n\n    }\n\n    filterDates(date: Moment): boolean {\n        let exists = false;\n\n        this.visitDates.forEach(d => {\n            if (date.diff(d, 'days') === 0) {\n                exists = true;\n            }\n        });\n        return (this.entity.id && date.diff(this.entity.dateVisit, 'days') === 0) || !exists;\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    calculateBmi() {\n        if (this.entity.bodyWeight && this.entity.height) {\n            const bmi = this.entity.bodyWeight / Math.pow(this.entity.height, 2);\n            if (bmi < 18.5) {\n                this.bmi = '<18.5 (Underweight)';\n            } else if (bmi < 24.9) {\n                this.bmi = '18.5 - 24.9 (Healthy)';\n            } else if (bmi < 29.9) {\n                this.bmi = '25.0 - 29.9 (Overweight)';\n            } else if (bmi < 40) {\n                this.bmi = '30 - 40 (Obesity)';\n            } else {\n                this.bmi = '>40 (Morbid Obesity)';\n            }\n            this.bmiCalculated = bmi.toFixed(1);\n        } else {\n            this.bmi = '';\n        }\n    }\n\n    save() {\n        // this.submitButton.disabled = true;\n        // this.progressBar.mode = 'indeterminate';\n        this.isSaving = true;\n        this.appLoaderService.open('Saving chronic care visit..');\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.chronicCareService.update(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.chronicCareService.create(this.entity));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.onSaveError();\n                this.onError(res.message);\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.showInfo('Chronic Care visit successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.appLoaderService.close();\n        // this.submitButton.disabled = true;\n        this.notification.showError('Error occurred saving chronic care visit; try again');\n        // this.progressBar.mode = 'determinate';\n    }\n\n    protected onError(errorMessage: string) {\n        this.appLoaderService.close();\n        this.notification.showError(errorMessage);\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpResponse} from '@angular/common/http';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes} from '@angular/router';\nimport {Observable, of} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\nimport {ChronicCare} from '../model/clinic.model';\nimport {ChronicCareService} from './chronic.care.service';\nimport {ChronicCareEditComponent} from '../components/chronic-care/chronic.care.edit.component';\nimport {ChronicCareDetailComponent} from '../components/chronic-care/chronic.care.detail.component';\n\n@Injectable()\nexport class ChronicCareResolve implements Resolve<ChronicCare> {\n    constructor(private service: ChronicCareService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ChronicCare> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<ChronicCare>) => response.ok),\n                map((patient: HttpResponse<ChronicCare>) => patient.body)\n            );\n        }\n        return of(<ChronicCare>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Chronic Care Visit',\n            breadcrumb: 'CHRONIC CARE VISIT'\n        },\n        children: [\n            {\n                path: ':id/patient/:patientId/view',\n                component: ChronicCareDetailComponent,\n                resolve: {\n                    entity: ChronicCareResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Chronic Care Visit',\n                    breadcrumb: 'CHRONIC CARE VISIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'patient/:patientId/new',\n                component: ChronicCareEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Chronic Care Visit',\n                    breadcrumb: 'ADD CHRONIC CARE VISIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: ChronicCareEditComponent,\n                resolve: {\n                    entity: ChronicCareResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Chronic Care Visit Edit',\n                    breadcrumb: 'CHRONIC CARE VISIT EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n","import {NgModule} from '@angular/core';\nimport {ChronicCareDetailComponent} from './components/chronic-care/chronic.care.detail.component';\nimport {ChronicCareEditComponent} from './components/chronic-care/chronic.care.edit.component';\nimport {ChronicCareResolve} from './services/chronic.care.route';\nimport {MaterialModule} from './material.module';\nimport {CoreModule} from '@alfresco/adf-core';\nimport {CustomFormsModule} from 'ng2-validation';\nimport {CommonModule} from '@angular/common';\nimport {CovalentDialogsModule} from '@covalent/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {LamisSharedModule, MatDateFormatModule} from '@lamis/web-core';\nimport {RouterModule} from '@angular/router';\nimport {ROUTES} from './services/chronic.care.route';\nimport {MatStepperModule} from '@angular/material';\n\n@NgModule({\n    declarations: [\n        ChronicCareDetailComponent,\n        ChronicCareEditComponent\n    ],\n    imports: [\n        CommonModule,\n        CovalentDialogsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        LamisSharedModule,\n        MaterialModule,\n        CoreModule,\n        CustomFormsModule,\n        MatDateFormatModule,\n        RouterModule.forChild(ROUTES),\n        MatStepperModule\n    ],\n    providers: [\n        ChronicCareResolve\n    ]\n})\nexport class ChronicCareModule {\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {DATE_FORMAT, SERVER_API_URL_CONFIG, ServerApiUrlConfig} from '@lamis/web-core';\nimport {EAC} from '../model/clinic.model';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport * as moment_ from 'moment';\nimport {Moment} from 'moment';\n\nconst moment = moment_;\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EacService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/eacs';\n    }\n\n    create(eac: EAC): Observable<HttpResponse<EAC>> {\n        const copy = this.convertDateFromClient(eac);\n        return this.http\n            .post<EAC>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    update(eac: EAC): Observable<HttpResponse<EAC>> {\n        const copy = this.convertDateFromClient(eac);\n        return this.http\n            .put<EAC>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    find(id: number): Observable<HttpResponse<EAC>> {\n        return this.http\n            .get<EAC>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    findByUuid(id: string): Observable<HttpResponse<EAC>> {\n        return this.http\n            .get<EAC>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    getLatestByPatient(uuid: string): Observable<HttpResponse<EAC>> {\n        return this.http\n            .get<EAC>(`${this.resourceUrl}/patient/${uuid}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    getLatestViralLoadByPatient(id: number, at: Moment): Observable<HttpResponse<any>> {\n        const date = at.format(DATE_FORMAT);\n        return this.http\n            .get<any>(`${this.resourceUrl}/patient/${id}/viral-load-result/at/${date}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<any>) => {\n                if (res.body) {\n                    res.body.laboratory.dateReported = res.body.laboratory.dateReported != null ?\n                        moment(res.body.laboratory.dateReported) : null;\n                }\n                return res;\n            }));\n    }\n\n    protected convertDateFromClient(eac: EAC): EAC {\n        const copy: EAC = Object.assign({}, eac, {\n            dateEac1: eac.dateEac1 != null && eac.dateEac1.isValid() ? eac.dateEac1.format(DATE_FORMAT) : null,\n            dateEac2: eac.dateEac2 != null && eac.dateEac2.isValid() ? eac.dateEac2.format(DATE_FORMAT) : null,\n            dateEac3: eac.dateEac3 != null && eac.dateEac3.isValid() ? eac.dateEac3.format(DATE_FORMAT) : null,\n            dateSampleCollected: eac.dateSampleCollected != null && eac.dateSampleCollected.isValid() ? eac.dateSampleCollected.format(DATE_FORMAT) : null,\n            dateLastViralLoad: eac.dateLastViralLoad != null && eac.dateLastViralLoad.isValid() ? eac.dateLastViralLoad.format(DATE_FORMAT) : null,\n        });\n        return copy;\n    }\n\n    protected convertDateFromServer(res: HttpResponse<EAC>): HttpResponse<EAC> {\n        if (res.body) {\n            res.body.dateLastViralLoad = res.body.dateLastViralLoad != null ? moment(res.body.dateLastViralLoad) : null;\n            res.body.dateEac1 = res.body.dateEac1 != null ? moment(res.body.dateEac1) : null;\n            res.body.dateEac2 = res.body.dateEac2 != null ? moment(res.body.dateEac2) : null;\n            res.body.dateEac3 = res.body.dateEac3 != null ? moment(res.body.dateEac3) : null;\n            res.body.dateSampleCollected = res.body.dateSampleCollected != null ? moment(res.body.dateSampleCollected) : null;\n        }\n        return res;\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {EAC} from '../../model/clinic.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {TdDialogService} from '@covalent/core';\nimport {CardViewDateItemModel, CardViewItem, CardViewTextItemModel, NotificationService} from '@alfresco/adf-core';\nimport {EacService} from '../../services/eac.service';\n\n@Component({\n    selector: 'eac-details',\n    templateUrl: './eac.details.component.html'\n})\nexport class EacDetailsComponent implements OnInit {\n    properties: CardViewItem[] = [];\n    entity: EAC;\n\n    constructor(private router: Router, private route: ActivatedRoute,\n                private _dialogService: TdDialogService, private notificationService: NotificationService,\n                private eacService: EacService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'eacs', this.entity.uuid, 'patient', this.entity.patient.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this EAC Record, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.eacService.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['patients']);\n                    } else {\n                        this.notificationService.showError('Error deleting visit, please try again');\n                    }\n                });\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewDateItemModel({\n            key: 'ds',\n            value: this.entity.dateLastViralLoad,\n            label: 'Date Last Viral Load',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            key: 'vl',\n            value: this.entity.lastViralLoad,\n            label: 'Last Viral Load'\n        }));\n        this.properties.push(new CardViewDateItemModel({\n            key: 'ds',\n            value: this.entity.dateEac1,\n            label: 'Date of 1st EAC Session',\n            format: 'dd MMM, yyyy'\n        }));\n        if (this.entity.dateEac2) {\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: this.entity.dateEac2,\n                label: 'Date of 2nd EAC Session',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n        if (this.entity.dateEac3) {\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: this.entity.dateEac3,\n                label: 'Date of 3rd EAC Session',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n        if (this.entity.dateEac3) {\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: this.entity.dateSampleCollected,\n                label: 'Date of Repeat VL Sample Collection',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Notes',\n            key: 'ts',\n            value: this.entity.notes\n        }));\n    }\n\n    previousState() {\n        window.history.back();\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport * as moment_ from 'moment';\nimport {Moment} from 'moment';\nimport {Observable} from 'rxjs';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport {ClinicService} from '../../services/clinic.service';\nimport {NotificationService} from '@alfresco/adf-core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AppLoaderService} from '@lamis/web-core';\nimport {EAC, Patient} from '../../model/clinic.model';\nimport {EacService} from '../../services/eac.service';\nimport {catchError, tap} from 'rxjs/operators';\n\nconst moment = moment_;\n\n\n@Component({\n    selector: 'eac-edit',\n    templateUrl: './eac.edit.component.html'\n})\nexport class EacEditComponent implements OnInit {\n    entity: EAC;\n    patient: Patient;\n    today = moment();\n    dateRegistration: Moment;\n    eac1Min: Moment;\n    eac2Min: Moment;\n    eac3Min: Moment;\n    repeatVLMin: Moment;\n    repeatVLMax: Moment;\n    isSaving: boolean = false;\n\n    constructor(private clinicService: ClinicService,\n                private eacService: EacService,\n                protected notification: NotificationService,\n                protected activatedRoute: ActivatedRoute,\n                private appLoaderService: AppLoaderService) {\n    }\n\n    createEntity(): EAC {\n        return <EAC>{};\n    }\n\n    ngOnInit(): void {\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\n            this.clinicService.getPatient(patientId).subscribe((res) => {\n                this.entity.patient = res;\n                this.entity.facility = res.facility;\n                this.dateRegistration = res.dateRegistration;\n                this.updateMinDates(res.id, moment());\n                if (!this.entity.id) {\n                    this.eacService.getLatestByPatient(res.uuid).subscribe(r => {\n                        this.entity = r.ok ? r.body : this.createEntity();\n                        this.repeatVLMin = this.entity.dateEac3 ? this.entity.dateEac3.clone().add(1, 'day') :\n                            this.entity.dateLastViralLoad;\n                        this.eac2Min = this.entity.dateEac1 ? this.entity.dateEac1.clone().add(2, 'week') :\n                            this.entity.dateLastViralLoad;\n                        this.eac3Min = this.entity.dateEac2 ? this.entity.dateEac2.clone().add(2, 'week') :\n                            this.entity.dateLastViralLoad;\n                    });\n                }\n            });\n\n        });\n    }\n\n    updateMinDates(id: number, date: Moment) {\n        this.eacService.getLatestViralLoadByPatient(id, date).pipe(tap((r: any) => {\n                this.entity.dateLastViralLoad = moment(r.laboratory.dateResultReceived);\n                this.entity.lastViralLoad = r.result;\n                this.eac1Min = this.entity.dateLastViralLoad.clone().add(1, 'day');\n                this.eac2Min = this.entity.dateEac1 ? this.entity.dateEac1.clone().add(2, 'week') :\n                    this.entity.dateLastViralLoad;\n                this.eac3Min = this.entity.dateEac2 ? this.entity.dateEac2.clone().add(2, 'week') :\n                    this.entity.dateLastViralLoad;\n                this.repeatVLMin = this.entity.dateEac3 ? this.entity.dateEac3.clone().add(1, 'day') :\n                    this.entity.dateLastViralLoad;\n            }),\n            catchError((err: any) => {\n                this.entity.dateLastViralLoad = null;\n                this.entity.lastViralLoad = null;\n                this.eac1Min = this.entity.patient.dateRegistration.clone().add(1, 'day');\n                this.eac2Min = this.entity.dateEac1 ? this.entity.dateEac1.clone().add(2, 'week') :\n                    this.entity.dateLastViralLoad;\n                this.eac3Min = this.entity.dateEac2 ? this.entity.dateEac2.clone().add(2, 'week') :\n                    this.entity.dateLastViralLoad;\n                this.repeatVLMin = this.entity.dateEac3 ? this.entity.dateEac3.clone().add(1, 'day') :\n                    this.entity.dateLastViralLoad;\n                return null;\n            }));\n    }\n\n    dateEac1Changed(date: Moment) {\n        this.eac2Min = date.clone().add(2, 'weeks');\n        this.updateMinDates(this.entity.patient.id, date);\n    }\n\n    dateEac2Changed(date: Moment) {\n        this.eac3Min = date.clone().add(2, 'weeks');\n    }\n\n    dateEac3Changed(date: Moment) {\n        this.repeatVLMin = date.clone().add(1, 'days');\n        this.repeatVLMax = date.clone().add(6, 'months');\n    }\n\n    save() {\n        //this.submitButton.disabled = true;\n        //this.progressBar.mode = 'indeterminate';\n        this.isSaving = true;\n        this.appLoaderService.open('Saving EAC session..');\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.eacService.update(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.eacService.create(this.entity));\n        }\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.onSaveError();\n                this.onError(res.message);\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.openSnackMessage('EAC session successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.appLoaderService.close();\n        //this.submitButton.disabled = true;\n        this.notification.showError('Error occurred saving EAC session; try again');\n        //this.progressBar.mode = 'determinate';\n    }\n\n    protected onError(errorMessage: string) {\n        this.appLoaderService.close();\n        this.notification.showError(errorMessage);\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes} from '@angular/router';\nimport {EAC} from '../model/clinic.model';\nimport {Observable, of} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\nimport {HttpResponse} from '@angular/common/http';\nimport {EacService} from './eac.service';\nimport {EacEditComponent} from '../components/eac/eac.edit.component';\nimport {EacDetailsComponent} from '../components/eac/eac.details.component';\n\n@Injectable()\nexport class EacResolve implements Resolve<EAC> {\n    constructor(private service: EacService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<EAC> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<EAC>) => response.ok),\n                map((patient: HttpResponse<EAC>) => patient.body)\n            );\n        }\n        return of(<EAC>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'EAC Session',\n            breadcrumb: 'EAC SESSION'\n        },\n        children: [\n            {\n                path: ':id/patient/:patientId/view',\n                component: EacDetailsComponent,\n                resolve: {\n                    entity: EacResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'EAC Session',\n                    breadcrumb: 'EAC SESSION'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'patient/:patientId/new',\n                component: EacEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'EAC Session',\n                    breadcrumb: 'ADD EAC SESSION',\n                    commence: true\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: EacEditComponent,\n                resolve: {\n                    entity: EacResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'EAC Session Edit',\n                    breadcrumb: 'EAC SESSION EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n","import {NgModule} from '@angular/core';\nimport {EacDetailsComponent} from './components/eac/eac.details.component';\nimport {EacEditComponent} from './components/eac/eac.edit.component';\nimport {EacResolve, ROUTES} from './services/eac.route';\nimport {CommonModule} from '@angular/common';\nimport {CovalentDialogsModule} from '@covalent/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {LamisSharedModule, MatDateFormatModule} from '@lamis/web-core';\nimport {MaterialModule} from './material.module';\nimport {CoreModule} from '@alfresco/adf-core';\nimport {CustomFormsModule} from 'ng2-validation';\nimport {RouterModule} from '@angular/router';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        CovalentDialogsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        LamisSharedModule,\n        MaterialModule,\n        CoreModule,\n        CustomFormsModule,\n        MatDateFormatModule,\n        RouterModule.forChild(ROUTES)\n    ],\n    declarations: [\n        EacDetailsComponent,\n        EacEditComponent\n    ],\n    providers: [\n        EacResolve\n    ]\n})\nexport class EacModule {\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport {SERVER_API_URL_CONFIG, ServerApiUrlConfig} from '@lamis/web-core';\nimport {Facility} from '../model/facility.model';\nimport {CaseManager, CaseManagerStats, Patient} from '../model/case-management.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CaseManagementService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/case-management';\n    }\n\n    initClients(facilityId: number) {\n        return this.http.get(`${this.resourceUrl}/init-clients/${facilityId}`);\n    }\n\n    getClientList(req: any) {\n        return this.http.post<Patient[]>(`${this.resourceUrl}/client-list`, req, {observe: 'response'});\n    }\n\n    getCaseManagerStats(caseManagerId: number, facilityId: number) {\n        return this.http.get<CaseManagerStats>(`${this.resourceUrl}/facility/${facilityId}/case-manager/${caseManagerId}/stats`);\n    }\n\n    getActiveFacility() {\n        return this.http.get<Facility>('/api/facilities/active');\n    }\n\n    getCaseManagers(facilityId: number) {\n        return this.http.get<CaseManager[]>(`${this.resourceUrl}/facility/${facilityId}/case-managers`);\n    }\n\n    assignToCaseManager(caseManagerId: number, ids: number[]) {\n        let params = new HttpParams();\n        ids.forEach(id => params = params.append('ids', id.toString()));\n        return this.http.get(`${this.resourceUrl}/case-manager/${caseManagerId}/assign-clients`, {\n            params,\n            observe: 'response'\n        });\n    }\n\n    deAssignClients(ids: number[]) {\n        let params = new HttpParams();\n        ids.forEach(id => params = params.append('ids', id.toString()));\n        return this.http.get(`${this.resourceUrl}/de-assign-clients`, {\n            params,\n            observe: 'response'\n        });\n    }\n\n    getStates() {\n        return this.http.get<any[]>('/api/states');\n    }\n\n    getLgasByState(id) {\n        return this.http.get<any[]>(`/api/provinces/state/${id}`);\n    }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {CaseManager, CaseManagerStats, Patient} from '../../model/case-management.model';\nimport {CaseManagementService} from '../../services/case-management.service';\nimport {CardViewIntItemModel, CardViewItem, NotificationService} from '@alfresco/adf-core';\nimport {TdDialogService} from '@covalent/core';\nimport {Subscription} from 'rxjs';\nimport {RxStompService} from '@stomp/ng2-stompjs';\n\nexport interface Filter {\n    upperAgeLimit?: number;\n    lowerAgeLimit?: number;\n    pregnant?: boolean;\n    breastfeeding?: boolean;\n    lgaId?: number;\n    facilityId?: number;\n    status?: string;\n    gender?: string;\n    hospitalNum?: string;\n    page?: number;\n    size?: number;\n    assigned?: boolean;\n    caseManagerId?: number;\n}\n\n@Component({\n    selector: 'case-management-patient-list',\n    templateUrl: './patient.list.component.html'\n})\nexport class PatientListComponent implements OnInit, OnDestroy {\n    caseManagers: CaseManager[] = [];\n    caseManager: CaseManager;\n    assignCaseManager: CaseManager;\n    patients: Patient[] = [];\n    properties: Array<CardViewItem> = [];\n    globalProperties: Array<CardViewItem> = [];\n    stats: CaseManagerStats = {};\n    globalStats: CaseManagerStats = {};\n    facilityId: number;\n    filter: Filter = {};\n    ageLimit: number;\n    pregnancyStatus: number;\n    states: any[];\n    lgas: any[];\n    hospitalNum = '';\n    totalItems = 0;\n    page = 0;\n    itemsPerPage = 20;\n    loading = true;\n    initializing = true;\n    filterByCaseManager = false;\n    private topicSubscription: Subscription;\n\n    constructor(private service: CaseManagementService, private _dialogService: TdDialogService,\n                private notificationService: NotificationService, private stompService: RxStompService) {\n    }\n\n    ngOnInit(): void {\n        /*this.topicSubscription = this.stompService.watch('/topic/case-management').subscribe((msg: Message) => {\n            console.log('Simp Message', msg);\n            if(msg.body === 'finished'){\n                this.initializing = false;\n            }\n        });*/\n\n        this.service.getActiveFacility().subscribe((f) => {\n            if (f) {\n                this.facilityId = f.id;\n                this.service.initClients(f.id).subscribe((r) => {\n                    this.initializing = false;\n                    this.service.getCaseManagers(f.id).subscribe(res => {\n                        this.caseManagers = res.filter(c => c.active);\n                        this.updateList();\n                    });\n                });\n\n                this.service.getCaseManagerStats(0, f.id).subscribe(res => {\n                    this.stats = res;\n                    this.buildStats();\n                });\n            }\n        });\n        this.service.getStates().subscribe(res => this.states = res);\n    }\n\n    ngOnDestroy(): void {\n        // this.topicSubscription.unsubscribe();\n    }\n\n    clearHospitalNum() {\n        this.hospitalNum = null;\n        this.filter['hospitalNum'] = null;\n        this.page = 0;\n    }\n\n    search() {\n        this.page = 0;\n        this.updateList();\n    }\n\n    assignClients() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to assign selected clients to the selected Case Manager?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                const patientIds = this.patients.filter(p => p.selected)\n                    .map(p => p.id);\n                this.service.assignToCaseManager(this.assignCaseManager.id, patientIds).subscribe((res) => {\n                    if (res.ok) {\n                        this.updateList();\n                        this.service.getCaseManagerStats(this.caseManager.id, this.facilityId).subscribe(res1 => {\n                            this.stats = res1;\n                            this.buildStats();\n                        });\n                    } else {\n                        this.notificationService.showError('Error assigning clients, please try again');\n                    }\n                });\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    deAssignClients() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to de-assign selected clients?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                const patientIds = this.patients.filter(p => p.selected)\n                    .map(p => p.id);\n                this.service.deAssignClients(patientIds).subscribe((res) => {\n                    if (res.ok) {\n                        this.updateList();\n                        this.service.getCaseManagerStats(this.caseManager.id, this.facilityId).subscribe(res1 => {\n                            this.stats = res1;\n                            this.buildStats();\n                        });\n                    } else {\n                        this.notificationService.showError('Error de-assigning clients, please try again');\n                    }\n                });\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    selections(): boolean {\n        return this.patients && !!this.patients.find(p => p.selected);\n    }\n\n    loadPage(page) {\n        this.page = page;\n        this.updateList();\n    }\n\n    select(event) {\n        this.patients = this.patients.map(p => {\n            if (p.id === event.obj.id) {\n                p.selected = !p.selected;\n            }\n            return p;\n        });\n    }\n\n    caseManagerChanged() {\n        if (!this.caseManager) {\n            this.stats = null;\n        }\n        this.service.getCaseManagerStats(this.caseManager.id, this.facilityId).subscribe(res => {\n            this.stats = res;\n            this.buildStats();\n        });\n        if (this.filterByCaseManager) {\n            this.filter['caseManagerId'] = this.caseManager.id;\n        } else {\n            this.filter['caseManagerId'] = null;\n        }\n        this.updateList();\n    }\n\n    updateList() {\n        if (this.hospitalNum) {\n            this.filter.hospitalNum = this.hospitalNum;\n        }\n        this.filter['facilityId'] = this.facilityId;\n        this.filter['size'] = this.itemsPerPage;\n        this.filter['page'] = this.page > 0 ? this.page - 1 : 0;\n        if (this.filterByCaseManager) {\n            this.filter['caseManagerId'] = this.caseManager.id;\n        } else {\n            this.filter['caseManagerId'] = null;\n        }\n        this.loading = true;\n        this.service.getClientList(this.filter).subscribe(res => {\n            if (res.body) {\n                this.patients = res.body.map(p => {\n                    const caseManager = this.caseManagers.find(c => c.id === p.caseManagerId);\n                    if (caseManager) {\n                        p.caseManager = caseManager;\n                    }\n                    return p;\n                });\n                this.totalItems = (<any>res.headers).get('X-Total-Count');\n                this.service.getCaseManagerStats(0, this.facilityId).subscribe(res1 => {\n                    this.globalStats = res1;\n                    this.buildGlobalStats();\n                });\n            }\n            this.loading = false;\n        });\n    }\n\n    ageGroupChanged() {\n        if (this.ageLimit === 9) {\n            this.filter['lowerAgeLimit'] = 0;\n            this.filter['upperAgeLimit'] = 9;\n        } else if (this.ageLimit === 14) {\n            this.filter['lowerAgeLimit'] = 10;\n            this.filter['upperAgeLimit'] = 14;\n        } else if (this.ageLimit === 19) {\n            this.filter['lowerAgeLimit'] = 15;\n            this.filter['upperAgeLimit'] = 19;\n        } else if (this.ageLimit === 24) {\n            this.filter['lowerAgeLimit'] = 20;\n            this.filter['upperAgeLimit'] = 24;\n        } else if (this.ageLimit === 100) {\n            this.filter['lowerAgeLimit'] = 25;\n            this.filter['upperAgeLimit'] = 100;\n        }\n        if (!this.ageLimit) {\n            this.filter['lowerAgeLimit'] = null;\n            this.filter['upperAgeLimit'] = null;\n        }\n        this.updateList();\n    }\n\n    pregnancyStatusChanged() {\n        if (this.pregnancyStatus === 1) {\n            this.filter['pregnant'] = true;\n        } else if (this.pregnancyStatus === 2) {\n            this.filter['breastfeeding'] = true;\n        }\n        if (!this.pregnancyStatus) {\n            this.filter['pregnant'] = null;\n            this.filter['breastfeeding'] = null;\n        }\n        this.updateList();\n    }\n\n    stateChanged(id) {\n        if (id) {\n            this.service.getLgasByState(id).subscribe(res => this.lgas = res);\n        }\n    }\n\n    assigned(val) {\n        if (val === 1) {\n            this.filter.assigned = true;\n        } else if (val === 2) {\n            this.filter.assigned = false;\n        } else {\n            this.filter.assigned = null;\n        }\n        this.updateList();\n    }\n\n    lgaChanged(id) {\n        if (id) {\n            this.filter.lgaId = id;\n        } else {\n            this.filter.lgaId = null;\n        }\n        this.updateList();\n    }\n\n    buildStats() {\n        this.properties = [];\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Clients(s) Assigned',\n            key: 'as',\n            value: this.stats.assigned\n        }));\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Stable 1 Year',\n            key: 'as',\n            value: this.stats.stable\n        }));\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Unstable less than 1 Year',\n            key: 'as',\n            value: this.stats.unstableLessThan1year\n        }));\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Unstable more than 1 Year',\n            key: 'as',\n            value: this.stats.unstableMoreThan1Year\n        }));\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Awaiting ART',\n            key: 'as',\n            value: this.stats.preArt\n        }));\n    }\n\n    buildGlobalStats() {\n        this.globalProperties = [];\n        if (this.globalStats) {\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Clients(s) Assigned',\n                key: 'as',\n                value: this.globalStats.assigned\n            }));\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Stable 1 Year',\n                key: 'as',\n                value: this.globalStats.stable\n            }));\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Unstable less than 1 Year',\n                key: 'as',\n                value: this.globalStats.unstableLessThan1year\n            }));\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Unstable more than 1 Year',\n                key: 'as',\n                value: this.globalStats.unstableMoreThan1Year\n            }));\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Awaiting ART',\n                key: 'as',\n                value: this.globalStats.preArt\n            }));\n        }\n    }\n}\n","import {Routes} from '@angular/router';\nimport {PatientListComponent} from '../components/case-management/patient.list.component';\n\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Case Management',\n            breadcrumb: 'CASE MANAGEMENT'\n        },\n        children: [\n            {\n                path: '',\n                children: [\n                    {\n                        path: '',\n                        component: PatientListComponent,\n                        data: {\n                            authorities: ['ROLE_USER'],\n                            title: 'Case Management',\n                            breadcrumb: 'CASE MANAGEMENT'\n                        }\n                    }\n                ],\n                data: {\n                    title: 'Case Management',\n                    breadcrumb: 'CASE MANAGEMENT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n","import {NgModule} from '@angular/core';\nimport {PatientListComponent} from './components/case-management/patient.list.component';\nimport {MaterialModule} from './material.module';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {CoreModule} from '@alfresco/adf-core';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {CovalentDialogsModule, CovalentSearchModule} from '@covalent/core';\nimport {ROUTES} from './services/case-management.route';\nimport {RouterModule} from '@angular/router';\nimport {LamisSharedModule} from '@lamis/web-core';\n\n@NgModule({\n    imports: [\n        MaterialModule,\n        FormsModule,\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        CoreModule,\n        NgbModule,\n        CovalentSearchModule,\n        CovalentDialogsModule,\n        LamisSharedModule,\n    ],\n    declarations: [\n        PatientListComponent\n    ],\n    providers: []\n})\nexport class CaseManagementModule {\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {createRequestOption, SERVER_API_URL_CONFIG, ServerApiUrlConfig} from '@lamis/web-core';\nimport {Observable} from 'rxjs';\nimport {CaseManager} from '../model/case-management.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CaseManagerService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/case-managers';\n    }\n\n    create(caseManager: CaseManager): Observable<HttpResponse<CaseManager>> {\n        return this.http\n            .post<CaseManager>(this.resourceUrl, caseManager, {observe: 'response'});\n    }\n\n    update(caseManager: CaseManager): Observable<HttpResponse<CaseManager>> {\n        return this.http\n            .put<CaseManager>(this.resourceUrl, caseManager, {observe: 'response'});\n    }\n\n    find(id: number): Observable<HttpResponse<CaseManager>> {\n        return this.http\n            .get<CaseManager>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    findByUuid(id: string): Observable<HttpResponse<CaseManager>> {\n        return this.http\n            .get<CaseManager>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'});\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    query(req?: any): Observable<HttpResponse<CaseManager[]>> {\n        const options = createRequestOption(req);\n        return this.http\n            .get<CaseManager[]>(this.resourceUrl, {params: options, observe: 'response'});\n    }\n}\n","import {Component} from '@angular/core';\nimport {CardViewBoolItemModel, CardViewItem, CardViewTextItemModel, NotificationService} from '@alfresco/adf-core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {TdDialogService} from '@covalent/core';\nimport {CaseManager} from '../../model/case-management.model';\nimport {CaseManagerService} from '../../services/case-manager.service';\n\n@Component({\n    selector: 'case-manager-details',\n    templateUrl: './case-manager.details.component.html'\n})\nexport class CaseManagerDetailsComponent {\n    properties: CardViewItem[] = [];\n    entity: CaseManager;\n\n    constructor(private router: Router, private route: ActivatedRoute, private service: CaseManagerService,\n                private _dialogService: TdDialogService,\n                private notificationService: NotificationService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'admin', 'case-managers', this.entity.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this Case Manager, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.service.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['admin', 'case-managers']);\n                    } else {\n                        this.notificationService.showError('Error deleting Case Manager, please try again');\n                    }\n                });\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Name',\n            key: 'cs',\n            value: this.entity.name\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Address',\n            key: 'fs',\n            value: this.entity.address\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Gender',\n            key: 'ts',\n            value: this.entity.gender === 'FEMALE' ? 'Female' : 'Male'\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Telephone',\n            key: 'cd4p',\n            value: this.entity.phoneNumber\n        }));\n        this.properties.push(new CardViewBoolItemModel({\n            label: 'Active',\n            key: 'cd4p',\n            value: this.entity.active\n        }));\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CaseManager} from '../../model/case-management.model';\nimport {NotificationService} from '@alfresco/adf-core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AppLoaderService} from '@lamis/web-core';\nimport {CaseManagementService} from '../../services/case-management.service';\nimport {CaseManagerService} from '../../services/case-manager.service';\nimport {Observable} from 'rxjs';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\n\n@Component({\n    selector: 'case-manager-edit',\n    templateUrl: './case-manager.edit.component.html'\n})\nexport class CaseManagerEditComponent implements OnInit {\n    entity: CaseManager;\n    isSaving: boolean;\n\n    constructor(private caseManagementService: CaseManagementService,\n                private caseManagerService: CaseManagerService,\n                protected notification: NotificationService,\n                protected activatedRoute: ActivatedRoute,\n                private appLoaderService: AppLoaderService) {\n    }\n\n    createEntity(): CaseManager {\n        return <CaseManager>{};\n    }\n\n    ngOnInit(): void {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n\n            this.caseManagementService.getActiveFacility().subscribe((res: any) => {\n                this.entity.facility = res;\n            });\n        });\n    }\n\n    save() {\n        this.isSaving = true;\n        this.appLoaderService.open('Saving Case Manager..');\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.caseManagerService.update(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.caseManagerService.create(this.entity));\n        }\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.onSaveError();\n                this.onError(res.message);\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.openSnackMessage('Case Manager successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.appLoaderService.close();\n        //this.submitButton.disabled = true;\n        this.notification.showError('Error occurred saving Case Manager; try again');\n        //this.progressBar.mode = 'determinate';\n    }\n\n    protected onError(errorMessage: string) {\n        this.appLoaderService.close();\n        this.notification.showError(errorMessage);\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CaseManager} from '../../model/case-management.model';\nimport {CaseManagerService} from '../../services/case-manager.service';\nimport {NotificationService} from '@alfresco/adf-core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CaseManagementService} from '../../services/case-management.service';\nimport {Facility} from '../../model/facility.model';\n\n@Component({\n    selector: 'case-managers',\n    templateUrl: './case-manager.list.component.html'\n})\nexport class CaseManagerListComponent implements OnInit {\n    page = 0;\n    caseManagers: CaseManager[];\n    loading = false;\n    public itemsPerPage: number = 200;\n    public currentSearch: string = '';\n    totalItems = 0;\n    display = 'list';\n    facility: Facility;\n\n    constructor(private caseManagerService: CaseManagerService,\n                private caseManagementService: CaseManagementService,\n                protected notification: NotificationService,\n                protected router: Router,\n                protected activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.caseManagementService.getActiveFacility().subscribe(res => {\n            this.facility = res;\n            this.onPageChange(0);\n        });\n    }\n\n    public select(data: any): any {\n        this.router.navigate(['..', 'case-managers', data.obj.uuid, 'view'], {relativeTo: this.activatedRoute});\n    }\n\n    onPageChange(pageInfo) {\n        this.page = pageInfo;\n        this.loadAll();\n    }\n\n    loadPage(page: number) {\n        this.page = page;\n        this.loadAll();\n    }\n\n    loadAll() {\n        this.loading = true;\n        this.caseManagerService.query({\n            keyword: this.currentSearch,\n            page: 0,\n            id: this.facility && this.facility.id || 0,\n            size: this.itemsPerPage,\n            sort: ['id', 'asc']\n        }).subscribe(\n            (res: any) => {\n                this.onSuccess(res.body, res.headers);\n            },\n            (res: any) => this.onError(res)\n        );\n    }\n\n    protected onSuccess(data: any, headers: any) {\n        this.caseManagers = data;\n        this.totalItems = headers.get('X-Total-Count');\n        this.loading = false;\n    }\n\n    private onError(error: any) {\n        this.notification.openSnackMessage(error.message);\n        this.loading = false;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes} from '@angular/router';\nimport {Observable, of} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\nimport {HttpResponse} from '@angular/common/http';\nimport {CaseManagerDetailsComponent} from '../components/case-management/case-manager.details.component';\nimport {CaseManager} from '../model/case-management.model';\nimport {CaseManagerService} from './case-manager.service';\nimport {CaseManagerEditComponent} from '../components/case-management/case-manager.edit.component';\nimport {CaseManagerListComponent} from '../components/case-management/case-manager.list.component';\n\n@Injectable()\nexport class CaseManagerResolve implements Resolve<CaseManager> {\n    constructor(private service: CaseManagerService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<CaseManager> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<CaseManager>) => response.ok),\n                map((patient: HttpResponse<CaseManager>) => patient.body)\n            );\n        }\n        return of(<CaseManager>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Case Manager',\n            breadcrumb: 'CASE MANAGERS'\n        },\n        children: [\n            {\n                path: '',\n                component: CaseManagerListComponent,\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Case Managers',\n                    breadcrumb: 'CASE MANAGERS'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/view',\n                component: CaseManagerDetailsComponent,\n                resolve: {\n                    entity: CaseManagerResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Case Manager',\n                    breadcrumb: 'CASE MANAGER'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'new',\n                component: CaseManagerEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Add Case Manager',\n                    breadcrumb: 'ADD CASE MANAGER'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/edit',\n                component: CaseManagerEditComponent,\n                resolve: {\n                    entity: CaseManagerResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Case Manager Edit',\n                    breadcrumb: 'CASE MANAGER EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n","import {NgModule} from '@angular/core';\nimport {CaseManagerDetailsComponent} from './components/case-management/case-manager.details.component';\nimport {CaseManagerEditComponent} from './components/case-management/case-manager.edit.component';\nimport {CaseManagerListComponent} from './components/case-management/case-manager.list.component';\nimport {MaterialModule} from './material.module';\nimport {CoreModule} from '@alfresco/adf-core';\nimport {CaseManagerResolve, ROUTES} from './services/case-manager.route';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {CovalentDialogsModule, CovalentSearchModule} from '@covalent/core';\nimport {LamisSharedModule} from '@lamis/web-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        CoreModule,\n        NgbModule,\n        CovalentSearchModule,\n        CovalentDialogsModule,\n        LamisSharedModule,\n    ],\n    declarations: [\n        CaseManagerDetailsComponent,\n        CaseManagerEditComponent,\n        CaseManagerListComponent\n    ],\n    providers: [\n        CaseManagerResolve\n    ]\n})\nexport class CaseManagerModule {\n}\n","import {Inject, Injectable} from '@angular/core';\n\nimport * as moment_ from 'moment';\nimport {SERVER_API_URL_CONFIG, ServerApiUrlConfig} from '@lamis/web-core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Observation} from '../model/clinic.model';\n\nconst moment = moment_;\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CervicalCancerScreeningService {\n    public resourceUrl = '';\n    public observationResourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/cervical-cancer-screenings';\n        this.observationResourceUrl = serverUrl.SERVER_API_URL + '/api/observations';\n    }\n\n    find(id: string) {\n        return this.http.get<Observation>(`${this.observationResourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map(res => {\n                console.log('Response1', res);\n                res.body.date = res.body.date != null ? moment(res.body.date) : null;\n                res.body.data.dateTreated = res.body.data.dateTreated != null ? moment(res.body.data.dateTreated) : null;\n                res.body.data.dateScreened = res.body.data.dateScreened != null ? moment(res.body.data.dateScreened) : null;\n                return res;\n            }));\n    }\n\n    findByUuid(id: string) {\n        return this.find(id);\n    }\n\n    delete(id: string) {\n        return this.http.delete(`${this.observationResourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    save(data: any): Observable<HttpResponse<Observation>> {\n        return this.http.post<Observation>(`${this.observationResourceUrl}`, data, {observe: 'response'})\n            .pipe(map(res => {\n                res.body.data.dateTreated = res.body.data.dateTreated != null ? moment(res.body.data.dateTreated) : null;\n                res.body.data.dateScreened = res.body.data.dateScreened != null ? moment(res.body.data.dateScreened) : null;\n                return res;\n            }));\n    }\n\n    update(data: any): Observable<HttpResponse<Observation>> {\n        return this.http.put<Observation>(`${this.observationResourceUrl}`, data, {observe: 'response'})\n            .pipe(map(res => {\n                res.body.data.dateTreated = res.body.data.dateTreated != null ? moment(res.body.data.dateTreated) : null;\n                res.body.data.dateScreened = res.body.data.dateScreened != null ? moment(res.body.data.dateScreened) : null;\n                return res;\n            }));\n    }\n\n    getScreeningByPatient(id: number) {\n        return this.http.get<any>(`${this.resourceUrl}/patient/${id}`, {observe: 'response'})\n            .pipe(map(res => {\n                res.body.data = res.body.data.cervicalCancerScreening;\n                res.body.date = res.body.date != null ? moment(res.body.date) : null;\n                res.body.data.dateTreated = res.body.data.dateTreated != null ? moment(res.body.data.dateTreated) : null;\n                res.body.data.dateScreened = res.body.data.dateScreened != null ? moment(res.body.data.dateScreened) : null;\n                return res;\n            }));\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CervicalCancerScreening, Observation, Patient} from '../../model/clinic.model';\nimport * as moment_ from 'moment';\nimport {Observable} from 'rxjs';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport {ClinicService} from '../../services/clinic.service';\nimport {NotificationService} from '@alfresco/adf-core';\nimport {ActivatedRoute} from '@angular/router';\nimport {AppLoaderService, DATE_FORMAT} from '@lamis/web-core';\nimport {CervicalCancerScreeningService} from '../../services/cervical-cancer-screening.service';\n\nconst moment = moment_;\n\n@Component({\n    selector: 'cancer-screening',\n    templateUrl: './cervical-cancer-screening.component.html'\n})\nexport class CervicalCancerScreeningComponent implements OnInit {\n    entity: CervicalCancerScreening = {};\n    patient: Patient;\n    observation: Observation = {};\n    today = moment();\n    isSaving: boolean = false;\n\n    constructor(private clinicService: ClinicService,\n                private screeningService: CervicalCancerScreeningService,\n                protected notification: NotificationService,\n                protected activatedRoute: ActivatedRoute,\n                private appLoaderService: AppLoaderService) {\n    }\n\n    ngOnInit(): void {\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.observation = !!entity && entity.body ? entity.body : entity;\n            if (!!this.observation) {\n                this.entity = this.observation.data;\n            } else {\n                this.observation = {};\n            }\n\n            if (this.entity === undefined) {\n                this.entity = {};\n            }\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\n            this.clinicService.getPatient(patientId).subscribe((res) => {\n                this.patient = res;\n                if (!!this.entity) {\n                    this.screeningService.getScreeningByPatient(res.id).subscribe(r => {\n                        this.entity = r.body && r.body.data;\n                        this.observation = r.body;\n                    });\n                }\n            });\n        });\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n\n    save() {\n        //this.submitButton.disabled = true;\n        //this.progressBar.mode = 'indeterminate';\n        this.isSaving = true;\n        this.appLoaderService.open('Saving cancer screening..');\n\n        const data = {\n            id: this.observation && this.observation.id || null,\n            patient: this.patient,\n            date: this.entity.dateScreened.format(DATE_FORMAT),\n            facility: this.patient.facility,\n            type: 'CERVICAL_CANCER_SCREENING',\n            data: {\n                cervicalCancerScreening: Object.assign({}, this.entity, {\n                    dateScreened: this.entity.dateScreened != null && this.entity.dateScreened.isValid() ?\n                        this.entity.dateScreened.format(DATE_FORMAT) : null,\n                    dateTreated: this.entity.dateTreated != null && this.entity.dateTreated.isValid() ?\n                        this.entity.dateTreated.format(DATE_FORMAT) : null,\n                })\n            }\n        };\n        if (!!this.observation.id) {\n            this.subscribeToSaveResponse(this.screeningService.update(data));\n        } else {\n            this.subscribeToSaveResponse(this.screeningService.save(data));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.onSaveError();\n                this.onError(res.message);\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.showInfo('Cancer screening successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.appLoaderService.close();\n        //this.submitButton.disabled = true;\n        this.notification.showError('Error occurred saving cancer screening; try again');\n        //this.progressBar.mode = 'determinate';\n    }\n\n    protected onError(errorMessage: string) {\n        this.appLoaderService.close();\n        this.notification.showError(errorMessage);\n    }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {\n    CardViewBoolItemModel,\n    CardViewDateItemModel,\n    CardViewItem,\n    CardViewTextItemModel,\n    NotificationService\n} from '@alfresco/adf-core';\nimport {CervicalCancerScreening, Observation, Patient} from '../../model/clinic.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {TdDialogService} from '@covalent/core';\nimport {CervicalCancerScreeningService} from '../../services/cervical-cancer-screening.service';\nimport {ClinicService} from '../../services/clinic.service';\n\nconst RESULT = {\n    NEGATIVE: 'Negative',\n    POSITIVE: 'Positive',\n    SUSPICIOUS: 'Suspicious Cancerous Lesions'\n};\n\nconst METHOD = {\n    VIA: 'Visual Inspection with Acetric Acid (VIA)',\n    VILI: 'Visual Inspection with Lugos Iodine (VILI)',\n    PAP_SMEAR: 'PAP Smear'\n};\nconst LESION_METHOD = {\n    CRYOTHERAPY: 'Cryotherapy',\n    THERMAL_ABLATION: 'Thermal Ablation/ Thermocoagulation',\n    LEETZ_LEEP: 'LEETZ/ LEEP',\n    CONIZATION: 'Conization Knifer/ Lagor'\n};\n\nconst TYPE = {\n    FIRST_TIME: 'First Time',\n    FOLLOWUP: 'Followup after previous negative result or suspected cancer',\n    POST_TREATMENT_FOLLOWUP: 'Post-treatment Followup'\n};\n\n@Component({\n    selector: 'cervical-screening-detail',\n    templateUrl: './cervical-cancer-screening-detail.component.html'\n})\nexport class CervicalCancerScreeningDetailComponent implements OnInit {\n\n    properties: CardViewItem[] = [];\n    entity: CervicalCancerScreening;\n    observation: Observation;\n    patient: Patient;\n\n    constructor(private router: Router, private route: ActivatedRoute, private screeningService: CervicalCancerScreeningService,\n                private _dialogService: TdDialogService, private clinicService: ClinicService,\n                private notificationService: NotificationService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body.data.cervicalCancerScreening : entity.data.cervicalCancerScreening;\n            this.observation = !!entity && entity.body ? entity.body : entity;\n\n            const patientId = this.route.snapshot.paramMap.get('patientId');\n            this.clinicService.getPatient(patientId).subscribe((res) => this.patient = res);\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'cervical-cancer-screening', this.observation.id, 'patient', this.patient.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this Cervical cancer screening, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.screeningService.delete(this.observation.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['patients']);\n                    } else {\n                        this.notificationService.showError('Error deleting screening, please try again');\n                    }\n                });\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewDateItemModel({\n            key: 'ds',\n            value: this.observation.date,\n            label: 'Date of Screening',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            key: 'na',\n            value: TYPE[this.entity.screeningType],\n            label: 'Screening Type',\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Screening Method',\n            key: 'fs',\n            value: METHOD[this.entity.screeningMethod]\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Result',\n            key: 'adr',\n            value: RESULT[this.entity.screeningResult]\n        }));\n        this.properties.push(new CardViewBoolItemModel({\n            label: 'Referred for Treatment',\n            key: 'bw',\n            value: this.entity.referredForTreatment\n        }));\n\n        if (!!this.entity.referredForTreatment) {\n            this.properties.push(new CardViewTextItemModel({\n                label: 'Precancerous Lesions Treatment method',\n                key: 'adr',\n                value: LESION_METHOD[this.entity.precancerousLesionsTreatmentMethod]\n            }));\n\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: this.entity.dateTreated,\n                label: 'Date of Treated',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n}\n","import {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes} from '@angular/router';\nimport {Injectable} from '@angular/core';\nimport {Observation} from '../model/clinic.model';\nimport {Observable, of} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\nimport {HttpResponse} from '@angular/common/http';\nimport {CervicalCancerScreeningService} from './cervical-cancer-screening.service';\nimport {CervicalCancerScreeningDetailComponent} from '../components/cervical-cancer-screening/cervical-cancer-screening-detail.component';\nimport {CervicalCancerScreeningComponent} from '../components/cervical-cancer-screening/cervical-cancer-screening.component';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ObservationResolve implements Resolve<Observation> {\n    constructor(private service: CervicalCancerScreeningService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Observation> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(\n                filter((response: HttpResponse<Observation>) => response.ok),\n                map((patient: HttpResponse<Observation>) => patient.body)\n            );\n        }\n        return of(<Observation>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Cervical Cancer Screening',\n            breadcrumb: 'CERVICAL CANCER SCREENING'\n        },\n        children: [\n            {\n                path: ':id/patient/:patientId/view',\n                component: CervicalCancerScreeningDetailComponent,\n                resolve: {\n                    entity: ObservationResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Cervical Cancer Screening',\n                    breadcrumb: 'CERVICAL CANCER SCREENING'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'patient/:patientId/new',\n                component: CervicalCancerScreeningComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Cervical Cancer Screening',\n                    breadcrumb: 'ADD CERVICAL CANCER SCREENING'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: CervicalCancerScreeningComponent,\n                resolve: {\n                    entity: ObservationResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Cervical Cancer Screening',\n                    breadcrumb: 'CERVICAL CANCER SCREENING EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n","import {NgModule} from '@angular/core';\nimport {CervicalCancerScreeningComponent} from './components/cervical-cancer-screening/cervical-cancer-screening.component';\nimport {MaterialModule} from './material.module';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {CervicalCancerScreeningDetailComponent} from './components/cervical-cancer-screening/cervical-cancer-screening-detail.component';\nimport {LamisSharedModule, MatDateFormatModule} from '@lamis/web-core';\nimport {CoreModule} from '@alfresco/adf-core';\nimport {RouterModule} from '@angular/router';\nimport {ObservationResolve, ROUTES} from './services/cervical-cancer-screening.route';\nimport {CovalentDialogsModule, CovalentMessageModule} from '@covalent/core';\nimport {CustomFormsModule} from 'ng2-validation';\n\n@NgModule({\n    imports: [\n        MaterialModule,\n        FormsModule,\n        CommonModule,\n        MatDateFormatModule,\n        CoreModule,\n        RouterModule.forChild(ROUTES),\n        CovalentMessageModule,\n        CovalentDialogsModule,\n        CustomFormsModule,\n        LamisSharedModule,\n    ],\n    declarations: [\n        CervicalCancerScreeningComponent,\n        CervicalCancerScreeningDetailComponent\n    ],\n    providers: [\n        //ObservationResolve\n    ]\n})\nexport class CervicalCancerModule {\n\n}\n","/*\n * Public API Surface of Clinic\n */\n\nexport * from './lib/model/clinic.model';\nexport * from './lib/services/clinic.service';\nexport * from './lib/clinic.module';\nexport * from './lib/clinic.widget.module';\nexport * from './lib/services/chronic.care.service';\nexport * from './lib/chronic.care.module';\nexport * from './lib/eac.module';\nexport * from './lib/case-management.module';\nexport * from './lib/case-manager.module';\nexport * from './lib/cervical-cancer.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {CaseManagerDetailsComponent as Éµx} from './lib/components/case-management/case-manager.details.component';\nexport {CaseManagerEditComponent as Éµy} from './lib/components/case-management/case-manager.edit.component';\nexport {CaseManagerListComponent as Éµv} from './lib/components/case-management/case-manager.list.component';\nexport {PatientListComponent as Éµr} from './lib/components/case-management/patient.list.component';\nexport {CervicalCancerScreeningDetailComponent as Éµbb} from './lib/components/cervical-cancer-screening/cervical-cancer-screening-detail.component';\nexport {CervicalCancerScreeningComponent as Éµbd} from './lib/components/cervical-cancer-screening/cervical-cancer-screening.component';\nexport {ChronicCareDetailComponent as Éµh} from './lib/components/chronic-care/chronic.care.detail.component';\nexport {ChronicCareEditComponent as Éµi} from './lib/components/chronic-care/chronic.care.edit.component';\nexport {ClinicDetailsComponent as Éµa} from './lib/components/clinic/clinic-details.component';\nexport {ClinicEditComponent as Éµb} from './lib/components/clinic/clinic-edit.component';\nexport {ClinicWidget as Éµg} from './lib/components/clinic/clinic.widget';\nexport {EacDetailsComponent as Éµn} from './lib/components/eac/eac.details.component';\nexport {EacEditComponent as Éµp} from './lib/components/eac/eac.edit.component';\nexport {MaterialModule as Éµf,modules as Éµe} from './lib/material.module';\nexport {ROUTES as Éµq} from './lib/services/case-management.route';\nexport {CaseManagementService as Éµs} from './lib/services/case-management.service';\nexport {CaseManagerResolve as Éµt,ROUTES as Éµu} from './lib/services/case-manager.route';\nexport {CaseManagerService as Éµw} from './lib/services/case-manager.service';\nexport {ObservationResolve as Éµz,ROUTES as Éµba} from './lib/services/cervical-cancer-screening.route';\nexport {CervicalCancerScreeningService as Éµbc} from './lib/services/cervical-cancer-screening.service';\nexport {ChronicCareResolve as Éµj,ROUTES as Éµk} from './lib/services/chronic.care.route';\nexport {ClinicResolve as Éµc,ROUTES as Éµd} from './lib/services/clinic.route';\nexport {EacResolve as Éµl,ROUTES as Éµm} from './lib/services/eac.route';\nexport {EacService as Éµo} from './lib/services/eac.service';"],"names":["tslib_1.__param","moment","tslib_1.__decorate","ROUTES"],"mappings":"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"}
{
    "version": 3,
    "file": "lamis-clinic-1.1.3.js",
    "sources": [
        "ng://lamis-clinic-1.1.3/lib/services/clinic.service.ts",
        "ng://lamis-clinic-1.1.3/lib/components/clinic/clinic-details.component.ts",
        "ng://lamis-clinic-1.1.3/lib/components/clinic/clinic-edit.component.ts",
        "ng://lamis-clinic-1.1.3/lib/services/clinic.route.ts",
        "ng://lamis-clinic-1.1.3/lib/components/clinic/clinic.widget.ts",
        "ng://lamis-clinic-1.1.3/lib/material.module.ts",
        "ng://lamis-clinic-1.1.3/lib/clinic.widget.module.ts",
        "ng://lamis-clinic-1.1.3/lib/clinic.module.ts",
        "ng://lamis-clinic-1.1.3/lib/services/chronic.care.service.ts",
        "ng://lamis-clinic-1.1.3/lib/components/chronic-care/chronic.care.detail.component.ts",
        "ng://lamis-clinic-1.1.3/lib/components/chronic-care/chronic.care.edit.component.ts",
        "ng://lamis-clinic-1.1.3/lib/services/chronic.care.route.ts",
        "ng://lamis-clinic-1.1.3/lib/chronic.care.module.ts",
        "ng://lamis-clinic-1.1.3/lib/services/eac.service.ts",
        "ng://lamis-clinic-1.1.3/lib/components/eac/eac.details.component.ts",
        "ng://lamis-clinic-1.1.3/lib/components/eac/eac.edit.component.ts",
        "ng://lamis-clinic-1.1.3/lib/services/eac.route.ts",
        "ng://lamis-clinic-1.1.3/lib/eac.module.ts",
        "ng://lamis-clinic-1.1.3/lib/services/case-management.service.ts",
        "ng://lamis-clinic-1.1.3/lib/components/case-management/patient.list.component.ts",
        "ng://lamis-clinic-1.1.3/lib/services/case-management.route.ts",
        "ng://lamis-clinic-1.1.3/lib/case-management.module.ts",
        "ng://lamis-clinic-1.1.3/lib/services/case-manager.service.ts",
        "ng://lamis-clinic-1.1.3/lib/components/case-management/case-manager.details.component.ts",
        "ng://lamis-clinic-1.1.3/lib/components/case-management/case-manager.edit.component.ts",
        "ng://lamis-clinic-1.1.3/lib/components/case-management/case-manager.list.component.ts",
        "ng://lamis-clinic-1.1.3/lib/services/case-manager.route.ts",
        "ng://lamis-clinic-1.1.3/lib/case-manager.module.ts",
        "ng://lamis-clinic-1.1.3/public_api.ts",
        "ng://lamis-clinic-1.1.3/lamis-clinic-1.1.3.ts"
    ],
    "sourcesContent": [
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { DATE_FORMAT, SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { map } from 'rxjs/operators';\nimport {\n    Clinic,\n    ClinicAdhere,\n    ClinicAdverseDrugReaction,\n    ClinicOpportunisticInfection,\n    ClinicVm,\n    Patient\n} from '../model/clinic.model';\n\nimport * as moment_ from 'moment';\nimport { Moment } from 'moment';\n\nconst moment = moment_;\n\ntype EntityResponseType = HttpResponse<Clinic>;\ntype EntityArrayResponseType = HttpResponse<Clinic[]>;\n\n@Injectable({providedIn: 'root'})\nexport class ClinicService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/clinics';\n    }\n\n    create(vm: ClinicVm): Observable<EntityResponseType> {\n        vm['clinic'] = this.convertDateFromClient(vm.clinic);\n        vm['oiScreened'] = !!vm.oiList ? 'Yes' : 'No';\n        vm['adrScreened'] = !!vm.adrList ? 'Yes' : 'No';\n        return this.http\n            .post<Clinic>(this.resourceUrl, vm, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    update(vm: ClinicVm): Observable<EntityResponseType> {\n        vm['clinic'] = this.convertDateFromClient(vm.clinic);\n        vm['oiScreened'] = !!vm.oiList ? 'Yes' : 'No';\n        vm['adrScreened'] = !!vm.adrList ? 'Yes' : 'No';\n        return this.http\n            .put<Clinic>(this.resourceUrl, vm, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    find(id: number): Observable<EntityResponseType> {\n        return this.http\n            .get<Clinic>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    findByUuid(id: string): Observable<EntityResponseType> {\n        return this.http\n            .get<Clinic>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    getVisitDatesByPatient(patientId: number) {\n        return this.http.get<Moment[]>(`${this.resourceUrl}/patient/${patientId}/visit-dates`)\n            .pipe(map((res) => {\n                    res.forEach(d => moment(d));\n                    return res;\n                })\n            )\n    }\n\n    getPatient(id: any) {\n        return this.http.get<Patient>(`/api/patients/by-uuid/${id}`, {observe: 'body'})\n            .pipe(map((res) => {\n                if (res) {\n                    res.dateRegistration = res.dateRegistration != null ? moment(res.dateRegistration) : null;\n                    res.dateBirth = res.dateBirth != null ? moment(res.dateBirth) : null;\n                }\n                return res;\n            }))\n    }\n\n    getRegimenLines() {\n        return this.http.get<any[]>(`${this.resourceUrl}/regimen-types`)\n    }\n\n    getRegimenByLine(id) {\n        return this.http.get<any[]>(`${this.resourceUrl}/regimens/regimen-type/${id}`)\n    }\n\n    adverseDrugReactions() {\n        return this.http.get<any[]>(`${this.resourceUrl}/adverse-drug-reactions`)\n    }\n\n    opportunisticInfections() {\n        return this.http.get<any[]>(`${this.resourceUrl}/opportunistic-infections`)\n    }\n\n    adheres() {\n        return this.http.get<any[]>(`${this.resourceUrl}/adheres`)\n    }\n\n    regimes(regimenType: number) {\n        return this.http.get(`${this.resourceUrl}/regimens/${regimenType}`)\n    }\n\n    latestVisit(patientId: number) {\n        return this.http.get<Clinic>(`${this.resourceUrl}/patient/${patientId}/latest`)\n    }\n\n    getOpportunisticInfectionsByClinic(clinicId: number) {\n        return this.http.get<ClinicOpportunisticInfection[]>(`${this.resourceUrl}/${clinicId}/opportunistic-infections`)\n    }\n\n    getAdverseDrugReactionsByClinic(clinicId: number) {\n        return this.http.get<ClinicAdverseDrugReaction[]>(`${this.resourceUrl}/${clinicId}/adverse-drug-reactions`, {observe: 'response'})\n    }\n\n    getAdhereByClinic(clinicId: number) {\n        return this.http.get<ClinicAdhere[]>(`${this.resourceUrl}/${clinicId}/adheres`)\n    }\n\n    protected convertDateFromClient(clinic: Clinic): Clinic {\n        const copy: Clinic = Object.assign({}, clinic, {\n            dateVisit: clinic.dateVisit != null && clinic.dateVisit.isValid() ? clinic.dateVisit.format(DATE_FORMAT) : null,\n            lmp: clinic.lmp != null && clinic.lmp.isValid() ? clinic.lmp.format(DATE_FORMAT) : null,\n            nextAppointment: clinic.nextAppointment != null && clinic.nextAppointment.isValid() ? clinic.nextAppointment.format(DATE_FORMAT) : null,\n            pregnant: clinic.pregnancyStatus != null && clinic.pregnancyStatus === 2,\n            breastfeeding: clinic.pregnancyStatus != null && clinic.pregnancyStatus === 3,\n            bp: clinic.bp1 > 0 && clinic.bp2 > 0 ? clinic.bp1 + '/' + clinic.bp2 : null\n        });\n        return copy;\n    }\n\n    protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n        if (res.body) {\n            res.body.nextAppointment = res.body.nextAppointment != null ? moment(res.body.nextAppointment) : null;\n            res.body.dateVisit = res.body.dateVisit != null ? moment(res.body.dateVisit) : null;\n            res.body.lmp = res.body.lmp != null ? moment(res.body.lmp) : null;\n            res.body.pregnancyStatus = res.body.pregnant ? 2 : res.body.breastfeeding ? 3 : 1;\n            if (res.body.bp) {\n                const parts = res.body.bp.split('/');\n                res.body.bp1 = parseInt(parts[0]);\n                res.body.bp2 = parts.length === 2 ? parseInt(parts[1]) : null;\n            }\n        }\n        return res;\n    }\n\n    protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n        if (res.body) {\n            res.body.forEach((clinic: Clinic) => {\n                clinic.dateVisit = clinic.dateVisit != null ? moment(clinic.dateVisit) : null;\n                clinic.lmp = clinic.lmp != null ? moment(clinic.lmp) : null;\n                clinic.nextAppointment = clinic.nextAppointment != null ? moment(clinic.nextAppointment) : null;\n                clinic.pregnancyStatus = clinic.pregnant ? 2 : clinic.breastfeeding ? 3 : 1\n            });\n        }\n        return res;\n    }\n}\n",
        "import { Component, ComponentFactoryResolver, OnDestroy, OnInit } from '@angular/core';\r\nimport { Clinic } from '../../model/clinic.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ClinicService } from '../../services/clinic.service';\r\nimport { TdDialogService } from '@covalent/core';\r\nimport {\r\n    CardViewBoolItemModel,\r\n    CardViewDateItemModel,\r\n    CardViewFloatItemModel,\r\n    CardViewIntItemModel,\r\n    CardViewItem,\r\n    CardViewTextItemModel,\r\n    NotificationService\r\n} from '@alfresco/adf-core';\r\n\r\n@Component({\r\n    selector: 'lamis-clinic',\r\n    templateUrl: './clinic-details.component.html'\r\n})\r\nexport class ClinicDetailsComponent implements OnInit, OnDestroy {\r\n    properties: CardViewItem[] = [];\r\n    entity: Clinic;\r\n\r\n    constructor(private router: Router, private route: ActivatedRoute, private clinicService: ClinicService,\r\n                private cfr: ComponentFactoryResolver, private _dialogService: TdDialogService,\r\n                private notificationService: NotificationService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.data.subscribe(({entity}) => {\r\n            this.entity = !!entity && entity.body ? entity.body : entity;\r\n            const patientId = this.route.snapshot.paramMap.get(\"patientId\");\r\n            this.clinicService.getPatient(patientId).subscribe((res) => this.entity.patient = res);\r\n            this.buildProperties();\r\n        });\r\n    }\r\n\r\n    edit() {\r\n        this.router.navigate(['/', 'clinics', this.entity.uuid, 'patient', this.entity.patient.uuid, 'edit']);\r\n    }\r\n\r\n    delete() {\r\n        this._dialogService.openConfirm({\r\n            title: 'Confirm',\r\n            message: 'Do you want to delete this clinic visit, action cannot be reversed?',\r\n            cancelButton: 'No',\r\n            acceptButton: 'Yes',\r\n            width: '500px',\r\n        }).afterClosed().subscribe((accept: boolean) => {\r\n            if (accept) {\r\n                this.clinicService.delete(this.entity.id).subscribe((res) => {\r\n                    if (res.ok) {\r\n                        this.router.navigate(['patients'])\r\n                    } else {\r\n                        this.notificationService.showError('Error deleting visit, please try again')\r\n                    }\r\n                })\r\n            } else {\r\n                // DO SOMETHING ELSE\r\n            }\r\n        });\r\n    }\r\n\r\n    buildProperties() {\r\n        this.properties.push(new CardViewDateItemModel({\r\n            key: 'ds',\r\n            value: this.entity.dateVisit,\r\n            label: this.entity.commence ? 'ART Start Date' : 'Date Visit',\r\n            format: 'dd MMM, yyyy'\r\n        }));\r\n        if (this.entity.commence) {\r\n            this.properties.push(new CardViewIntItemModel({\r\n                label: 'CD4 at start of ART',\r\n                key: 'cd4',\r\n                value: this.entity.cd4p || null\r\n            }));\r\n            this.properties.push(new CardViewFloatItemModel({\r\n                label: 'CD4%',\r\n                key: 'cd4p',\r\n                value: this.entity.cd4p || null\r\n            }));\r\n            this.properties.push(new CardViewTextItemModel({\r\n                label: 'Original Regimen Line',\r\n                key: 'rl',\r\n                value: this.entity.regimenType != null ? this.entity.regimenType.description : ''\r\n            }));\r\n            this.properties.push(new CardViewTextItemModel({\r\n                label: 'Original Regimen',\r\n                key: 'rl',\r\n                value: this.entity.regimen != null ? this.entity.regimen.description : ''\r\n            }));\r\n        }\r\n        this.properties.push(new CardViewTextItemModel({\r\n            label: 'Clinical Stage',\r\n            key: 'cs',\r\n            value: this.entity.clinicStage\r\n        }));\r\n        this.properties.push(new CardViewTextItemModel({\r\n            label: 'Functional Status',\r\n            key: 'fs',\r\n            value: this.entity.funcStatus\r\n        }));\r\n        this.properties.push(new CardViewTextItemModel({\r\n            label: 'TB Status',\r\n            key: 'ts',\r\n            value: this.entity.tbStatus\r\n        }));\r\n        this.properties.push(new CardViewFloatItemModel({\r\n            label: 'Body Weight(Kg)',\r\n            key: 'bw',\r\n            value: this.entity.bodyWeight || null\r\n        }));\r\n        this.properties.push(new CardViewFloatItemModel({\r\n            label: 'Height(m)',\r\n            key: 'h',\r\n            value: this.entity.height || null\r\n        }));\r\n        this.properties.push(new CardViewTextItemModel({\r\n            label: 'Blood Pressure',\r\n            key: 'cd4p',\r\n            value: this.entity.bp\r\n        }));\r\n        if (this.entity.patient.gender === 'Female') {\r\n            this.properties.push(new CardViewBoolItemModel({\r\n                label: 'Pregnant',\r\n                key: 'pg',\r\n                value: this.entity.pregnant\r\n            }));\r\n            this.properties.push(new CardViewBoolItemModel({\r\n                label: 'Breastfeeding',\r\n                key: 'bf',\r\n                value: this.entity.breastfeeding\r\n            }));\r\n            this.properties.push(new CardViewDateItemModel({\r\n                key: 'lpm',\r\n                value: this.entity.lmp,\r\n                label: 'LMP',\r\n                format: 'dd MMM, yyyy'\r\n            }));\r\n        }\r\n        this.properties.push(new CardViewTextItemModel({\r\n            label: 'Level of Adherence',\r\n            key: 'ts',\r\n            value: this.entity.tbStatus\r\n        }));\r\n        this.properties.push(new CardViewDateItemModel({\r\n            key: 'na',\r\n            value: this.entity.nextAppointment,\r\n            label: 'Next Appointment Date',\r\n            format: 'dd MMM, yyyy'\r\n        }));\r\n    }\r\n\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n    }\r\n}\r\n",
        "import { Component, OnInit } from '@angular/core';\r\nimport {\r\n    Adhere,\r\n    AdverseDrugReaction,\r\n    Clinic,\r\n    ClinicAdverseDrugReaction,\r\n    ClinicVm,\r\n    OpportunisticInfection\r\n} from '../../model/clinic.model';\r\nimport { ClinicService } from '../../services/clinic.service';\r\nimport { NotificationService } from '@alfresco/adf-core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment_ from 'moment';\r\nimport { Moment } from 'moment';\r\nimport { AppLoaderService, entityCompare } from '@lamis/web-core';\r\nimport { ColumnMode } from '@swimlane/ngx-datatable';\r\n\r\nconst moment = moment_;\r\n\r\n@Component({\r\n    selector: 'lamis-clinic-edit',\r\n    templateUrl: './clinic-edit.component.html'\r\n})\r\nexport class ClinicEditComponent implements OnInit {\r\n    //@ViewChild(MatProgressBar, {static: true}) progressBar: MatProgressBar;\r\n    //@ViewChild(MatButton, {static: true}) submitButton: MatButton;\r\n    entity: Clinic;\r\n    isSaving: boolean;\r\n    error = false;\r\n    commence: any;\r\n    today = moment();\r\n    lmpMin: Moment;\r\n    appointmentMax: Moment;\r\n    appointmentMin: Moment;\r\n    opportunisticInfections: OpportunisticInfection[];\r\n    adverseDrugReactions: AdverseDrugReaction[];\r\n    adheres: Adhere[];\r\n    regimenLines: any[];\r\n    regimens: any[];\r\n    dateBirth: Moment;\r\n    dateRegistration: Moment;\r\n    visitDates: Moment[] = [];\r\n    selectedClinicAdr: ClinicAdverseDrugReaction[] = [];\r\n    oiList: OpportunisticInfection[] = [];\r\n    adhereList: Adhere[] = [];\r\n    ColumnMode = ColumnMode;\r\n    adr = false;\r\n\r\n    constructor(private clinicService: ClinicService,\r\n                protected notification: NotificationService,\r\n                protected activatedRoute: ActivatedRoute,\r\n                private appLoaderService: AppLoaderService) {\r\n    }\r\n\r\n    createEntity(): Clinic {\r\n        return <Clinic>{};\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clinicService.opportunisticInfections().subscribe(res => this.opportunisticInfections = res);\r\n        this.clinicService.adheres().subscribe(res => this.adheres = res);\r\n        this.isSaving = false;\r\n        this.clinicService.getRegimenLines().subscribe(res => {\r\n            this.regimenLines = res;\r\n        });\r\n        this.activatedRoute.data.subscribe(({entity}) => {\r\n            this.commence = !!this.activatedRoute.snapshot.data['commence'];\r\n\r\n            this.entity = !!entity && entity.body ? entity.body : entity;\r\n            if (this.entity === undefined) {\r\n                this.entity = this.createEntity();\r\n            }\r\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\r\n            this.clinicService.getPatient(patientId).subscribe((res) => {\r\n                this.entity.patient = res;\r\n                this.entity.facility = res.facility;\r\n                this.dateBirth = res.dateBirth;\r\n                this.dateRegistration = res.dateRegistration;\r\n\r\n                this.clinicService.getVisitDatesByPatient(this.entity.patient.id).subscribe((res) => {\r\n                    this.visitDates = res;\r\n                });\r\n            });\r\n            if (this.entity.commence && this.entity.regimenType) {\r\n                this.regimenLineChange(this.entity.regimenType);\r\n            }\r\n            this.commence = this.commence || this.entity.commence;\r\n\r\n            if (this.commence) {\r\n                this.entity.commence = true;\r\n                if (this.entity.regimenType) {\r\n                    this.regimenLineChange(this.entity.regimenType);\r\n                }\r\n                if(this.entity.patient.statusAtRegistration === 'ART_TRANSFER_IN') {\r\n                    this.dateRegistration = this.entity.patient.dateRegistration.clone().subtract(10, 'years');\r\n                    if (this.dateRegistration.isBefore(this.entity.patient.dateBirth)) {\r\n                        this.dateRegistration = this.entity.patient.dateBirth.clone().add(3, 'months');\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.entity.id) {\r\n                this.appointmentMin = this.entity.dateVisit.clone().add(14, 'days');\r\n                this.appointmentMax = this.entity.dateVisit.clone().add(6, 'months');\r\n                this.clinicService.getAdhereByClinic(this.entity.id).subscribe((res) => {\r\n                    this.adhereList = res.map(ca => ca.adhere);\r\n                });\r\n                this.clinicService.adverseDrugReactions().subscribe(res1 => {\r\n                    this.adverseDrugReactions = res1;\r\n                    this.clinicService.getAdverseDrugReactionsByClinic(this.entity.id).subscribe(res => {\r\n                        if (res.body && res.body.length > 0) {\r\n                            this.adr = true;\r\n                        }\r\n                        this.adverseDrugReactions.forEach(adr => {\r\n                            let found = false;\r\n                            if (res.body) {\r\n                                res.body.forEach(cadr => {\r\n                                    if (cadr.adverseDrugReaction.id === adr.id) {\r\n                                        found = true;\r\n                                        this.selectedClinicAdr.push(cadr)\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (!found) {\r\n                                this.selectedClinicAdr.push({\r\n                                    adverseDrugReaction: adr\r\n                                })\r\n                            }\r\n                        });\r\n                        this.selectedClinicAdr = [...this.selectedClinicAdr];\r\n                    });\r\n                });\r\n                this.clinicService.getOpportunisticInfectionsByClinic(this.entity.id).subscribe(res => {\r\n                    this.oiList = res.map(co => co.opportunisticInfection)\r\n                })\r\n            } else {\r\n                this.clinicService.adverseDrugReactions().subscribe(res => {\r\n                    this.adverseDrugReactions = res;\r\n                    this.adverseDrugReactions.forEach(adr => {\r\n                        this.selectedClinicAdr.push({\r\n                            adverseDrugReaction: adr\r\n                        })\r\n                    });\r\n                });\r\n\r\n                this.selectedClinicAdr = [...this.selectedClinicAdr];\r\n            }\r\n        });\r\n    }\r\n\r\n    updateValue(event, cell, row: ClinicAdverseDrugReaction) {\r\n        console.log('Edit', event, cell, row);\r\n        this.selectedClinicAdr = [...this.selectedClinicAdr.map(cadr => {\r\n            if (cadr.adverseDrugReaction.id === row.id) {\r\n                cadr.severity = event;\r\n            }\r\n            return cadr;\r\n        })];\r\n        console.log('UPDATED!', row, event);\r\n    }\r\n\r\n\r\n    filterDates(date: Moment): boolean {\r\n        let exists = false;\r\n\r\n        this.visitDates.forEach(d => {\r\n            if (date.diff(d, 'days') === 0) {\r\n                exists = true;\r\n            }\r\n        });\r\n        return (this.entity.id && date.diff(this.entity.dateVisit, 'days') === 0) || !exists;\r\n    }\r\n\r\n    dateChanged(date: Moment) {\r\n        this.appointmentMax = date.clone().add(6, 'months');\r\n        this.lmpMin = date.clone().subtract(2, 'years');\r\n        this.appointmentMin = date.clone().add(14, 'days');\r\n    }\r\n\r\n    entityCompare(e1, e2) {\r\n        return entityCompare(e1, e2)\r\n    }\r\n\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n\r\n    save() {\r\n        this.isSaving = true;\r\n        const vm: ClinicVm = {\r\n            clinic: this.entity,\r\n            adrList: this.selectedClinicAdr.filter(cadr => !!cadr.severity),\r\n            oiList: this.oiList,\r\n            adhereList: this.adhereList\r\n        };\r\n        this.appLoaderService.open('Saving clinic visit..');\r\n        if (this.entity.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.clinicService.update(vm));\r\n        } else {\r\n            this.subscribeToSaveResponse(this.clinicService.create(vm));\r\n        }\r\n    }\r\n\r\n    regimenLineChange(type: any) {\r\n        this.clinicService.getRegimenByLine(type.id).subscribe(res => this.regimens = res);\r\n    }\r\n\r\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\r\n        result.subscribe(\r\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\r\n            (res: HttpErrorResponse) => {\r\n                this.onSaveError();\r\n                this.onError(res.message)\r\n            });\r\n    }\r\n\r\n    private onSaveSuccess(result: any) {\r\n        this.appLoaderService.close();\r\n        this.isSaving = false;\r\n        this.notification.openSnackMessage('Clinic visit successfully saved');\r\n        this.previousState();\r\n    }\r\n\r\n    private onSaveError() {\r\n        this.isSaving = false;\r\n        this.appLoaderService.close();\r\n        this.error = true;\r\n        //this.submitButton.disabled = true;\r\n        this.notification.showError('Error occurred saving clinic visit; try again');\r\n        //this.progressBar.mode = 'determinate';\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.appLoaderService.close();\r\n        this.notification.showError(errorMessage);\r\n    }\r\n}\r\n",
        "import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ClinicService } from './clinic.service';\nimport { Clinic } from '../model/clinic.model';\nimport { ClinicDetailsComponent } from '../components/clinic/clinic-details.component';\nimport { ClinicEditComponent } from '../components/clinic/clinic-edit.component';\n\n@Injectable()\nexport class ClinicResolve implements Resolve<Clinic> {\n    constructor(private service: ClinicService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Clinic> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<Clinic>) => response.ok),\n                map((patient: HttpResponse<Clinic>) => patient.body)\n            );\n        }\n        return of(<Clinic>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Clinic Visit',\n            breadcrumb: 'CLINIC VISIT'\n        },\n        children: [\n            {\n                path: ':id/patient/:patientId/view',\n                component: ClinicDetailsComponent,\n                resolve: {\n                    entity: ClinicResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Clinic Visit',\n                    breadcrumb: 'CLINIC VISIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'patient/:patientId/new',\n                component: ClinicEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Clinic Visit',\n                    breadcrumb: 'ADD CLINIC VISIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'art-commencement/patient/:patientId/new',\n                component: ClinicEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'ART Commencement',\n                    breadcrumb: 'ADD ART COMMENCEMENT',\n                    commence: true\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: ClinicEditComponent,\n                resolve: {\n                    entity: ClinicResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Clinic Visit Edit',\n                    breadcrumb: 'CLINIC VISIT EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n",
        "import { Component, Input, OnInit } from '@angular/core';\nimport { ClinicService } from '../../services/clinic.service';\nimport { Clinic } from '../../model/clinic.model';\nimport { CardViewDateItemModel, CardViewFloatItemModel, CardViewItem, CardViewTextItemModel } from \"@alfresco/adf-core\";\n\n@Component({\n    selector: 'clinic-widget',\n    templateUrl: './clinic.widget.html'\n})\nexport class ClinicWidget implements OnInit {\n    @Input()\n    patientId: number;\n    clinic: Clinic;\n    properties: CardViewItem[] = [];\n\n    constructor(private clinicService: ClinicService) {\n    }\n\n    ngOnInit(): void {\n        this.clinicService.latestVisit(this.patientId).subscribe((res) => {\n            this.clinic = res;\n            this.buildProperties()\n        })\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewDateItemModel({\n            key: 'dv',\n            value: this.clinic.dateVisit,\n            label: 'Last Clinic Visit',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewDateItemModel({\n            key: 'nv',\n            value: this.clinic.nextAppointment,\n            label: 'Next Clinic Visit',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Functional Status',\n            key: 'fs',\n            value: this.clinic.funcStatus\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Clinical Stage',\n            key: 'cs',\n            value: this.clinic.clinicStage\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'TB Status',\n            key: 'ts',\n            value: this.clinic.tbStatus\n        }));\n        this.properties.push(new CardViewFloatItemModel({\n            label: 'Body Weight(Kg)',\n            key: 'bw',\n            value: this.clinic.bodyWeight\n        }));\n    }\n\n}\n",
        "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\n\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatOptionModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n        MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n        MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n        MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n        MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n        MatTooltipModule, MatDatetimepickerModule, MatNativeDatetimeModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {\n}\n",
        "import { NgModule } from '@angular/core';\nimport { ClinicWidget } from './components/clinic/clinic.widget';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n    imports:[\n        CommonModule,\n        MaterialModule,\n        CoreModule\n    ],\n    declarations:[\n      ClinicWidget  \n    ],\n    entryComponents: [\n        ClinicWidget\n    ],\n    exports: [\n        ClinicWidget\n    ],\n    providers: [\n    ]\n})\nexport class ClinicWidgetModule {\n    \n}\n",
        "import { CoreModule } from '@alfresco/adf-core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule\r\n} from '@angular/material';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CovalentDialogsModule, CovalentMessageModule } from '@covalent/core';\r\nimport { ClinicDetailsComponent } from './components/clinic/clinic-details.component';\r\nimport { ClinicEditComponent } from './components/clinic/clinic-edit.component';\r\nimport { ClinicResolve, ROUTES } from './services/clinic.route';\r\nimport { ClinicWidgetModule } from './clinic.widget.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LamisSharedModule, MatDateFormatModule } from '@lamis/web-core';\r\nimport { CustomFormsModule } from 'ng2-validation';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ClinicDetailsComponent,\r\n        ClinicEditComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatCardModule,\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        RouterModule.forChild(ROUTES),\r\n        MatProgressBarModule,\r\n        CovalentMessageModule,\r\n        CovalentDialogsModule,\r\n        MatListModule,\r\n        CoreModule,\r\n        ClinicWidgetModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatDateFormatModule,\r\n        CustomFormsModule,\r\n        LamisSharedModule,\r\n        NgxDatatableModule,\r\n    ],\r\n    exports: [\r\n        ClinicDetailsComponent,\r\n        ClinicEditComponent\r\n    ],\r\n    entryComponents: [\r\n    ],\r\n    providers: [\r\n        ClinicResolve\r\n    ]\r\n})\r\nexport class ClinicModule {\r\n}\r\n",
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { DATE_FORMAT, SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { ChronicCare, ChronicCareVm } from '../model/clinic.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport * as moment_ from 'moment';\nimport { Moment } from 'moment';\n\nconst moment = moment_;\n\n@Injectable({providedIn: 'root'})\nexport class ChronicCareService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/chronic-cares';\n    }\n\n    create(chronicCare: ChronicCareVm): Observable<HttpResponse<ChronicCare>> {\n        const copy = this.convertDateFromClient(chronicCare);\n        return this.http\n            .post<ChronicCare>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: HttpResponse<ChronicCare>) => this.convertDateFromServer(res)));\n    }\n\n    update(chronicCare: ChronicCareVm): Observable<HttpResponse<ChronicCare>> {\n        const copy = this.convertDateFromClient(chronicCare);\n        return this.http\n            .put<ChronicCare>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: HttpResponse<ChronicCare>) => this.convertDateFromServer(res)));\n    }\n\n    find(id: number): Observable<HttpResponse<ChronicCare>> {\n        return this.http\n            .get<ChronicCare>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<ChronicCare>) => this.convertDateFromServer(res)));\n    }\n\n    findByUuid(id: string): Observable<HttpResponse<ChronicCare>> {\n        return this.http\n            .get<ChronicCare>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<ChronicCare>) => this.convertDateFromServer(res)));\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    getDmScreens() {\n        return this.http.get(`${this.resourceUrl}/dm-screens`)\n    }\n\n    getTbScreens() {\n        return this.http.get(`${this.resourceUrl}/tb-screens`)\n    }\n\n    getDmScreenByChronicCare(id: number) {\n        return this.http.get(`${this.resourceUrl}/${id}/dm-screens`)\n    }\n\n    getTbScreenByChronicCare(id: number) {\n        return this.http.get(`${this.resourceUrl}/${id}/tb-screens`)\n    }\n\n    getVisitDatesByPatient(patientId: number) {\n        return this.http.get<Moment[]>(`${this.resourceUrl}/patient/${patientId}/visit-dates`)\n            .pipe(map((res) => {\n                    res.forEach(d => moment(d));\n                    return res;\n                })\n            )\n    }\n\n    protected convertDateFromServer(res: HttpResponse<ChronicCare>): HttpResponse<ChronicCare> {\n        if (res.body) {\n            res.body.dateLastCd4 = res.body.dateLastCd4 != null ? moment(res.body.dateLastCd4) : null;\n            res.body.dateVisit = res.body.dateVisit != null ? moment(res.body.dateVisit) : null;\n            res.body.dateLastViralLoad = res.body.dateLastViralLoad != null ? moment(res.body.dateLastViralLoad) : null;\n            res.body.dateStartedTbTreatment = res.body.dateStartedTbTreatment != null ? moment(res.body.dateStartedTbTreatment) : null;\n        }\n        return res;\n    }\n\n    protected convertDateFromClient(vm: ChronicCareVm): ChronicCareVm {\n        vm.chronicCare = Object.assign({}, vm.chronicCare, {\n            dateLastViralLoad: vm.chronicCare.dateLastViralLoad != null && vm.chronicCare.dateLastViralLoad.isValid() ?\n                vm.chronicCare.dateLastViralLoad.format(DATE_FORMAT) : null,\n            dateVisit: vm.chronicCare.dateVisit != null && vm.chronicCare.dateVisit.isValid() ?\n                vm.chronicCare.dateVisit.format(DATE_FORMAT) : null,\n            dateLastCd4: vm.chronicCare.dateLastCd4 != null && vm.chronicCare.dateLastCd4.isValid() ?\n                vm.chronicCare.dateLastCd4.format(DATE_FORMAT) : null,\n            dateStartedTbTreatment: vm.chronicCare.dateStartedTbTreatment != null &&\n            vm.chronicCare.dateStartedTbTreatment.isValid() ? vm.chronicCare.dateStartedTbTreatment.format(DATE_FORMAT) : null\n        });\n        return vm;\n    }\n\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport { ClinicService } from '../../services/clinic.service';\nimport { CardViewItem, NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ChronicCare } from '../../model/clinic.model';\nimport { TdDialogService } from '@covalent/core';\nimport { ChronicCareService } from '../../services/chronic.care.service';\n\n@Component({\n    selector: 'chronic-care-detail',\n    templateUrl: './chronic.care.detail.component.html'\n})\nexport class ChronicCareDetailComponent implements OnInit {\n    properties: CardViewItem[] = [];\n    entity: ChronicCare;\n\n    constructor(private router: Router, private route: ActivatedRoute, private chronicCareService: ChronicCareService,\n                private _dialogService: TdDialogService, private notificationService: NotificationService,\n                private clinicService: ClinicService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            const patientId = this.route.snapshot.paramMap.get('patientId');\n            this.clinicService.getPatient(patientId).subscribe((res) => this.entity.patient = res);\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'chronic-cares', this.entity.uuid, 'patient', this.entity.patient.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this chronic care visit, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.chronicCareService.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['patients'])\n                    } else {\n                        this.notificationService.showError('Error deleting visit, please try again')\n                    }\n                })\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n\n    }\n\n\n    previousState() {\n        window.history.back();\n    }\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport { ChronicCare, ChronicCareDm, ChronicCareTB, Patient } from '../../model/clinic.model';\nimport { ClinicService } from '../../services/clinic.service';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChronicCareService } from '../../services/chronic.care.service';\nimport { Observable } from 'rxjs';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport * as moment_ from 'moment';\nimport { Moment } from 'moment';\nimport { AppLoaderService } from '@lamis/web-core';\n\nconst moment = moment_;\n\n@Component({\n    selector: 'chronic-care-edit',\n    templateUrl: './chronic.care.edit.component.html'\n})\nexport class ChronicCareEditComponent implements OnInit {\n    entity: ChronicCare;\n    patient: Patient;\n    today = moment();\n    tbs: ChronicCareTB[] = [];\n    dms: ChronicCareDm[] = [];\n    visitDates: Moment[] = [];\n    isSaving: boolean = false;\n    bmi: string = '';\n    bmiCalculated: string = '';\n\n    constructor(private clinicService: ClinicService,\n                private chronicCareService: ChronicCareService,\n                protected notification: NotificationService,\n                protected activatedRoute: ActivatedRoute,\n                private appLoaderService: AppLoaderService) {\n    }\n\n    createEntity(): ChronicCare {\n        return <ChronicCare>{};\n    }\n\n    ngOnInit(): void {\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\n            this.clinicService.getPatient(patientId).subscribe((res) => {\n                this.entity.patient = res;\n                this.entity.facility = res.facility;\n                this.chronicCareService.getVisitDatesByPatient(this.entity.patient.id).subscribe((res) => {\n                    this.visitDates = res;\n                });\n            });\n\n            this.calculateBmi();\n        });\n\n    }\n\n    filterDates(date: Moment): boolean {\n        let exists = false;\n\n        this.visitDates.forEach(d => {\n            if (date.diff(d, 'days') === 0) {\n                exists = true;\n            }\n        });\n        return (this.entity.id && date.diff(this.entity.dateVisit, 'days') === 0) || !exists;\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    calculateBmi() {\n        if (this.entity.bodyWeight && this.entity.height) {\n            const bmi = this.entity.bodyWeight / Math.pow(this.entity.height, 2);\n            if (bmi < 18.5) {\n                this.bmi = '<18.5 (Underweight)';\n            } else if (bmi < 24.9) {\n                this.bmi = '18.5 - 24.9 (Healthy)';\n            } else if (bmi < 29.9) {\n                this.bmi = '25.0 - 29.9 (Overweight)';\n            } else if (bmi < 40) {\n                this.bmi = '30 - 40 (Obesity)';\n            } else {\n                this.bmi = '>40 (Morbid Obesity)';\n            }\n            this.bmiCalculated = bmi.toFixed(1);\n        } else {\n            this.bmi = '';\n        }\n    }\n\n    save() {\n        //this.submitButton.disabled = true;\n        //this.progressBar.mode = 'indeterminate';\n        this.isSaving = true;\n        this.appLoaderService.open('Saving chronic care visit..');\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.chronicCareService.update({\n                chronicCare: this.entity,\n                tbs: this.tbs,\n                dms: this.dms\n            }));\n        } else {\n            this.subscribeToSaveResponse(this.chronicCareService.create({\n                chronicCare: this.entity,\n                tbs: this.tbs,\n                dms: this.dms\n            }));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.onSaveError();\n                this.onError(res.message)\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.openSnackMessage('Chronic Care visit successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.appLoaderService.close();\n        //this.submitButton.disabled = true;\n        this.notification.showError('Error occurred saving chronic care visit; try again');\n        //this.progressBar.mode = 'determinate';\n    }\n\n    protected onError(errorMessage: string) {\n        this.appLoaderService.close();\n        this.notification.showError(errorMessage);\n    }\n\n}\n",
        "import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ChronicCare } from '../model/clinic.model';\nimport { ChronicCareService } from './chronic.care.service';\nimport { ChronicCareEditComponent } from '../components/chronic-care/chronic.care.edit.component';\nimport { ChronicCareDetailComponent } from '../components/chronic-care/chronic.care.detail.component';\n\n@Injectable()\nexport class ChronicCareResolve implements Resolve<ChronicCare> {\n    constructor(private service: ChronicCareService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ChronicCare> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<ChronicCare>) => response.ok),\n                map((patient: HttpResponse<ChronicCare>) => patient.body)\n            );\n        }\n        return of(<ChronicCare>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Chronic Care Visit',\n            breadcrumb: 'CHRONIC CARE VISIT'\n        },\n        children: [\n            {\n                path: ':id/patient/:patientId/view',\n                component: ChronicCareDetailComponent,\n                resolve: {\n                    entity: ChronicCareResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Chronic Care Visit',\n                    breadcrumb: 'CHRONIC CARE VISIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'patient/:patientId/new',\n                component: ChronicCareEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Chronic Care Visit',\n                    breadcrumb: 'ADD CHRONIC CARE VISIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: ChronicCareEditComponent,\n                resolve: {\n                    entity: ChronicCareResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Chronic Care Visit Edit',\n                    breadcrumb: 'CHRONIC CARE VISIT EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n",
        "import { NgModule } from '@angular/core';\nimport { ChronicCareDetailComponent } from './components/chronic-care/chronic.care.detail.component';\nimport { ChronicCareEditComponent } from './components/chronic-care/chronic.care.edit.component';\nimport { ChronicCareResolve } from './services/chronic.care.route';\nimport { MaterialModule } from './material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { CommonModule } from '@angular/common';\nimport { CovalentDialogsModule } from '@covalent/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LamisSharedModule, MatDateFormatModule } from '@lamis/web-core';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './services/chronic.care.route';\nimport { MatStepperModule } from \"@angular/material\";\n\n@NgModule({\n    declarations: [\n        ChronicCareDetailComponent,\n        ChronicCareEditComponent\n    ],\n    imports: [\n        CommonModule,\n        CovalentDialogsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        LamisSharedModule,\n        MaterialModule,\n        CoreModule,\n        CustomFormsModule,\n        MatDateFormatModule,\n        RouterModule.forChild(ROUTES),\n        MatStepperModule\n    ],\n    providers: [\n        ChronicCareResolve\n    ]\n})\nexport class ChronicCareModule {\n    \n}\n",
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { DATE_FORMAT, SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { EAC } from '../model/clinic.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as moment_ from 'moment';\nimport { Moment } from 'moment';\n\nconst moment = moment_;\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EacService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/eacs';\n    }\n\n    create(eac: EAC): Observable<HttpResponse<EAC>> {\n        const copy = this.convertDateFromClient(eac);\n        return this.http\n            .post<EAC>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    update(eac: EAC): Observable<HttpResponse<EAC>> {\n        const copy = this.convertDateFromClient(eac);\n        return this.http\n            .put<EAC>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    find(id: number): Observable<HttpResponse<EAC>> {\n        return this.http\n            .get<EAC>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    findByUuid(id: string): Observable<HttpResponse<EAC>> {\n        return this.http\n            .get<EAC>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    getLatestByPatient(uuid: string): Observable<HttpResponse<EAC>> {\n        return this.http\n            .get<EAC>(`${this.resourceUrl}/patient/${uuid}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    getLatestViralLoadByPatient(id: number): Observable<HttpResponse<any>> {\n        return this.http\n            .get<any>(`${this.resourceUrl}/patient/${id}/viral-load-result`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<any>) => {\n                if (res.body) {\n                    res.body.laboratory.dateReported = res.body.laboratory.dateReported != null ?\n                        moment(res.body.laboratory.dateReported) : null\n                }\n                return res;\n            }));\n    }\n\n    protected convertDateFromClient(eac: EAC): EAC {\n        const copy: EAC = Object.assign({}, eac, {\n            dateEac1: eac.dateEac1 != null && eac.dateEac1.isValid() ? eac.dateEac1.format(DATE_FORMAT) : null,\n            dateEac2: eac.dateEac2 != null && eac.dateEac2.isValid() ? eac.dateEac2.format(DATE_FORMAT) : null,\n            dateEac3: eac.dateEac3 != null && eac.dateEac3.isValid() ? eac.dateEac3.format(DATE_FORMAT) : null,\n            dateSampleCollected: eac.dateSampleCollected != null && eac.dateSampleCollected.isValid() ? eac.dateSampleCollected.format(DATE_FORMAT) : null,\n            dateLastViralLoad: eac.dateLastViralLoad != null && eac.dateLastViralLoad.isValid() ? eac.dateLastViralLoad.format(DATE_FORMAT) : null,\n        });\n        return copy;\n    }\n\n    protected convertDateFromServer(res: HttpResponse<EAC>): HttpResponse<EAC> {\n        if (res.body) {\n            res.body.dateLastViralLoad = res.body.dateLastViralLoad != null ? moment(res.body.dateLastViralLoad) : null;\n            res.body.dateEac1 = res.body.dateEac1 != null ? moment(res.body.dateEac1) : null;\n            res.body.dateEac2 = res.body.dateEac2 != null ? moment(res.body.dateEac2) : null;\n            res.body.dateEac3 = res.body.dateEac3 != null ? moment(res.body.dateEac3) : null;\n            res.body.dateSampleCollected = res.body.dateSampleCollected != null ? moment(res.body.dateSampleCollected) : null;\n        }\n        return res;\n    }\n\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport { EAC } from '../../model/clinic.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TdDialogService } from '@covalent/core';\nimport { CardViewDateItemModel, CardViewItem, CardViewTextItemModel, NotificationService } from '@alfresco/adf-core';\nimport { EacService } from '../../services/eac.service';\n\n@Component({\n    selector: 'eac-details',\n    templateUrl: './eac.details.component.html'\n})\nexport class EacDetailsComponent implements OnInit {\n    properties: CardViewItem[] = [];\n    entity: EAC;\n\n    constructor(private router: Router, private route: ActivatedRoute,\n                private _dialogService: TdDialogService, private notificationService: NotificationService,\n                private eacService: EacService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'eacs', this.entity.uuid, 'patient', this.entity.patient.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this EAC Record, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.eacService.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['patients'])\n                    } else {\n                        this.notificationService.showError('Error deleting visit, please try again')\n                    }\n                })\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewDateItemModel({\n            key: 'ds',\n            value: this.entity.dateLastViralLoad,\n            label: 'Date Last Viral Load',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            key: 'vl',\n            value: this.entity.lastViralLoad,\n            label: 'Last Viral Load'\n        }));\n        this.properties.push(new CardViewDateItemModel({\n            key: 'ds',\n            value: this.entity.dateEac1,\n            label: 'Date of 1st EAC Session',\n            format: 'dd MMM, yyyy'\n        }));\n        if (this.entity.dateEac2) {\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: this.entity.dateEac2,\n                label: 'Date of 2nd EAC Session',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n        if (this.entity.dateEac3) {\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: this.entity.dateEac3,\n                label: 'Date of 3rd EAC Session',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n        if (this.entity.dateEac3) {\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: this.entity.dateSampleCollected,\n                label: 'Date of Repeat VL Sample Collection',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Notes',\n            key: 'ts',\n            value: this.entity.notes\n        }));\n    }\n\n    previousState() {\n        window.history.back();\n    }\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport * as moment_ from 'moment';\nimport { Observable } from 'rxjs';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { ClinicService } from '../../services/clinic.service';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppLoaderService } from '@lamis/web-core';\nimport { EAC, Patient } from '../../model/clinic.model';\nimport { EacService } from '../../services/eac.service';\nimport { Moment } from 'moment';\n\nconst moment = moment_;\n\n\n@Component({\n    selector: 'eac-edit',\n    templateUrl: './eac.edit.component.html'\n})\nexport class EacEditComponent implements OnInit {\n    entity: EAC;\n    patient: Patient;\n    today = moment();\n    dateRegistration: Moment;\n    eac1Min: Moment;\n    eac2Min: Moment;\n    eac3Min: Moment;\n    repeatVLMin: Moment;\n    repeatVLMax: Moment;\n    isSaving: boolean = false;\n\n    constructor(private clinicService: ClinicService,\n                private eacService: EacService,\n                protected notification: NotificationService,\n                protected activatedRoute: ActivatedRoute,\n                private appLoaderService: AppLoaderService) {\n    }\n\n    createEntity(): EAC {\n        return <EAC>{};\n    }\n\n    ngOnInit(): void {\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\n            this.clinicService.getPatient(patientId).subscribe((res) => {\n                this.entity.patient = res;\n                this.entity.facility = res.facility;\n                this.dateRegistration = res.dateRegistration;\n                this.eacService.getLatestViralLoadByPatient(res.id).subscribe(r => {\n                    if (r.body) {\n                        this.entity.dateLastViralLoad = r.body.laboratory.dateReported;\n                        this.entity.lastViralLoad = r.body.resultAB;\n                        this.eac1Min = this.entity.dateLastViralLoad.clone().add(1, 'day');\n                    }\n                    this.eac2Min = this.entity.dateEac1 ? this.entity.dateEac1.clone().add(2, 'week') :\n                        this.entity.dateLastViralLoad;\n                    this.eac3Min = this.entity.dateEac2 ? this.entity.dateEac2.clone().add(2, 'week') :\n                        this.entity.dateLastViralLoad;\n                    this.repeatVLMin = this.entity.dateEac3 ? this.entity.dateEac3.clone().add(1, 'day') :\n                        this.entity.dateLastViralLoad;\n                });\n                if (!this.entity.id) {\n                    this.eacService.getLatestByPatient(res.uuid).subscribe(r => {\n                        this.entity = r.ok ? r.body : this.createEntity();\n                        this.repeatVLMin = this.entity.dateEac3 ? this.entity.dateEac3.clone().add(1, 'day') :\n                            this.entity.dateLastViralLoad;\n                        this.eac2Min = this.entity.dateEac1 ? this.entity.dateEac1.clone().add(2, 'week') :\n                            this.entity.dateLastViralLoad;\n                        this.eac3Min = this.entity.dateEac2 ? this.entity.dateEac2.clone().add(2, 'week') :\n                            this.entity.dateLastViralLoad;\n                    });\n                }\n            });\n\n        });\n    }\n\n    dateEac1Changed(date: Moment) {\n        this.eac2Min = date.clone().add(2, 'weeks')\n    }\n\n    dateEac2Changed(date: Moment) {\n        this.eac3Min = date.clone().add(2, 'weeks')\n    }\n\n    dateEac3Changed(date: Moment) {\n        this.repeatVLMin = date.clone().add(1, 'days');\n        this.repeatVLMax = date.clone().add(6, 'months');\n    }\n\n    save() {\n        //this.submitButton.disabled = true;\n        //this.progressBar.mode = 'indeterminate';\n        this.isSaving = true;\n        this.appLoaderService.open('Saving EAC session..');\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.eacService.update(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.eacService.create(this.entity));\n        }\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.onSaveError();\n                this.onError(res.message)\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.openSnackMessage('EAC session successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.appLoaderService.close();\n        //this.submitButton.disabled = true;\n        this.notification.showError('Error occurred saving EAC session; try again');\n        //this.progressBar.mode = 'determinate';\n    }\n\n    protected onError(errorMessage: string) {\n        this.appLoaderService.close();\n        this.notification.showError(errorMessage);\n    }\n\n}\n",
        "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\nimport { EAC } from '../model/clinic.model';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { HttpResponse } from '@angular/common/http';\nimport { EacService } from './eac.service';\nimport { EacEditComponent } from '../components/eac/eac.edit.component';\nimport { EacDetailsComponent } from '../components/eac/eac.details.component';\n\n@Injectable()\nexport class EacResolve implements Resolve<EAC> {\n    constructor(private service: EacService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<EAC> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<EAC>) => response.ok),\n                map((patient: HttpResponse<EAC>) => patient.body)\n            );\n        }\n        return of(<EAC>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'EAC Session',\n            breadcrumb: 'EAC SESSION'\n        },\n        children: [\n            {\n                path: ':id/patient/:patientId/view',\n                component: EacDetailsComponent,\n                resolve: {\n                    entity: EacResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'EAC Session',\n                    breadcrumb: 'EAC SESSION'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'patient/:patientId/new',\n                component: EacEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'EAC Session',\n                    breadcrumb: 'ADD EAC SESSION',\n                    commence: true\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: EacEditComponent,\n                resolve: {\n                    entity: EacResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'EAC Session Edit',\n                    breadcrumb: 'EAC SESSION EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n",
        "import { NgModule } from '@angular/core';\nimport { EacDetailsComponent } from './components/eac/eac.details.component';\nimport { EacEditComponent } from './components/eac/eac.edit.component';\nimport { EacResolve, ROUTES } from './services/eac.route';\nimport { CommonModule } from '@angular/common';\nimport { CovalentDialogsModule } from '@covalent/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LamisSharedModule, MatDateFormatModule } from '@lamis/web-core';\nimport { MaterialModule } from './material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        CovalentDialogsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        LamisSharedModule,\n        MaterialModule,\n        CoreModule,\n        CustomFormsModule,\n        MatDateFormatModule,\n        RouterModule.forChild(ROUTES)\n    ],\n    declarations: [\n        EacDetailsComponent,\n        EacEditComponent\n    ],\n    providers: [\n        EacResolve\n    ]\n})\nexport class EacModule {\n\n}\n",
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { Facility } from '../model/facility.model';\nimport { CaseManager, CaseManagerStats, Patient } from '../model/case-management.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CaseManagementService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/case-management';\n    }\n\n    initClients(facilityId: number) {\n        return this.http.get(`${this.resourceUrl}/init-clients/${facilityId}`)\n    }\n\n    getClientList(req: any) {\n        return this.http.post<Patient[]>(`${this.resourceUrl}/client-list`, req, {observe: 'response'})\n    }\n\n    getCaseManagerStats(caseManagerId: number, facilityId: number) {\n        return this.http.get<CaseManagerStats>(`${this.resourceUrl}/facility/${facilityId}/case-manager/${caseManagerId}/stats`)\n    }\n\n    getActiveFacility() {\n        return this.http.get<Facility>('/api/facilities/active')\n    }\n\n    getCaseManagers(facilityId: number) {\n        return this.http.get<CaseManager[]>(`${this.resourceUrl}/facility/${facilityId}/case-managers`)\n    }\n\n    assignToCaseManager(caseManagerId: number, ids: number[]) {\n        let params = new HttpParams();\n        ids.forEach(id => params = params.append(\"ids\", id.toString()));\n        return this.http.get(`${this.resourceUrl}/case-manager/${caseManagerId}/assign-clients`, {\n            params,\n            observe: 'response'\n        })\n    }\n\n    deAssignClients(ids: number[]) {\n        let params = new HttpParams();\n        ids.forEach(id => params = params.append(\"ids\", id.toString()));\n        return this.http.get(`${this.resourceUrl}/de-assign-clients`, {\n            params,\n            observe: 'response'\n        })\n    }\n\n    getStates() {\n        return this.http.get<any[]>('/api/states')\n    }\n\n    getLgasByState(id) {\n        return this.http.get<any[]>(`/api/provinces/state/${id}`)\n    }\n}\n",
        "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CaseManager, CaseManagerStats, Patient } from '../../model/case-management.model';\nimport { CaseManagementService } from '../../services/case-management.service';\nimport { CardViewIntItemModel, CardViewItem, NotificationService } from '@alfresco/adf-core';\nimport { TdDialogService } from '@covalent/core';\nimport { Subscription } from 'rxjs';\nimport { RxStompService } from '@stomp/ng2-stompjs';\nimport { Message } from \"@stomp/stompjs\";\n\nexport interface Filter {\n    upperAgeLimit?: number;\n    lowerAgeLimit?: number;\n    pregnant?: boolean;\n    breastfeeding?: boolean;\n    lgaId?: number;\n    facilityId?: number;\n    status?: string;\n    gender?: string;\n    hospitalNum?: string;\n    page?: number;\n    size?: number;\n    assigned?: boolean;\n}\n\n@Component({\n    selector: 'case-management-patient-list',\n    templateUrl: './patient.list.component.html'\n})\nexport class PatientListComponent implements OnInit, OnDestroy {\n    caseManagers: CaseManager[] = [];\n    caseManager: CaseManager;\n    patients: Patient[] = [];\n    properties: Array<CardViewItem> = [];\n    globalProperties: Array<CardViewItem> = [];\n    stats: CaseManagerStats = {};\n    globalStats: CaseManagerStats = {};\n    facilityId: number;\n    filter: Filter = {};\n    ageLimit: number;\n    pregnancyStatus: number;\n    states: any[];\n    lgas: any[];\n    hospitalNum: string = '';\n    totalItems = 0;\n    page = 0;\n    itemsPerPage = 20;\n    loading = true;\n    initializing = true;\n    private topicSubscription: Subscription;\n\n    constructor(private service: CaseManagementService, private _dialogService: TdDialogService,\n                private notificationService: NotificationService, private stompService: RxStompService) {\n    }\n\n    ngOnInit(): void {\n        /*this.topicSubscription = this.stompService.watch('/topic/case-management').subscribe((msg: Message) => {\n            console.log('Simp Message', msg);\n            if(msg.body === 'finished'){\n                this.initializing = false;\n            }\n        });*/\n\n        this.service.getActiveFacility().subscribe((f) => {\n            if (f) {\n                this.facilityId = f.id;\n                this.service.initClients(f.id).subscribe((r) => {\n                    this.initializing = false;\n                    this.service.getCaseManagers(f.id).subscribe(res => {\n                        this.caseManagers = res;\n                        this.updateList()\n                    });\n                });\n\n                this.service.getCaseManagerStats(0, f.id).subscribe(res => {\n                    this.stats = res;\n                    this.buildStats();\n                })\n            }\n        });\n        this.service.getStates().subscribe(res => this.states = res)\n    }\n\n    ngOnDestroy(): void {\n        //this.topicSubscription.unsubscribe();\n    }\n\n    clearHospitalNum() {\n        this.hospitalNum = null;\n        this.filter['hospitalNum'] = null;\n        this.page = 0;\n    }\n\n    search() {\n        this.page = 0;\n        this.updateList();\n    }\n\n    assignClients() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to assign selected clients to the selected Case Manager?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                const patientIds = this.patients.filter(p => p.selected)\n                    .map(p => p.id);\n                this.service.assignToCaseManager(this.caseManager.id, patientIds).subscribe((res) => {\n                    if (res.ok) {\n                        this.updateList();\n                        this.service.getCaseManagerStats(this.caseManager.id, this.facilityId).subscribe(res => {\n                            this.stats = res;\n                            this.buildStats();\n                        })\n                    } else {\n                        this.notificationService.showError('Error assigning clients, please try again')\n                    }\n                })\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    deAssignClients() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to de-assign selected clients?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                const patientIds = this.patients.filter(p => p.selected)\n                    .map(p => p.id);\n                this.service.deAssignClients(patientIds).subscribe((res) => {\n                    if (res.ok) {\n                        this.updateList();\n                        this.service.getCaseManagerStats(this.caseManager.id, this.facilityId).subscribe(res => {\n                            this.stats = res;\n                            this.buildStats();\n                        })\n                    } else {\n                        this.notificationService.showError('Error de-assigning clients, please try again')\n                    }\n                })\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    selections(): boolean {\n        return this.patients && !!this.patients.find(p => p.selected)\n    }\n\n    loadPage(page) {\n        this.page = page;\n        this.updateList()\n    }\n\n    select(event) {\n        this.patients = this.patients.map(p => {\n            if (p.id === event.obj.id) {\n                p.selected = !p.selected;\n            }\n            return p;\n        });\n    }\n\n    caseManagerChanged() {\n        if (!this.caseManager) {\n            this.stats = null\n        }\n        this.service.getCaseManagerStats(this.caseManager.id, this.facilityId).subscribe(res => {\n            this.stats = res;\n            this.buildStats();\n        })\n    }\n\n    updateList() {\n        if (this.hospitalNum) {\n            this.filter.hospitalNum = this.hospitalNum;\n        }\n        this.filter['facilityId'] = this.facilityId;\n        this.filter['size'] = this.itemsPerPage;\n        this.filter['page'] = this.page > 0 ? this.page - 1 : 0;\n        this.loading = true;\n        this.service.getClientList(this.filter).subscribe(res => {\n            if (res.body) {\n                this.patients = res.body.map(p => {\n                    const caseManager = this.caseManagers.find(c => c.id === p.caseManagerId);\n                    if (caseManager) {\n                        p.caseManager = caseManager;\n                    }\n                    return p;\n                });\n                this.totalItems = (<any>res.headers).get('X-Total-Count');\n                this.service.getCaseManagerStats(0, this.facilityId).subscribe(res => {\n                    this.globalStats = res;\n                    this.buildGlobalStats();\n                });\n            }\n            this.loading = false;\n        })\n    }\n\n    ageGroupChanged() {\n        if (this.ageLimit == 9) {\n            this.filter['lowerAgeLimit'] = 0;\n            this.filter['upperAgeLimit'] = 9;\n        } else if (this.ageLimit == 14) {\n            this.filter['lowerAgeLimit'] = 10;\n            this.filter['upperAgeLimit'] = 14;\n        } else if (this.ageLimit == 19) {\n            this.filter['lowerAgeLimit'] = 15;\n            this.filter['upperAgeLimit'] = 19;\n        } else if (this.ageLimit == 24) {\n            this.filter['lowerAgeLimit'] = 20;\n            this.filter['upperAgeLimit'] = 24;\n        } else if (this.ageLimit == 100) {\n            this.filter['lowerAgeLimit'] = 25;\n            this.filter['upperAgeLimit'] = 100;\n        }\n        if (!this.ageLimit) {\n            this.filter['lowerAgeLimit'] = null;\n            this.filter['upperAgeLimit'] = null;\n        }\n        this.updateList()\n    }\n\n    pregnancyStatusChanged() {\n        if (this.pregnancyStatus == 1) {\n            this.filter['pregnant'] = true\n        } else if (this.pregnancyStatus == 2) {\n            this.filter['breastfeeding'] = true\n        }\n        if (!this.pregnancyStatus) {\n            this.filter['pregnant'] = null;\n            this.filter['breastfeeding'] = null;\n        }\n        this.updateList()\n    }\n\n    stateChanged(id) {\n        if (id) {\n            this.service.getLgasByState(id).subscribe(res => this.lgas = res)\n        }\n    }\n\n    assigned(val) {\n        if (val == 1) {\n            this.filter.assigned = true;\n        } else if (val == 2) {\n            this.filter.assigned = false;\n        } else {\n            this.filter.assigned = null;\n        }\n        this.updateList();\n    }\n\n    lgaChanged(id) {\n        if (id) {\n            this.filter.lgaId = id\n        } else {\n            this.filter.lgaId = null\n        }\n        this.updateList()\n    }\n\n    buildStats() {\n        this.properties = [];\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Clients(s) Assigned',\n            key: 'as',\n            value: this.stats.assigned\n        }));\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Stable 1 Year',\n            key: 'as',\n            value: this.stats.stable\n        }));\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Unstable less than 1 Year',\n            key: 'as',\n            value: this.stats.unstableLessThan1year\n        }));\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Unstable more than 1 Year',\n            key: 'as',\n            value: this.stats.unstableMoreThan1Year\n        }));\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Awaiting ART',\n            key: 'as',\n            value: this.stats.preArt\n        }));\n    }\n\n    buildGlobalStats() {\n        this.globalProperties = [];\n        if (this.globalStats) {\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Clients(s) Assigned',\n                key: 'as',\n                value: this.globalStats.assigned\n            }));\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Stable 1 Year',\n                key: 'as',\n                value: this.globalStats.stable\n            }));\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Unstable less than 1 Year',\n                key: 'as',\n                value: this.globalStats.unstableLessThan1year\n            }));\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Unstable more than 1 Year',\n                key: 'as',\n                value: this.globalStats.unstableMoreThan1Year\n            }));\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Awaiting ART',\n                key: 'as',\n                value: this.globalStats.preArt\n            }));\n        }\n    }\n}\n",
        "import { Routes } from '@angular/router';\nimport { PatientListComponent } from '../components/case-management/patient.list.component';\n\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Case Management',\n            breadcrumb: 'CASE MANAGEMENT'\n        },\n        children: [\n            {\n                path: '',\n                children: [\n                    {\n                        path: '',\n                        component: PatientListComponent,\n                        data: {\n                            authorities: ['ROLE_USER'],\n                            title: 'Case Management',\n                            breadcrumb: 'CASE MANAGEMENT'\n                        }\n                    }\n                ],\n                data: {\n                    title: 'Case Management',\n                    breadcrumb: 'CASE MANAGEMENT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n",
        "import { NgModule } from '@angular/core';\nimport { PatientListComponent } from './components/case-management/patient.list.component';\nimport { MaterialModule } from './material.module';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CovalentDialogsModule, CovalentSearchModule } from '@covalent/core';\nimport { ROUTES } from './services/case-management.route';\nimport { RouterModule } from '@angular/router';\nimport { LamisSharedModule } from '@lamis/web-core';\n\n@NgModule({\n    imports: [\n        MaterialModule,\n        FormsModule,\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        CoreModule,\n        NgbModule,\n        CovalentSearchModule,\n        CovalentDialogsModule,\n        LamisSharedModule,\n    ],\n    declarations: [\n        PatientListComponent\n    ],\n    providers: [\n\n    ]\n})\nexport class CaseManagementModule {\n\n}\n",
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { createRequestOption, SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { Observable } from 'rxjs';\nimport { CaseManager } from '../model/case-management.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CaseManagerService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/case-managers';\n    }\n\n    create(caseManager: CaseManager): Observable<HttpResponse<CaseManager>> {\n        return this.http\n            .post<CaseManager>(this.resourceUrl, caseManager, {observe: 'response'});\n    }\n\n    update(caseManager: CaseManager): Observable<HttpResponse<CaseManager>> {\n        return this.http\n            .put<CaseManager>(this.resourceUrl, caseManager, {observe: 'response'})\n    }\n\n    find(id: number): Observable<HttpResponse<CaseManager>> {\n        return this.http\n            .get<CaseManager>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    findByUuid(id: string): Observable<HttpResponse<CaseManager>> {\n        return this.http\n            .get<CaseManager>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'});\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    query(req?: any): Observable<HttpResponse<CaseManager[]>> {\n        const options = createRequestOption(req);\n        return this.http\n            .get<CaseManager[]>(this.resourceUrl, {params: options, observe: 'response'});\n    }\n}\n",
        "import { Component } from '@angular/core';\nimport { CardViewItem, CardViewTextItemModel, NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TdDialogService } from '@covalent/core';\nimport { CaseManager } from '../../model/case-management.model';\nimport { CaseManagerService } from '../../services/case-manager.service';\n\n@Component({\n    selector: 'case-manager-details',\n    templateUrl: './case-manager.details.component.html'\n})\nexport class CaseManagerDetailsComponent {\n    properties: CardViewItem[] = [];\n    entity: CaseManager;\n\n    constructor(private router: Router, private route: ActivatedRoute, private service: CaseManagerService,\n                private _dialogService: TdDialogService,\n                private notificationService: NotificationService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'admin', 'case-managers', this.entity.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this Case Manager, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.service.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['admin', 'case-managers'])\n                    } else {\n                        this.notificationService.showError('Error deleting Case Manager, please try again')\n                    }\n                })\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Name',\n            key: 'cs',\n            value: this.entity.name\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Address',\n            key: 'fs',\n            value: this.entity.address\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Gender',\n            key: 'ts',\n            value: this.entity.gender === 'FEMALE' ? 'Female' : 'Male'\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Telephone',\n            key: 'cd4p',\n            value: this.entity.phoneNumber\n        }));\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport { CaseManager } from '../../model/case-management.model';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppLoaderService } from '@lamis/web-core';\nimport { CaseManagementService } from '../../services/case-management.service';\nimport { CaseManagerService } from '../../services/case-manager.service';\nimport { Observable } from 'rxjs';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n\n@Component({\n    selector: 'case-manager-edit',\n    templateUrl: './case-manager.edit.component.html'\n})\nexport class CaseManagerEditComponent implements OnInit {\n    entity: CaseManager;\n    isSaving: boolean;\n\n    constructor(private caseManagementService: CaseManagementService,\n                private caseManagerService: CaseManagerService,\n                protected notification: NotificationService,\n                protected activatedRoute: ActivatedRoute,\n                private appLoaderService: AppLoaderService) {\n    }\n\n    createEntity(): CaseManager {\n        return <CaseManager>{};\n    }\n\n    ngOnInit(): void {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n\n            this.caseManagementService.getActiveFacility().subscribe((res: any) => {\n                this.entity.facility = res;\n            });\n        });\n    }\n\n    save() {\n        this.isSaving = true;\n        this.appLoaderService.open('Saving Case Manager..');\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.caseManagerService.update(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.caseManagerService.create(this.entity));\n        }\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.onSaveError();\n                this.onError(res.message)\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.openSnackMessage('Case Manager successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.appLoaderService.close();\n        //this.submitButton.disabled = true;\n        this.notification.showError('Error occurred saving Case Manager; try again');\n        //this.progressBar.mode = 'determinate';\n    }\n\n    protected onError(errorMessage: string) {\n        this.appLoaderService.close();\n        this.notification.showError(errorMessage);\n    }\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport { CaseManager } from '../../model/case-management.model';\nimport { CaseManagerService } from '../../services/case-manager.service';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CaseManagementService } from '../../services/case-management.service';\nimport { Facility } from '../../model/facility.model';\n\n@Component({\n    selector: 'case-managers',\n    templateUrl: './case-manager.list.component.html'\n})\nexport class CaseManagerListComponent implements OnInit {\n    page = 0;\n    caseManagers: CaseManager[];\n    loading = false;\n    public itemsPerPage: number = 10;\n    public currentSearch: string = '';\n    totalItems = 0;\n    display = 'list';\n    facility: Facility;\n\n    constructor(private caseManagerService: CaseManagerService,\n                private caseManagementService: CaseManagementService,\n                protected notification: NotificationService,\n                protected router: Router,\n                protected activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.caseManagementService.getActiveFacility().subscribe(res => {\n            this.facility = res;\n            this.onPageChange(0);\n        })\n    }\n\n    public select(data: any): any {\n        this.router.navigate(['..', 'case-managers', data.obj.uuid, 'view'], {relativeTo: this.activatedRoute});\n    }\n\n    onPageChange(pageInfo) {\n        this.page = pageInfo;\n        this.loadAll();\n    }\n\n    loadPage(page: number) {\n        this.page = page;\n        this.loadAll();\n    }\n\n    loadAll() {\n        this.loading = true;\n        this.caseManagerService.query({\n            keyword: this.currentSearch,\n            page: this.page,\n            id: this.facility.id || 0,\n            size: this.itemsPerPage,\n            sort: ['id', 'asc']\n        }).subscribe(\n            (res: any) => {\n                this.onSuccess(res.body, res.headers)\n            },\n            (res: any) => this.onError(res)\n        );\n    }\n\n    protected onSuccess(data: any, headers: any) {\n        this.caseManagers = data;\n        this.totalItems = headers.get('X-Total-Count');\n        this.loading = false;\n    }\n\n    private onError(error: any) {\n        this.notification.openSnackMessage(error.message);\n        this.loading = false;\n    }\n}\n",
        "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { HttpResponse } from '@angular/common/http';\nimport { CaseManagerDetailsComponent } from '../components/case-management/case-manager.details.component';\nimport { CaseManager } from '../model/case-management.model';\nimport { CaseManagerService } from './case-manager.service';\nimport { CaseManagerEditComponent } from '../components/case-management/case-manager.edit.component';\nimport { CaseManagerListComponent } from '../components/case-management/case-manager.list.component';\n\n@Injectable()\nexport class CaseManagerResolve implements Resolve<CaseManager> {\n    constructor(private service: CaseManagerService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<CaseManager> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<CaseManager>) => response.ok),\n                map((patient: HttpResponse<CaseManager>) => patient.body)\n            );\n        }\n        return of(<CaseManager>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Case Manager',\n            breadcrumb: 'CASE MANAGERS'\n        },\n        children: [\n            {\n                path: '',\n                component: CaseManagerListComponent,\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Case Managers',\n                    breadcrumb: 'CASE MANAGERS'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/view',\n                component: CaseManagerDetailsComponent,\n                resolve: {\n                    entity: CaseManagerResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Case Manager',\n                    breadcrumb: 'CASE MANAGER'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'new',\n                component: CaseManagerEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Add Case Manager',\n                    breadcrumb: 'ADD CASE MANAGER'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/edit',\n                component: CaseManagerEditComponent,\n                resolve: {\n                    entity: CaseManagerResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Case Manager Edit',\n                    breadcrumb: 'CASE MANAGER EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n",
        "import { NgModule } from '@angular/core';\nimport { CaseManagerDetailsComponent } from './components/case-management/case-manager.details.component';\nimport { CaseManagerEditComponent } from './components/case-management/case-manager.edit.component';\nimport { CaseManagerListComponent } from './components/case-management/case-manager.list.component';\nimport { MaterialModule } from './material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { CaseManagerResolve, ROUTES } from './services/case-manager.route';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CovalentDialogsModule, CovalentSearchModule } from '@covalent/core';\nimport { LamisSharedModule } from '@lamis/web-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        CoreModule,\n        NgbModule,\n        CovalentSearchModule,\n        CovalentDialogsModule,\n        LamisSharedModule,\n    ],\n    declarations: [\n        CaseManagerDetailsComponent,\n        CaseManagerEditComponent,\n        CaseManagerListComponent\n    ],\n    providers: [\n        CaseManagerResolve\n    ]\n})\nexport class CaseManagerModule {\n}\n",
        "/*\r\n * Public API Surface of Clinic\r\n */\r\n\r\nexport * from './lib/model/clinic.model';\r\nexport * from './lib/services/clinic.service';\r\nexport * from './lib/clinic.module';\r\nexport * from './lib/clinic.widget.module';\r\nexport * from './lib/services/chronic.care.service';\r\nexport * from './lib/chronic.care.module';\r\nexport * from './lib/eac.module'\r\nexport * from './lib/case-management.module';\r\nexport * from './lib/case-manager.module';\r\n",
        "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {CaseManagerDetailsComponent as Éµx} from './lib/components/case-management/case-manager.details.component';\nexport {CaseManagerEditComponent as Éµy} from './lib/components/case-management/case-manager.edit.component';\nexport {CaseManagerListComponent as Éµv} from './lib/components/case-management/case-manager.list.component';\nexport {PatientListComponent as Éµr} from './lib/components/case-management/patient.list.component';\nexport {ChronicCareDetailComponent as Éµh} from './lib/components/chronic-care/chronic.care.detail.component';\nexport {ChronicCareEditComponent as Éµi} from './lib/components/chronic-care/chronic.care.edit.component';\nexport {ClinicDetailsComponent as Éµa} from './lib/components/clinic/clinic-details.component';\nexport {ClinicEditComponent as Éµb} from './lib/components/clinic/clinic-edit.component';\nexport {ClinicWidget as Éµg} from './lib/components/clinic/clinic.widget';\nexport {EacDetailsComponent as Éµn} from './lib/components/eac/eac.details.component';\nexport {EacEditComponent as Éµp} from './lib/components/eac/eac.edit.component';\nexport {MaterialModule as Éµf,modules as Éµe} from './lib/material.module';\nexport {ROUTES as Éµq} from './lib/services/case-management.route';\nexport {CaseManagementService as Éµs} from './lib/services/case-management.service';\nexport {CaseManagerResolve as Éµt,ROUTES as Éµu} from './lib/services/case-manager.route';\nexport {CaseManagerService as Éµw} from './lib/services/case-manager.service';\nexport {ChronicCareResolve as Éµj,ROUTES as Éµk} from './lib/services/chronic.care.route';\nexport {ClinicResolve as Éµc,ROUTES as Éµd} from './lib/services/clinic.route';\nexport {EacResolve as Éµl,ROUTES as Éµm} from './lib/services/eac.route';\nexport {EacService as Éµo} from './lib/services/eac.service';"
    ],
    "names": [
        "tslib_1.__param",
        "moment",
        "tslib_1.__decorate",
        "ROUTES"
    ],
    "mappings": "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"
}

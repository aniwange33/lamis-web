{
    "version": 3,
    "file": "lamis-clinic-1.1.3.umd.js",
    "sources": [
        "../../../../../../../../node_modules/tslib/tslib.es6.js",
        "ng://lamis-clinic-1.1.3/lib/services/clinic.service.ts",
        "ng://lamis-clinic-1.1.3/lib/components/clinic/clinic-details.component.ts",
        "ng://lamis-clinic-1.1.3/lib/components/clinic/clinic-edit.component.ts",
        "ng://lamis-clinic-1.1.3/lib/services/clinic.route.ts",
        "ng://lamis-clinic-1.1.3/lib/components/clinic/clinic.widget.ts",
        "ng://lamis-clinic-1.1.3/lib/material.module.ts",
        "ng://lamis-clinic-1.1.3/lib/clinic.widget.module.ts",
        "ng://lamis-clinic-1.1.3/lib/clinic.module.ts",
        "ng://lamis-clinic-1.1.3/lib/services/chronic.care.service.ts",
        "ng://lamis-clinic-1.1.3/lib/components/chronic-care/chronic.care.detail.component.ts",
        "ng://lamis-clinic-1.1.3/lib/components/chronic-care/chronic.care.edit.component.ts",
        "ng://lamis-clinic-1.1.3/lib/services/chronic.care.route.ts",
        "ng://lamis-clinic-1.1.3/lib/chronic.care.module.ts",
        "ng://lamis-clinic-1.1.3/lib/services/eac.service.ts",
        "ng://lamis-clinic-1.1.3/lib/components/eac/eac.details.component.ts",
        "ng://lamis-clinic-1.1.3/lib/components/eac/eac.edit.component.ts",
        "ng://lamis-clinic-1.1.3/lib/services/eac.route.ts",
        "ng://lamis-clinic-1.1.3/lib/eac.module.ts",
        "ng://lamis-clinic-1.1.3/lib/services/case-management.service.ts",
        "ng://lamis-clinic-1.1.3/lib/components/case-management/patient.list.component.ts",
        "ng://lamis-clinic-1.1.3/lib/services/case-management.route.ts",
        "ng://lamis-clinic-1.1.3/lib/case-management.module.ts",
        "ng://lamis-clinic-1.1.3/lib/services/case-manager.service.ts",
        "ng://lamis-clinic-1.1.3/lib/components/case-management/case-manager.details.component.ts",
        "ng://lamis-clinic-1.1.3/lib/components/case-management/case-manager.edit.component.ts",
        "ng://lamis-clinic-1.1.3/lib/components/case-management/case-manager.list.component.ts",
        "ng://lamis-clinic-1.1.3/lib/services/case-manager.route.ts",
        "ng://lamis-clinic-1.1.3/lib/case-manager.module.ts"
    ],
    "sourcesContent": [
        "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { DATE_FORMAT, SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { map } from 'rxjs/operators';\nimport {\n    Clinic,\n    ClinicAdhere,\n    ClinicAdverseDrugReaction,\n    ClinicOpportunisticInfection,\n    ClinicVm,\n    Patient\n} from '../model/clinic.model';\n\nimport * as moment_ from 'moment';\nimport { Moment } from 'moment';\n\nconst moment = moment_;\n\ntype EntityResponseType = HttpResponse<Clinic>;\ntype EntityArrayResponseType = HttpResponse<Clinic[]>;\n\n@Injectable({providedIn: 'root'})\nexport class ClinicService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/clinics';\n    }\n\n    create(vm: ClinicVm): Observable<EntityResponseType> {\n        vm['clinic'] = this.convertDateFromClient(vm.clinic);\n        vm['oiScreened'] = !!vm.oiList ? 'Yes' : 'No';\n        vm['adrScreened'] = !!vm.adrList ? 'Yes' : 'No';\n        return this.http\n            .post<Clinic>(this.resourceUrl, vm, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    update(vm: ClinicVm): Observable<EntityResponseType> {\n        vm['clinic'] = this.convertDateFromClient(vm.clinic);\n        vm['oiScreened'] = !!vm.oiList ? 'Yes' : 'No';\n        vm['adrScreened'] = !!vm.adrList ? 'Yes' : 'No';\n        return this.http\n            .put<Clinic>(this.resourceUrl, vm, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    find(id: number): Observable<EntityResponseType> {\n        return this.http\n            .get<Clinic>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    findByUuid(id: string): Observable<EntityResponseType> {\n        return this.http\n            .get<Clinic>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    getVisitDatesByPatient(patientId: number) {\n        return this.http.get<Moment[]>(`${this.resourceUrl}/patient/${patientId}/visit-dates`)\n            .pipe(map((res) => {\n                    res.forEach(d => moment(d));\n                    return res;\n                })\n            )\n    }\n\n    getPatient(id: any) {\n        return this.http.get<Patient>(`/api/patients/by-uuid/${id}`, {observe: 'body'})\n            .pipe(map((res) => {\n                if (res) {\n                    res.dateRegistration = res.dateRegistration != null ? moment(res.dateRegistration) : null;\n                    res.dateBirth = res.dateBirth != null ? moment(res.dateBirth) : null;\n                }\n                return res;\n            }))\n    }\n\n    getRegimenLines() {\n        return this.http.get<any[]>(`${this.resourceUrl}/regimen-types`)\n    }\n\n    getRegimenByLine(id) {\n        return this.http.get<any[]>(`${this.resourceUrl}/regimens/regimen-type/${id}`)\n    }\n\n    adverseDrugReactions() {\n        return this.http.get<any[]>(`${this.resourceUrl}/adverse-drug-reactions`)\n    }\n\n    opportunisticInfections() {\n        return this.http.get<any[]>(`${this.resourceUrl}/opportunistic-infections`)\n    }\n\n    adheres() {\n        return this.http.get<any[]>(`${this.resourceUrl}/adheres`)\n    }\n\n    regimes(regimenType: number) {\n        return this.http.get(`${this.resourceUrl}/regimens/${regimenType}`)\n    }\n\n    latestVisit(patientId: number) {\n        return this.http.get<Clinic>(`${this.resourceUrl}/patient/${patientId}/latest`)\n    }\n\n    getOpportunisticInfectionsByClinic(clinicId: number) {\n        return this.http.get<ClinicOpportunisticInfection[]>(`${this.resourceUrl}/${clinicId}/opportunistic-infections`)\n    }\n\n    getAdverseDrugReactionsByClinic(clinicId: number) {\n        return this.http.get<ClinicAdverseDrugReaction[]>(`${this.resourceUrl}/${clinicId}/adverse-drug-reactions`, {observe: 'response'})\n    }\n\n    getAdhereByClinic(clinicId: number) {\n        return this.http.get<ClinicAdhere[]>(`${this.resourceUrl}/${clinicId}/adheres`)\n    }\n\n    protected convertDateFromClient(clinic: Clinic): Clinic {\n        const copy: Clinic = Object.assign({}, clinic, {\n            dateVisit: clinic.dateVisit != null && clinic.dateVisit.isValid() ? clinic.dateVisit.format(DATE_FORMAT) : null,\n            lmp: clinic.lmp != null && clinic.lmp.isValid() ? clinic.lmp.format(DATE_FORMAT) : null,\n            nextAppointment: clinic.nextAppointment != null && clinic.nextAppointment.isValid() ? clinic.nextAppointment.format(DATE_FORMAT) : null,\n            pregnant: clinic.pregnancyStatus != null && clinic.pregnancyStatus === 2,\n            breastfeeding: clinic.pregnancyStatus != null && clinic.pregnancyStatus === 3,\n            bp: clinic.bp1 > 0 && clinic.bp2 > 0 ? clinic.bp1 + '/' + clinic.bp2 : null\n        });\n        return copy;\n    }\n\n    protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n        if (res.body) {\n            res.body.nextAppointment = res.body.nextAppointment != null ? moment(res.body.nextAppointment) : null;\n            res.body.dateVisit = res.body.dateVisit != null ? moment(res.body.dateVisit) : null;\n            res.body.lmp = res.body.lmp != null ? moment(res.body.lmp) : null;\n            res.body.pregnancyStatus = res.body.pregnant ? 2 : res.body.breastfeeding ? 3 : 1;\n            if (res.body.bp) {\n                const parts = res.body.bp.split('/');\n                res.body.bp1 = parseInt(parts[0]);\n                res.body.bp2 = parts.length === 2 ? parseInt(parts[1]) : null;\n            }\n        }\n        return res;\n    }\n\n    protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n        if (res.body) {\n            res.body.forEach((clinic: Clinic) => {\n                clinic.dateVisit = clinic.dateVisit != null ? moment(clinic.dateVisit) : null;\n                clinic.lmp = clinic.lmp != null ? moment(clinic.lmp) : null;\n                clinic.nextAppointment = clinic.nextAppointment != null ? moment(clinic.nextAppointment) : null;\n                clinic.pregnancyStatus = clinic.pregnant ? 2 : clinic.breastfeeding ? 3 : 1\n            });\n        }\n        return res;\n    }\n}\n",
        "import { Component, ComponentFactoryResolver, OnDestroy, OnInit } from '@angular/core';\r\nimport { Clinic } from '../../model/clinic.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ClinicService } from '../../services/clinic.service';\r\nimport { TdDialogService } from '@covalent/core';\r\nimport {\r\n    CardViewBoolItemModel,\r\n    CardViewDateItemModel,\r\n    CardViewFloatItemModel,\r\n    CardViewIntItemModel,\r\n    CardViewItem,\r\n    CardViewTextItemModel,\r\n    NotificationService\r\n} from '@alfresco/adf-core';\r\n\r\n@Component({\r\n    selector: 'lamis-clinic',\r\n    templateUrl: './clinic-details.component.html'\r\n})\r\nexport class ClinicDetailsComponent implements OnInit, OnDestroy {\r\n    properties: CardViewItem[] = [];\r\n    entity: Clinic;\r\n\r\n    constructor(private router: Router, private route: ActivatedRoute, private clinicService: ClinicService,\r\n                private cfr: ComponentFactoryResolver, private _dialogService: TdDialogService,\r\n                private notificationService: NotificationService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.data.subscribe(({entity}) => {\r\n            this.entity = !!entity && entity.body ? entity.body : entity;\r\n            const patientId = this.route.snapshot.paramMap.get(\"patientId\");\r\n            this.clinicService.getPatient(patientId).subscribe((res) => this.entity.patient = res);\r\n            this.buildProperties();\r\n        });\r\n    }\r\n\r\n    edit() {\r\n        this.router.navigate(['/', 'clinics', this.entity.uuid, 'patient', this.entity.patient.uuid, 'edit']);\r\n    }\r\n\r\n    delete() {\r\n        this._dialogService.openConfirm({\r\n            title: 'Confirm',\r\n            message: 'Do you want to delete this clinic visit, action cannot be reversed?',\r\n            cancelButton: 'No',\r\n            acceptButton: 'Yes',\r\n            width: '500px',\r\n        }).afterClosed().subscribe((accept: boolean) => {\r\n            if (accept) {\r\n                this.clinicService.delete(this.entity.id).subscribe((res) => {\r\n                    if (res.ok) {\r\n                        this.router.navigate(['patients'])\r\n                    } else {\r\n                        this.notificationService.showError('Error deleting visit, please try again')\r\n                    }\r\n                })\r\n            } else {\r\n                // DO SOMETHING ELSE\r\n            }\r\n        });\r\n    }\r\n\r\n    buildProperties() {\r\n        this.properties.push(new CardViewDateItemModel({\r\n            key: 'ds',\r\n            value: this.entity.dateVisit,\r\n            label: this.entity.commence ? 'ART Start Date' : 'Date Visit',\r\n            format: 'dd MMM, yyyy'\r\n        }));\r\n        if (this.entity.commence) {\r\n            this.properties.push(new CardViewIntItemModel({\r\n                label: 'CD4 at start of ART',\r\n                key: 'cd4',\r\n                value: this.entity.cd4p || null\r\n            }));\r\n            this.properties.push(new CardViewFloatItemModel({\r\n                label: 'CD4%',\r\n                key: 'cd4p',\r\n                value: this.entity.cd4p || null\r\n            }));\r\n            this.properties.push(new CardViewTextItemModel({\r\n                label: 'Original Regimen Line',\r\n                key: 'rl',\r\n                value: this.entity.regimenType != null ? this.entity.regimenType.description : ''\r\n            }));\r\n            this.properties.push(new CardViewTextItemModel({\r\n                label: 'Original Regimen',\r\n                key: 'rl',\r\n                value: this.entity.regimen != null ? this.entity.regimen.description : ''\r\n            }));\r\n        }\r\n        this.properties.push(new CardViewTextItemModel({\r\n            label: 'Clinical Stage',\r\n            key: 'cs',\r\n            value: this.entity.clinicStage\r\n        }));\r\n        this.properties.push(new CardViewTextItemModel({\r\n            label: 'Functional Status',\r\n            key: 'fs',\r\n            value: this.entity.funcStatus\r\n        }));\r\n        this.properties.push(new CardViewTextItemModel({\r\n            label: 'TB Status',\r\n            key: 'ts',\r\n            value: this.entity.tbStatus\r\n        }));\r\n        this.properties.push(new CardViewFloatItemModel({\r\n            label: 'Body Weight(Kg)',\r\n            key: 'bw',\r\n            value: this.entity.bodyWeight || null\r\n        }));\r\n        this.properties.push(new CardViewFloatItemModel({\r\n            label: 'Height(m)',\r\n            key: 'h',\r\n            value: this.entity.height || null\r\n        }));\r\n        this.properties.push(new CardViewTextItemModel({\r\n            label: 'Blood Pressure',\r\n            key: 'cd4p',\r\n            value: this.entity.bp\r\n        }));\r\n        if (this.entity.patient.gender === 'Female') {\r\n            this.properties.push(new CardViewBoolItemModel({\r\n                label: 'Pregnant',\r\n                key: 'pg',\r\n                value: this.entity.pregnant\r\n            }));\r\n            this.properties.push(new CardViewBoolItemModel({\r\n                label: 'Breastfeeding',\r\n                key: 'bf',\r\n                value: this.entity.breastfeeding\r\n            }));\r\n            this.properties.push(new CardViewDateItemModel({\r\n                key: 'lpm',\r\n                value: this.entity.lmp,\r\n                label: 'LMP',\r\n                format: 'dd MMM, yyyy'\r\n            }));\r\n        }\r\n        this.properties.push(new CardViewTextItemModel({\r\n            label: 'Level of Adherence',\r\n            key: 'ts',\r\n            value: this.entity.tbStatus\r\n        }));\r\n        this.properties.push(new CardViewDateItemModel({\r\n            key: 'na',\r\n            value: this.entity.nextAppointment,\r\n            label: 'Next Appointment Date',\r\n            format: 'dd MMM, yyyy'\r\n        }));\r\n    }\r\n\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n    }\r\n}\r\n",
        "import { Component, OnInit } from '@angular/core';\r\nimport {\r\n    Adhere,\r\n    AdverseDrugReaction,\r\n    Clinic,\r\n    ClinicAdverseDrugReaction,\r\n    ClinicVm,\r\n    OpportunisticInfection\r\n} from '../../model/clinic.model';\r\nimport { ClinicService } from '../../services/clinic.service';\r\nimport { NotificationService } from '@alfresco/adf-core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment_ from 'moment';\r\nimport { Moment } from 'moment';\r\nimport { AppLoaderService, entityCompare } from '@lamis/web-core';\r\nimport { ColumnMode } from '@swimlane/ngx-datatable';\r\n\r\nconst moment = moment_;\r\n\r\n@Component({\r\n    selector: 'lamis-clinic-edit',\r\n    templateUrl: './clinic-edit.component.html'\r\n})\r\nexport class ClinicEditComponent implements OnInit {\r\n    //@ViewChild(MatProgressBar, {static: true}) progressBar: MatProgressBar;\r\n    //@ViewChild(MatButton, {static: true}) submitButton: MatButton;\r\n    entity: Clinic;\r\n    isSaving: boolean;\r\n    error = false;\r\n    commence: any;\r\n    today = moment();\r\n    lmpMin: Moment;\r\n    appointmentMax: Moment;\r\n    appointmentMin: Moment;\r\n    opportunisticInfections: OpportunisticInfection[];\r\n    adverseDrugReactions: AdverseDrugReaction[];\r\n    adheres: Adhere[];\r\n    regimenLines: any[];\r\n    regimens: any[];\r\n    dateBirth: Moment;\r\n    dateRegistration: Moment;\r\n    visitDates: Moment[] = [];\r\n    selectedClinicAdr: ClinicAdverseDrugReaction[] = [];\r\n    oiList: OpportunisticInfection[] = [];\r\n    adhereList: Adhere[] = [];\r\n    ColumnMode = ColumnMode;\r\n    adr = false;\r\n\r\n    constructor(private clinicService: ClinicService,\r\n                protected notification: NotificationService,\r\n                protected activatedRoute: ActivatedRoute,\r\n                private appLoaderService: AppLoaderService) {\r\n    }\r\n\r\n    createEntity(): Clinic {\r\n        return <Clinic>{};\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.clinicService.opportunisticInfections().subscribe(res => this.opportunisticInfections = res);\r\n        this.clinicService.adheres().subscribe(res => this.adheres = res);\r\n        this.isSaving = false;\r\n        this.clinicService.getRegimenLines().subscribe(res => {\r\n            this.regimenLines = res;\r\n        });\r\n        this.activatedRoute.data.subscribe(({entity}) => {\r\n            this.commence = !!this.activatedRoute.snapshot.data['commence'];\r\n\r\n            this.entity = !!entity && entity.body ? entity.body : entity;\r\n            if (this.entity === undefined) {\r\n                this.entity = this.createEntity();\r\n            }\r\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\r\n            this.clinicService.getPatient(patientId).subscribe((res) => {\r\n                this.entity.patient = res;\r\n                this.entity.facility = res.facility;\r\n                this.dateBirth = res.dateBirth;\r\n                this.dateRegistration = res.dateRegistration;\r\n\r\n                this.clinicService.getVisitDatesByPatient(this.entity.patient.id).subscribe((res) => {\r\n                    this.visitDates = res;\r\n                });\r\n            });\r\n            if (this.entity.commence && this.entity.regimenType) {\r\n                this.regimenLineChange(this.entity.regimenType);\r\n            }\r\n            this.commence = this.commence || this.entity.commence;\r\n\r\n            if (this.commence) {\r\n                this.entity.commence = true;\r\n                if (this.entity.regimenType) {\r\n                    this.regimenLineChange(this.entity.regimenType);\r\n                }\r\n                if(this.entity.patient.statusAtRegistration === 'ART_TRANSFER_IN') {\r\n                    this.dateRegistration = this.entity.patient.dateRegistration.clone().subtract(10, 'years');\r\n                    if (this.dateRegistration.isBefore(this.entity.patient.dateBirth)) {\r\n                        this.dateRegistration = this.entity.patient.dateBirth.clone().add(3, 'months');\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.entity.id) {\r\n                this.appointmentMin = this.entity.dateVisit.clone().add(14, 'days');\r\n                this.appointmentMax = this.entity.dateVisit.clone().add(6, 'months');\r\n                this.clinicService.getAdhereByClinic(this.entity.id).subscribe((res) => {\r\n                    this.adhereList = res.map(ca => ca.adhere);\r\n                });\r\n                this.clinicService.adverseDrugReactions().subscribe(res1 => {\r\n                    this.adverseDrugReactions = res1;\r\n                    this.clinicService.getAdverseDrugReactionsByClinic(this.entity.id).subscribe(res => {\r\n                        if (res.body && res.body.length > 0) {\r\n                            this.adr = true;\r\n                        }\r\n                        this.adverseDrugReactions.forEach(adr => {\r\n                            let found = false;\r\n                            if (res.body) {\r\n                                res.body.forEach(cadr => {\r\n                                    if (cadr.adverseDrugReaction.id === adr.id) {\r\n                                        found = true;\r\n                                        this.selectedClinicAdr.push(cadr)\r\n                                    }\r\n                                });\r\n                            }\r\n                            if (!found) {\r\n                                this.selectedClinicAdr.push({\r\n                                    adverseDrugReaction: adr\r\n                                })\r\n                            }\r\n                        });\r\n                        this.selectedClinicAdr = [...this.selectedClinicAdr];\r\n                    });\r\n                });\r\n                this.clinicService.getOpportunisticInfectionsByClinic(this.entity.id).subscribe(res => {\r\n                    this.oiList = res.map(co => co.opportunisticInfection)\r\n                })\r\n            } else {\r\n                this.clinicService.adverseDrugReactions().subscribe(res => {\r\n                    this.adverseDrugReactions = res;\r\n                    this.adverseDrugReactions.forEach(adr => {\r\n                        this.selectedClinicAdr.push({\r\n                            adverseDrugReaction: adr\r\n                        })\r\n                    });\r\n                });\r\n\r\n                this.selectedClinicAdr = [...this.selectedClinicAdr];\r\n            }\r\n        });\r\n    }\r\n\r\n    updateValue(event, cell, row: ClinicAdverseDrugReaction) {\r\n        console.log('Edit', event, cell, row);\r\n        this.selectedClinicAdr = [...this.selectedClinicAdr.map(cadr => {\r\n            if (cadr.adverseDrugReaction.id === row.id) {\r\n                cadr.severity = event;\r\n            }\r\n            return cadr;\r\n        })];\r\n        console.log('UPDATED!', row, event);\r\n    }\r\n\r\n\r\n    filterDates(date: Moment): boolean {\r\n        let exists = false;\r\n\r\n        this.visitDates.forEach(d => {\r\n            if (date.diff(d, 'days') === 0) {\r\n                exists = true;\r\n            }\r\n        });\r\n        return (this.entity.id && date.diff(this.entity.dateVisit, 'days') === 0) || !exists;\r\n    }\r\n\r\n    dateChanged(date: Moment) {\r\n        this.appointmentMax = date.clone().add(6, 'months');\r\n        this.lmpMin = date.clone().subtract(2, 'years');\r\n        this.appointmentMin = date.clone().add(14, 'days');\r\n    }\r\n\r\n    entityCompare(e1, e2) {\r\n        return entityCompare(e1, e2)\r\n    }\r\n\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n\r\n    save() {\r\n        this.isSaving = true;\r\n        const vm: ClinicVm = {\r\n            clinic: this.entity,\r\n            adrList: this.selectedClinicAdr.filter(cadr => !!cadr.severity),\r\n            oiList: this.oiList,\r\n            adhereList: this.adhereList\r\n        };\r\n        this.appLoaderService.open('Saving clinic visit..');\r\n        if (this.entity.id !== undefined) {\r\n            this.subscribeToSaveResponse(this.clinicService.update(vm));\r\n        } else {\r\n            this.subscribeToSaveResponse(this.clinicService.create(vm));\r\n        }\r\n    }\r\n\r\n    regimenLineChange(type: any) {\r\n        this.clinicService.getRegimenByLine(type.id).subscribe(res => this.regimens = res);\r\n    }\r\n\r\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\r\n        result.subscribe(\r\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\r\n            (res: HttpErrorResponse) => {\r\n                this.onSaveError();\r\n                this.onError(res.message)\r\n            });\r\n    }\r\n\r\n    private onSaveSuccess(result: any) {\r\n        this.appLoaderService.close();\r\n        this.isSaving = false;\r\n        this.notification.openSnackMessage('Clinic visit successfully saved');\r\n        this.previousState();\r\n    }\r\n\r\n    private onSaveError() {\r\n        this.isSaving = false;\r\n        this.appLoaderService.close();\r\n        this.error = true;\r\n        //this.submitButton.disabled = true;\r\n        this.notification.showError('Error occurred saving clinic visit; try again');\r\n        //this.progressBar.mode = 'determinate';\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.appLoaderService.close();\r\n        this.notification.showError(errorMessage);\r\n    }\r\n}\r\n",
        "import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ClinicService } from './clinic.service';\nimport { Clinic } from '../model/clinic.model';\nimport { ClinicDetailsComponent } from '../components/clinic/clinic-details.component';\nimport { ClinicEditComponent } from '../components/clinic/clinic-edit.component';\n\n@Injectable()\nexport class ClinicResolve implements Resolve<Clinic> {\n    constructor(private service: ClinicService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Clinic> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<Clinic>) => response.ok),\n                map((patient: HttpResponse<Clinic>) => patient.body)\n            );\n        }\n        return of(<Clinic>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Clinic Visit',\n            breadcrumb: 'CLINIC VISIT'\n        },\n        children: [\n            {\n                path: ':id/patient/:patientId/view',\n                component: ClinicDetailsComponent,\n                resolve: {\n                    entity: ClinicResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Clinic Visit',\n                    breadcrumb: 'CLINIC VISIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'patient/:patientId/new',\n                component: ClinicEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Clinic Visit',\n                    breadcrumb: 'ADD CLINIC VISIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'art-commencement/patient/:patientId/new',\n                component: ClinicEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'ART Commencement',\n                    breadcrumb: 'ADD ART COMMENCEMENT',\n                    commence: true\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: ClinicEditComponent,\n                resolve: {\n                    entity: ClinicResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Clinic Visit Edit',\n                    breadcrumb: 'CLINIC VISIT EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n",
        "import { Component, Input, OnInit } from '@angular/core';\nimport { ClinicService } from '../../services/clinic.service';\nimport { Clinic } from '../../model/clinic.model';\nimport { CardViewDateItemModel, CardViewFloatItemModel, CardViewItem, CardViewTextItemModel } from \"@alfresco/adf-core\";\n\n@Component({\n    selector: 'clinic-widget',\n    templateUrl: './clinic.widget.html'\n})\nexport class ClinicWidget implements OnInit {\n    @Input()\n    patientId: number;\n    clinic: Clinic;\n    properties: CardViewItem[] = [];\n\n    constructor(private clinicService: ClinicService) {\n    }\n\n    ngOnInit(): void {\n        this.clinicService.latestVisit(this.patientId).subscribe((res) => {\n            this.clinic = res;\n            this.buildProperties()\n        })\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewDateItemModel({\n            key: 'dv',\n            value: this.clinic.dateVisit,\n            label: 'Last Clinic Visit',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewDateItemModel({\n            key: 'nv',\n            value: this.clinic.nextAppointment,\n            label: 'Next Clinic Visit',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Functional Status',\n            key: 'fs',\n            value: this.clinic.funcStatus\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Clinical Stage',\n            key: 'cs',\n            value: this.clinic.clinicStage\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'TB Status',\n            key: 'ts',\n            value: this.clinic.tbStatus\n        }));\n        this.properties.push(new CardViewFloatItemModel({\n            label: 'Body Weight(Kg)',\n            key: 'bw',\n            value: this.clinic.bodyWeight\n        }));\n    }\n\n}\n",
        "/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport { MatDatetimepickerModule, MatNativeDatetimeModule } from '@mat-datetimepicker/core';\n\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatOptionModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n        MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n        MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n        MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n        MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n        MatTooltipModule, MatDatetimepickerModule, MatNativeDatetimeModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {\n}\n",
        "import { NgModule } from '@angular/core';\nimport { ClinicWidget } from './components/clinic/clinic.widget';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { MaterialModule } from './material.module';\n\n@NgModule({\n    imports:[\n        CommonModule,\n        MaterialModule,\n        CoreModule\n    ],\n    declarations:[\n      ClinicWidget  \n    ],\n    entryComponents: [\n        ClinicWidget\n    ],\n    exports: [\n        ClinicWidget\n    ],\n    providers: [\n    ]\n})\nexport class ClinicWidgetModule {\n    \n}\n",
        "import { CoreModule } from '@alfresco/adf-core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule\r\n} from '@angular/material';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CovalentDialogsModule, CovalentMessageModule } from '@covalent/core';\r\nimport { ClinicDetailsComponent } from './components/clinic/clinic-details.component';\r\nimport { ClinicEditComponent } from './components/clinic/clinic-edit.component';\r\nimport { ClinicResolve, ROUTES } from './services/clinic.route';\r\nimport { ClinicWidgetModule } from './clinic.widget.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { LamisSharedModule, MatDateFormatModule } from '@lamis/web-core';\r\nimport { CustomFormsModule } from 'ng2-validation';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ClinicDetailsComponent,\r\n        ClinicEditComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatCardModule,\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        RouterModule.forChild(ROUTES),\r\n        MatProgressBarModule,\r\n        CovalentMessageModule,\r\n        CovalentDialogsModule,\r\n        MatListModule,\r\n        CoreModule,\r\n        ClinicWidgetModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatDateFormatModule,\r\n        CustomFormsModule,\r\n        LamisSharedModule,\r\n        NgxDatatableModule,\r\n    ],\r\n    exports: [\r\n        ClinicDetailsComponent,\r\n        ClinicEditComponent\r\n    ],\r\n    entryComponents: [\r\n    ],\r\n    providers: [\r\n        ClinicResolve\r\n    ]\r\n})\r\nexport class ClinicModule {\r\n}\r\n",
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { DATE_FORMAT, SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { ChronicCare, ChronicCareVm } from '../model/clinic.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport * as moment_ from 'moment';\nimport { Moment } from 'moment';\n\nconst moment = moment_;\n\n@Injectable({providedIn: 'root'})\nexport class ChronicCareService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/chronic-cares';\n    }\n\n    create(chronicCare: ChronicCareVm): Observable<HttpResponse<ChronicCare>> {\n        const copy = this.convertDateFromClient(chronicCare);\n        return this.http\n            .post<ChronicCare>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: HttpResponse<ChronicCare>) => this.convertDateFromServer(res)));\n    }\n\n    update(chronicCare: ChronicCareVm): Observable<HttpResponse<ChronicCare>> {\n        const copy = this.convertDateFromClient(chronicCare);\n        return this.http\n            .put<ChronicCare>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: HttpResponse<ChronicCare>) => this.convertDateFromServer(res)));\n    }\n\n    find(id: number): Observable<HttpResponse<ChronicCare>> {\n        return this.http\n            .get<ChronicCare>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<ChronicCare>) => this.convertDateFromServer(res)));\n    }\n\n    findByUuid(id: string): Observable<HttpResponse<ChronicCare>> {\n        return this.http\n            .get<ChronicCare>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<ChronicCare>) => this.convertDateFromServer(res)));\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    getDmScreens() {\n        return this.http.get(`${this.resourceUrl}/dm-screens`)\n    }\n\n    getTbScreens() {\n        return this.http.get(`${this.resourceUrl}/tb-screens`)\n    }\n\n    getDmScreenByChronicCare(id: number) {\n        return this.http.get(`${this.resourceUrl}/${id}/dm-screens`)\n    }\n\n    getTbScreenByChronicCare(id: number) {\n        return this.http.get(`${this.resourceUrl}/${id}/tb-screens`)\n    }\n\n    getVisitDatesByPatient(patientId: number) {\n        return this.http.get<Moment[]>(`${this.resourceUrl}/patient/${patientId}/visit-dates`)\n            .pipe(map((res) => {\n                    res.forEach(d => moment(d));\n                    return res;\n                })\n            )\n    }\n\n    protected convertDateFromServer(res: HttpResponse<ChronicCare>): HttpResponse<ChronicCare> {\n        if (res.body) {\n            res.body.dateLastCd4 = res.body.dateLastCd4 != null ? moment(res.body.dateLastCd4) : null;\n            res.body.dateVisit = res.body.dateVisit != null ? moment(res.body.dateVisit) : null;\n            res.body.dateLastViralLoad = res.body.dateLastViralLoad != null ? moment(res.body.dateLastViralLoad) : null;\n            res.body.dateStartedTbTreatment = res.body.dateStartedTbTreatment != null ? moment(res.body.dateStartedTbTreatment) : null;\n        }\n        return res;\n    }\n\n    protected convertDateFromClient(vm: ChronicCareVm): ChronicCareVm {\n        vm.chronicCare = Object.assign({}, vm.chronicCare, {\n            dateLastViralLoad: vm.chronicCare.dateLastViralLoad != null && vm.chronicCare.dateLastViralLoad.isValid() ?\n                vm.chronicCare.dateLastViralLoad.format(DATE_FORMAT) : null,\n            dateVisit: vm.chronicCare.dateVisit != null && vm.chronicCare.dateVisit.isValid() ?\n                vm.chronicCare.dateVisit.format(DATE_FORMAT) : null,\n            dateLastCd4: vm.chronicCare.dateLastCd4 != null && vm.chronicCare.dateLastCd4.isValid() ?\n                vm.chronicCare.dateLastCd4.format(DATE_FORMAT) : null,\n            dateStartedTbTreatment: vm.chronicCare.dateStartedTbTreatment != null &&\n            vm.chronicCare.dateStartedTbTreatment.isValid() ? vm.chronicCare.dateStartedTbTreatment.format(DATE_FORMAT) : null\n        });\n        return vm;\n    }\n\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport { ClinicService } from '../../services/clinic.service';\nimport { CardViewItem, NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ChronicCare } from '../../model/clinic.model';\nimport { TdDialogService } from '@covalent/core';\nimport { ChronicCareService } from '../../services/chronic.care.service';\n\n@Component({\n    selector: 'chronic-care-detail',\n    templateUrl: './chronic.care.detail.component.html'\n})\nexport class ChronicCareDetailComponent implements OnInit {\n    properties: CardViewItem[] = [];\n    entity: ChronicCare;\n\n    constructor(private router: Router, private route: ActivatedRoute, private chronicCareService: ChronicCareService,\n                private _dialogService: TdDialogService, private notificationService: NotificationService,\n                private clinicService: ClinicService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            const patientId = this.route.snapshot.paramMap.get('patientId');\n            this.clinicService.getPatient(patientId).subscribe((res) => this.entity.patient = res);\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'chronic-cares', this.entity.uuid, 'patient', this.entity.patient.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this chronic care visit, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.chronicCareService.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['patients'])\n                    } else {\n                        this.notificationService.showError('Error deleting visit, please try again')\n                    }\n                })\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n\n    }\n\n\n    previousState() {\n        window.history.back();\n    }\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport { ChronicCare, ChronicCareDm, ChronicCareTB, Patient } from '../../model/clinic.model';\nimport { ClinicService } from '../../services/clinic.service';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ChronicCareService } from '../../services/chronic.care.service';\nimport { Observable } from 'rxjs';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport * as moment_ from 'moment';\nimport { Moment } from 'moment';\nimport { AppLoaderService } from '@lamis/web-core';\n\nconst moment = moment_;\n\n@Component({\n    selector: 'chronic-care-edit',\n    templateUrl: './chronic.care.edit.component.html'\n})\nexport class ChronicCareEditComponent implements OnInit {\n    entity: ChronicCare;\n    patient: Patient;\n    today = moment();\n    tbs: ChronicCareTB[] = [];\n    dms: ChronicCareDm[] = [];\n    visitDates: Moment[] = [];\n    isSaving: boolean = false;\n    bmi: string = '';\n    bmiCalculated: string = '';\n\n    constructor(private clinicService: ClinicService,\n                private chronicCareService: ChronicCareService,\n                protected notification: NotificationService,\n                protected activatedRoute: ActivatedRoute,\n                private appLoaderService: AppLoaderService) {\n    }\n\n    createEntity(): ChronicCare {\n        return <ChronicCare>{};\n    }\n\n    ngOnInit(): void {\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\n            this.clinicService.getPatient(patientId).subscribe((res) => {\n                this.entity.patient = res;\n                this.entity.facility = res.facility;\n                this.chronicCareService.getVisitDatesByPatient(this.entity.patient.id).subscribe((res) => {\n                    this.visitDates = res;\n                });\n            });\n\n            this.calculateBmi();\n        });\n\n    }\n\n    filterDates(date: Moment): boolean {\n        let exists = false;\n\n        this.visitDates.forEach(d => {\n            if (date.diff(d, 'days') === 0) {\n                exists = true;\n            }\n        });\n        return (this.entity.id && date.diff(this.entity.dateVisit, 'days') === 0) || !exists;\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    calculateBmi() {\n        if (this.entity.bodyWeight && this.entity.height) {\n            const bmi = this.entity.bodyWeight / Math.pow(this.entity.height, 2);\n            if (bmi < 18.5) {\n                this.bmi = '<18.5 (Underweight)';\n            } else if (bmi < 24.9) {\n                this.bmi = '18.5 - 24.9 (Healthy)';\n            } else if (bmi < 29.9) {\n                this.bmi = '25.0 - 29.9 (Overweight)';\n            } else if (bmi < 40) {\n                this.bmi = '30 - 40 (Obesity)';\n            } else {\n                this.bmi = '>40 (Morbid Obesity)';\n            }\n            this.bmiCalculated = bmi.toFixed(1);\n        } else {\n            this.bmi = '';\n        }\n    }\n\n    save() {\n        //this.submitButton.disabled = true;\n        //this.progressBar.mode = 'indeterminate';\n        this.isSaving = true;\n        this.appLoaderService.open('Saving chronic care visit..');\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.chronicCareService.update({\n                chronicCare: this.entity,\n                tbs: this.tbs,\n                dms: this.dms\n            }));\n        } else {\n            this.subscribeToSaveResponse(this.chronicCareService.create({\n                chronicCare: this.entity,\n                tbs: this.tbs,\n                dms: this.dms\n            }));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.onSaveError();\n                this.onError(res.message)\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.openSnackMessage('Chronic Care visit successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.appLoaderService.close();\n        //this.submitButton.disabled = true;\n        this.notification.showError('Error occurred saving chronic care visit; try again');\n        //this.progressBar.mode = 'determinate';\n    }\n\n    protected onError(errorMessage: string) {\n        this.appLoaderService.close();\n        this.notification.showError(errorMessage);\n    }\n\n}\n",
        "import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ChronicCare } from '../model/clinic.model';\nimport { ChronicCareService } from './chronic.care.service';\nimport { ChronicCareEditComponent } from '../components/chronic-care/chronic.care.edit.component';\nimport { ChronicCareDetailComponent } from '../components/chronic-care/chronic.care.detail.component';\n\n@Injectable()\nexport class ChronicCareResolve implements Resolve<ChronicCare> {\n    constructor(private service: ChronicCareService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<ChronicCare> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<ChronicCare>) => response.ok),\n                map((patient: HttpResponse<ChronicCare>) => patient.body)\n            );\n        }\n        return of(<ChronicCare>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Chronic Care Visit',\n            breadcrumb: 'CHRONIC CARE VISIT'\n        },\n        children: [\n            {\n                path: ':id/patient/:patientId/view',\n                component: ChronicCareDetailComponent,\n                resolve: {\n                    entity: ChronicCareResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Chronic Care Visit',\n                    breadcrumb: 'CHRONIC CARE VISIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'patient/:patientId/new',\n                component: ChronicCareEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Chronic Care Visit',\n                    breadcrumb: 'ADD CHRONIC CARE VISIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: ChronicCareEditComponent,\n                resolve: {\n                    entity: ChronicCareResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Chronic Care Visit Edit',\n                    breadcrumb: 'CHRONIC CARE VISIT EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n",
        "import { NgModule } from '@angular/core';\nimport { ChronicCareDetailComponent } from './components/chronic-care/chronic.care.detail.component';\nimport { ChronicCareEditComponent } from './components/chronic-care/chronic.care.edit.component';\nimport { ChronicCareResolve } from './services/chronic.care.route';\nimport { MaterialModule } from './material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { CommonModule } from '@angular/common';\nimport { CovalentDialogsModule } from '@covalent/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LamisSharedModule, MatDateFormatModule } from '@lamis/web-core';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES } from './services/chronic.care.route';\nimport { MatStepperModule } from \"@angular/material\";\n\n@NgModule({\n    declarations: [\n        ChronicCareDetailComponent,\n        ChronicCareEditComponent\n    ],\n    imports: [\n        CommonModule,\n        CovalentDialogsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        LamisSharedModule,\n        MaterialModule,\n        CoreModule,\n        CustomFormsModule,\n        MatDateFormatModule,\n        RouterModule.forChild(ROUTES),\n        MatStepperModule\n    ],\n    providers: [\n        ChronicCareResolve\n    ]\n})\nexport class ChronicCareModule {\n    \n}\n",
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { DATE_FORMAT, SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { EAC } from '../model/clinic.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as moment_ from 'moment';\nimport { Moment } from 'moment';\n\nconst moment = moment_;\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EacService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/eacs';\n    }\n\n    create(eac: EAC): Observable<HttpResponse<EAC>> {\n        const copy = this.convertDateFromClient(eac);\n        return this.http\n            .post<EAC>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    update(eac: EAC): Observable<HttpResponse<EAC>> {\n        const copy = this.convertDateFromClient(eac);\n        return this.http\n            .put<EAC>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    find(id: number): Observable<HttpResponse<EAC>> {\n        return this.http\n            .get<EAC>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    findByUuid(id: string): Observable<HttpResponse<EAC>> {\n        return this.http\n            .get<EAC>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    getLatestByPatient(uuid: string): Observable<HttpResponse<EAC>> {\n        return this.http\n            .get<EAC>(`${this.resourceUrl}/patient/${uuid}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<EAC>) => this.convertDateFromServer(res)));\n    }\n\n    getLatestViralLoadByPatient(id: number): Observable<HttpResponse<any>> {\n        return this.http\n            .get<any>(`${this.resourceUrl}/patient/${id}/viral-load-result`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<any>) => {\n                if (res.body) {\n                    res.body.laboratory.dateReported = res.body.laboratory.dateReported != null ?\n                        moment(res.body.laboratory.dateReported) : null\n                }\n                return res;\n            }));\n    }\n\n    protected convertDateFromClient(eac: EAC): EAC {\n        const copy: EAC = Object.assign({}, eac, {\n            dateEac1: eac.dateEac1 != null && eac.dateEac1.isValid() ? eac.dateEac1.format(DATE_FORMAT) : null,\n            dateEac2: eac.dateEac2 != null && eac.dateEac2.isValid() ? eac.dateEac2.format(DATE_FORMAT) : null,\n            dateEac3: eac.dateEac3 != null && eac.dateEac3.isValid() ? eac.dateEac3.format(DATE_FORMAT) : null,\n            dateSampleCollected: eac.dateSampleCollected != null && eac.dateSampleCollected.isValid() ? eac.dateSampleCollected.format(DATE_FORMAT) : null,\n            dateLastViralLoad: eac.dateLastViralLoad != null && eac.dateLastViralLoad.isValid() ? eac.dateLastViralLoad.format(DATE_FORMAT) : null,\n        });\n        return copy;\n    }\n\n    protected convertDateFromServer(res: HttpResponse<EAC>): HttpResponse<EAC> {\n        if (res.body) {\n            res.body.dateLastViralLoad = res.body.dateLastViralLoad != null ? moment(res.body.dateLastViralLoad) : null;\n            res.body.dateEac1 = res.body.dateEac1 != null ? moment(res.body.dateEac1) : null;\n            res.body.dateEac2 = res.body.dateEac2 != null ? moment(res.body.dateEac2) : null;\n            res.body.dateEac3 = res.body.dateEac3 != null ? moment(res.body.dateEac3) : null;\n            res.body.dateSampleCollected = res.body.dateSampleCollected != null ? moment(res.body.dateSampleCollected) : null;\n        }\n        return res;\n    }\n\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport { EAC } from '../../model/clinic.model';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TdDialogService } from '@covalent/core';\nimport { CardViewDateItemModel, CardViewItem, CardViewTextItemModel, NotificationService } from '@alfresco/adf-core';\nimport { EacService } from '../../services/eac.service';\n\n@Component({\n    selector: 'eac-details',\n    templateUrl: './eac.details.component.html'\n})\nexport class EacDetailsComponent implements OnInit {\n    properties: CardViewItem[] = [];\n    entity: EAC;\n\n    constructor(private router: Router, private route: ActivatedRoute,\n                private _dialogService: TdDialogService, private notificationService: NotificationService,\n                private eacService: EacService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'eacs', this.entity.uuid, 'patient', this.entity.patient.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this EAC Record, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.eacService.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['patients'])\n                    } else {\n                        this.notificationService.showError('Error deleting visit, please try again')\n                    }\n                })\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewDateItemModel({\n            key: 'ds',\n            value: this.entity.dateLastViralLoad,\n            label: 'Date Last Viral Load',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            key: 'vl',\n            value: this.entity.lastViralLoad,\n            label: 'Last Viral Load'\n        }));\n        this.properties.push(new CardViewDateItemModel({\n            key: 'ds',\n            value: this.entity.dateEac1,\n            label: 'Date of 1st EAC Session',\n            format: 'dd MMM, yyyy'\n        }));\n        if (this.entity.dateEac2) {\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: this.entity.dateEac2,\n                label: 'Date of 2nd EAC Session',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n        if (this.entity.dateEac3) {\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: this.entity.dateEac3,\n                label: 'Date of 3rd EAC Session',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n        if (this.entity.dateEac3) {\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: this.entity.dateSampleCollected,\n                label: 'Date of Repeat VL Sample Collection',\n                format: 'dd MMM, yyyy'\n            }));\n        }\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Notes',\n            key: 'ts',\n            value: this.entity.notes\n        }));\n    }\n\n    previousState() {\n        window.history.back();\n    }\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport * as moment_ from 'moment';\nimport { Observable } from 'rxjs';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { ClinicService } from '../../services/clinic.service';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppLoaderService } from '@lamis/web-core';\nimport { EAC, Patient } from '../../model/clinic.model';\nimport { EacService } from '../../services/eac.service';\nimport { Moment } from 'moment';\n\nconst moment = moment_;\n\n\n@Component({\n    selector: 'eac-edit',\n    templateUrl: './eac.edit.component.html'\n})\nexport class EacEditComponent implements OnInit {\n    entity: EAC;\n    patient: Patient;\n    today = moment();\n    dateRegistration: Moment;\n    eac1Min: Moment;\n    eac2Min: Moment;\n    eac3Min: Moment;\n    repeatVLMin: Moment;\n    repeatVLMax: Moment;\n    isSaving: boolean = false;\n\n    constructor(private clinicService: ClinicService,\n                private eacService: EacService,\n                protected notification: NotificationService,\n                protected activatedRoute: ActivatedRoute,\n                private appLoaderService: AppLoaderService) {\n    }\n\n    createEntity(): EAC {\n        return <EAC>{};\n    }\n\n    ngOnInit(): void {\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\n            this.clinicService.getPatient(patientId).subscribe((res) => {\n                this.entity.patient = res;\n                this.entity.facility = res.facility;\n                this.dateRegistration = res.dateRegistration;\n                this.eacService.getLatestViralLoadByPatient(res.id).subscribe(r => {\n                    if (r.body) {\n                        this.entity.dateLastViralLoad = r.body.laboratory.dateReported;\n                        this.entity.lastViralLoad = r.body.resultAB;\n                        this.eac1Min = this.entity.dateLastViralLoad.clone().add(1, 'day');\n                    }\n                    this.eac2Min = this.entity.dateEac1 ? this.entity.dateEac1.clone().add(2, 'week') :\n                        this.entity.dateLastViralLoad;\n                    this.eac3Min = this.entity.dateEac2 ? this.entity.dateEac2.clone().add(2, 'week') :\n                        this.entity.dateLastViralLoad;\n                    this.repeatVLMin = this.entity.dateEac3 ? this.entity.dateEac3.clone().add(1, 'day') :\n                        this.entity.dateLastViralLoad;\n                });\n                if (!this.entity.id) {\n                    this.eacService.getLatestByPatient(res.uuid).subscribe(r => {\n                        this.entity = r.ok ? r.body : this.createEntity();\n                        this.repeatVLMin = this.entity.dateEac3 ? this.entity.dateEac3.clone().add(1, 'day') :\n                            this.entity.dateLastViralLoad;\n                        this.eac2Min = this.entity.dateEac1 ? this.entity.dateEac1.clone().add(2, 'week') :\n                            this.entity.dateLastViralLoad;\n                        this.eac3Min = this.entity.dateEac2 ? this.entity.dateEac2.clone().add(2, 'week') :\n                            this.entity.dateLastViralLoad;\n                    });\n                }\n            });\n\n        });\n    }\n\n    dateEac1Changed(date: Moment) {\n        this.eac2Min = date.clone().add(2, 'weeks')\n    }\n\n    dateEac2Changed(date: Moment) {\n        this.eac3Min = date.clone().add(2, 'weeks')\n    }\n\n    dateEac3Changed(date: Moment) {\n        this.repeatVLMin = date.clone().add(1, 'days');\n        this.repeatVLMax = date.clone().add(6, 'months');\n    }\n\n    save() {\n        //this.submitButton.disabled = true;\n        //this.progressBar.mode = 'indeterminate';\n        this.isSaving = true;\n        this.appLoaderService.open('Saving EAC session..');\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.eacService.update(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.eacService.create(this.entity));\n        }\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.onSaveError();\n                this.onError(res.message)\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.openSnackMessage('EAC session successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.appLoaderService.close();\n        //this.submitButton.disabled = true;\n        this.notification.showError('Error occurred saving EAC session; try again');\n        //this.progressBar.mode = 'determinate';\n    }\n\n    protected onError(errorMessage: string) {\n        this.appLoaderService.close();\n        this.notification.showError(errorMessage);\n    }\n\n}\n",
        "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\nimport { EAC } from '../model/clinic.model';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { HttpResponse } from '@angular/common/http';\nimport { EacService } from './eac.service';\nimport { EacEditComponent } from '../components/eac/eac.edit.component';\nimport { EacDetailsComponent } from '../components/eac/eac.details.component';\n\n@Injectable()\nexport class EacResolve implements Resolve<EAC> {\n    constructor(private service: EacService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<EAC> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<EAC>) => response.ok),\n                map((patient: HttpResponse<EAC>) => patient.body)\n            );\n        }\n        return of(<EAC>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'EAC Session',\n            breadcrumb: 'EAC SESSION'\n        },\n        children: [\n            {\n                path: ':id/patient/:patientId/view',\n                component: EacDetailsComponent,\n                resolve: {\n                    entity: EacResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'EAC Session',\n                    breadcrumb: 'EAC SESSION'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'patient/:patientId/new',\n                component: EacEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'EAC Session',\n                    breadcrumb: 'ADD EAC SESSION',\n                    commence: true\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: EacEditComponent,\n                resolve: {\n                    entity: EacResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'EAC Session Edit',\n                    breadcrumb: 'EAC SESSION EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n",
        "import { NgModule } from '@angular/core';\nimport { EacDetailsComponent } from './components/eac/eac.details.component';\nimport { EacEditComponent } from './components/eac/eac.edit.component';\nimport { EacResolve, ROUTES } from './services/eac.route';\nimport { CommonModule } from '@angular/common';\nimport { CovalentDialogsModule } from '@covalent/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LamisSharedModule, MatDateFormatModule } from '@lamis/web-core';\nimport { MaterialModule } from './material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        CovalentDialogsModule,\n        FormsModule,\n        ReactiveFormsModule,\n        LamisSharedModule,\n        MaterialModule,\n        CoreModule,\n        CustomFormsModule,\n        MatDateFormatModule,\n        RouterModule.forChild(ROUTES)\n    ],\n    declarations: [\n        EacDetailsComponent,\n        EacEditComponent\n    ],\n    providers: [\n        EacResolve\n    ]\n})\nexport class EacModule {\n\n}\n",
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { Facility } from '../model/facility.model';\nimport { CaseManager, CaseManagerStats, Patient } from '../model/case-management.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CaseManagementService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/case-management';\n    }\n\n    initClients(facilityId: number) {\n        return this.http.get(`${this.resourceUrl}/init-clients/${facilityId}`)\n    }\n\n    getClientList(req: any) {\n        return this.http.post<Patient[]>(`${this.resourceUrl}/client-list`, req, {observe: 'response'})\n    }\n\n    getCaseManagerStats(caseManagerId: number, facilityId: number) {\n        return this.http.get<CaseManagerStats>(`${this.resourceUrl}/facility/${facilityId}/case-manager/${caseManagerId}/stats`)\n    }\n\n    getActiveFacility() {\n        return this.http.get<Facility>('/api/facilities/active')\n    }\n\n    getCaseManagers(facilityId: number) {\n        return this.http.get<CaseManager[]>(`${this.resourceUrl}/facility/${facilityId}/case-managers`)\n    }\n\n    assignToCaseManager(caseManagerId: number, ids: number[]) {\n        let params = new HttpParams();\n        ids.forEach(id => params = params.append(\"ids\", id.toString()));\n        return this.http.get(`${this.resourceUrl}/case-manager/${caseManagerId}/assign-clients`, {\n            params,\n            observe: 'response'\n        })\n    }\n\n    deAssignClients(ids: number[]) {\n        let params = new HttpParams();\n        ids.forEach(id => params = params.append(\"ids\", id.toString()));\n        return this.http.get(`${this.resourceUrl}/de-assign-clients`, {\n            params,\n            observe: 'response'\n        })\n    }\n\n    getStates() {\n        return this.http.get<any[]>('/api/states')\n    }\n\n    getLgasByState(id) {\n        return this.http.get<any[]>(`/api/provinces/state/${id}`)\n    }\n}\n",
        "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { CaseManager, CaseManagerStats, Patient } from '../../model/case-management.model';\nimport { CaseManagementService } from '../../services/case-management.service';\nimport { CardViewIntItemModel, CardViewItem, NotificationService } from '@alfresco/adf-core';\nimport { TdDialogService } from '@covalent/core';\nimport { Subscription } from 'rxjs';\nimport { RxStompService } from '@stomp/ng2-stompjs';\nimport { Message } from \"@stomp/stompjs\";\n\nexport interface Filter {\n    upperAgeLimit?: number;\n    lowerAgeLimit?: number;\n    pregnant?: boolean;\n    breastfeeding?: boolean;\n    lgaId?: number;\n    facilityId?: number;\n    status?: string;\n    gender?: string;\n    hospitalNum?: string;\n    page?: number;\n    size?: number;\n    assigned?: boolean;\n}\n\n@Component({\n    selector: 'case-management-patient-list',\n    templateUrl: './patient.list.component.html'\n})\nexport class PatientListComponent implements OnInit, OnDestroy {\n    caseManagers: CaseManager[] = [];\n    caseManager: CaseManager;\n    patients: Patient[] = [];\n    properties: Array<CardViewItem> = [];\n    globalProperties: Array<CardViewItem> = [];\n    stats: CaseManagerStats = {};\n    globalStats: CaseManagerStats = {};\n    facilityId: number;\n    filter: Filter = {};\n    ageLimit: number;\n    pregnancyStatus: number;\n    states: any[];\n    lgas: any[];\n    hospitalNum: string = '';\n    totalItems = 0;\n    page = 0;\n    itemsPerPage = 20;\n    loading = true;\n    initializing = true;\n    private topicSubscription: Subscription;\n\n    constructor(private service: CaseManagementService, private _dialogService: TdDialogService,\n                private notificationService: NotificationService, private stompService: RxStompService) {\n    }\n\n    ngOnInit(): void {\n        /*this.topicSubscription = this.stompService.watch('/topic/case-management').subscribe((msg: Message) => {\n            console.log('Simp Message', msg);\n            if(msg.body === 'finished'){\n                this.initializing = false;\n            }\n        });*/\n\n        this.service.getActiveFacility().subscribe((f) => {\n            if (f) {\n                this.facilityId = f.id;\n                this.service.initClients(f.id).subscribe((r) => {\n                    this.initializing = false;\n                    this.service.getCaseManagers(f.id).subscribe(res => {\n                        this.caseManagers = res;\n                        this.updateList()\n                    });\n                });\n\n                this.service.getCaseManagerStats(0, f.id).subscribe(res => {\n                    this.stats = res;\n                    this.buildStats();\n                })\n            }\n        });\n        this.service.getStates().subscribe(res => this.states = res)\n    }\n\n    ngOnDestroy(): void {\n        //this.topicSubscription.unsubscribe();\n    }\n\n    clearHospitalNum() {\n        this.hospitalNum = null;\n        this.filter['hospitalNum'] = null;\n        this.page = 0;\n    }\n\n    search() {\n        this.page = 0;\n        this.updateList();\n    }\n\n    assignClients() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to assign selected clients to the selected Case Manager?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                const patientIds = this.patients.filter(p => p.selected)\n                    .map(p => p.id);\n                this.service.assignToCaseManager(this.caseManager.id, patientIds).subscribe((res) => {\n                    if (res.ok) {\n                        this.updateList();\n                        this.service.getCaseManagerStats(this.caseManager.id, this.facilityId).subscribe(res => {\n                            this.stats = res;\n                            this.buildStats();\n                        })\n                    } else {\n                        this.notificationService.showError('Error assigning clients, please try again')\n                    }\n                })\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    deAssignClients() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to de-assign selected clients?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                const patientIds = this.patients.filter(p => p.selected)\n                    .map(p => p.id);\n                this.service.deAssignClients(patientIds).subscribe((res) => {\n                    if (res.ok) {\n                        this.updateList();\n                        this.service.getCaseManagerStats(this.caseManager.id, this.facilityId).subscribe(res => {\n                            this.stats = res;\n                            this.buildStats();\n                        })\n                    } else {\n                        this.notificationService.showError('Error de-assigning clients, please try again')\n                    }\n                })\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    selections(): boolean {\n        return this.patients && !!this.patients.find(p => p.selected)\n    }\n\n    loadPage(page) {\n        this.page = page;\n        this.updateList()\n    }\n\n    select(event) {\n        this.patients = this.patients.map(p => {\n            if (p.id === event.obj.id) {\n                p.selected = !p.selected;\n            }\n            return p;\n        });\n    }\n\n    caseManagerChanged() {\n        if (!this.caseManager) {\n            this.stats = null\n        }\n        this.service.getCaseManagerStats(this.caseManager.id, this.facilityId).subscribe(res => {\n            this.stats = res;\n            this.buildStats();\n        })\n    }\n\n    updateList() {\n        if (this.hospitalNum) {\n            this.filter.hospitalNum = this.hospitalNum;\n        }\n        this.filter['facilityId'] = this.facilityId;\n        this.filter['size'] = this.itemsPerPage;\n        this.filter['page'] = this.page > 0 ? this.page - 1 : 0;\n        this.loading = true;\n        this.service.getClientList(this.filter).subscribe(res => {\n            if (res.body) {\n                this.patients = res.body.map(p => {\n                    const caseManager = this.caseManagers.find(c => c.id === p.caseManagerId);\n                    if (caseManager) {\n                        p.caseManager = caseManager;\n                    }\n                    return p;\n                });\n                this.totalItems = (<any>res.headers).get('X-Total-Count');\n                this.service.getCaseManagerStats(0, this.facilityId).subscribe(res => {\n                    this.globalStats = res;\n                    this.buildGlobalStats();\n                });\n            }\n            this.loading = false;\n        })\n    }\n\n    ageGroupChanged() {\n        if (this.ageLimit == 9) {\n            this.filter['lowerAgeLimit'] = 0;\n            this.filter['upperAgeLimit'] = 9;\n        } else if (this.ageLimit == 14) {\n            this.filter['lowerAgeLimit'] = 10;\n            this.filter['upperAgeLimit'] = 14;\n        } else if (this.ageLimit == 19) {\n            this.filter['lowerAgeLimit'] = 15;\n            this.filter['upperAgeLimit'] = 19;\n        } else if (this.ageLimit == 24) {\n            this.filter['lowerAgeLimit'] = 20;\n            this.filter['upperAgeLimit'] = 24;\n        } else if (this.ageLimit == 100) {\n            this.filter['lowerAgeLimit'] = 25;\n            this.filter['upperAgeLimit'] = 100;\n        }\n        if (!this.ageLimit) {\n            this.filter['lowerAgeLimit'] = null;\n            this.filter['upperAgeLimit'] = null;\n        }\n        this.updateList()\n    }\n\n    pregnancyStatusChanged() {\n        if (this.pregnancyStatus == 1) {\n            this.filter['pregnant'] = true\n        } else if (this.pregnancyStatus == 2) {\n            this.filter['breastfeeding'] = true\n        }\n        if (!this.pregnancyStatus) {\n            this.filter['pregnant'] = null;\n            this.filter['breastfeeding'] = null;\n        }\n        this.updateList()\n    }\n\n    stateChanged(id) {\n        if (id) {\n            this.service.getLgasByState(id).subscribe(res => this.lgas = res)\n        }\n    }\n\n    assigned(val) {\n        if (val == 1) {\n            this.filter.assigned = true;\n        } else if (val == 2) {\n            this.filter.assigned = false;\n        } else {\n            this.filter.assigned = null;\n        }\n        this.updateList();\n    }\n\n    lgaChanged(id) {\n        if (id) {\n            this.filter.lgaId = id\n        } else {\n            this.filter.lgaId = null\n        }\n        this.updateList()\n    }\n\n    buildStats() {\n        this.properties = [];\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Clients(s) Assigned',\n            key: 'as',\n            value: this.stats.assigned\n        }));\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Stable 1 Year',\n            key: 'as',\n            value: this.stats.stable\n        }));\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Unstable less than 1 Year',\n            key: 'as',\n            value: this.stats.unstableLessThan1year\n        }));\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Unstable more than 1 Year',\n            key: 'as',\n            value: this.stats.unstableMoreThan1Year\n        }));\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Awaiting ART',\n            key: 'as',\n            value: this.stats.preArt\n        }));\n    }\n\n    buildGlobalStats() {\n        this.globalProperties = [];\n        if (this.globalStats) {\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Clients(s) Assigned',\n                key: 'as',\n                value: this.globalStats.assigned\n            }));\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Stable 1 Year',\n                key: 'as',\n                value: this.globalStats.stable\n            }));\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Unstable less than 1 Year',\n                key: 'as',\n                value: this.globalStats.unstableLessThan1year\n            }));\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Unstable more than 1 Year',\n                key: 'as',\n                value: this.globalStats.unstableMoreThan1Year\n            }));\n            this.globalProperties.push(new CardViewIntItemModel({\n                label: 'Awaiting ART',\n                key: 'as',\n                value: this.globalStats.preArt\n            }));\n        }\n    }\n}\n",
        "import { Routes } from '@angular/router';\nimport { PatientListComponent } from '../components/case-management/patient.list.component';\n\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Case Management',\n            breadcrumb: 'CASE MANAGEMENT'\n        },\n        children: [\n            {\n                path: '',\n                children: [\n                    {\n                        path: '',\n                        component: PatientListComponent,\n                        data: {\n                            authorities: ['ROLE_USER'],\n                            title: 'Case Management',\n                            breadcrumb: 'CASE MANAGEMENT'\n                        }\n                    }\n                ],\n                data: {\n                    title: 'Case Management',\n                    breadcrumb: 'CASE MANAGEMENT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n",
        "import { NgModule } from '@angular/core';\nimport { PatientListComponent } from './components/case-management/patient.list.component';\nimport { MaterialModule } from './material.module';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CovalentDialogsModule, CovalentSearchModule } from '@covalent/core';\nimport { ROUTES } from './services/case-management.route';\nimport { RouterModule } from '@angular/router';\nimport { LamisSharedModule } from '@lamis/web-core';\n\n@NgModule({\n    imports: [\n        MaterialModule,\n        FormsModule,\n        CommonModule,\n        RouterModule.forChild(ROUTES),\n        CoreModule,\n        NgbModule,\n        CovalentSearchModule,\n        CovalentDialogsModule,\n        LamisSharedModule,\n    ],\n    declarations: [\n        PatientListComponent\n    ],\n    providers: [\n\n    ]\n})\nexport class CaseManagementModule {\n\n}\n",
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { createRequestOption, SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { Observable } from 'rxjs';\nimport { CaseManager } from '../model/case-management.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CaseManagerService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/case-managers';\n    }\n\n    create(caseManager: CaseManager): Observable<HttpResponse<CaseManager>> {\n        return this.http\n            .post<CaseManager>(this.resourceUrl, caseManager, {observe: 'response'});\n    }\n\n    update(caseManager: CaseManager): Observable<HttpResponse<CaseManager>> {\n        return this.http\n            .put<CaseManager>(this.resourceUrl, caseManager, {observe: 'response'})\n    }\n\n    find(id: number): Observable<HttpResponse<CaseManager>> {\n        return this.http\n            .get<CaseManager>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    findByUuid(id: string): Observable<HttpResponse<CaseManager>> {\n        return this.http\n            .get<CaseManager>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'});\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    query(req?: any): Observable<HttpResponse<CaseManager[]>> {\n        const options = createRequestOption(req);\n        return this.http\n            .get<CaseManager[]>(this.resourceUrl, {params: options, observe: 'response'});\n    }\n}\n",
        "import { Component } from '@angular/core';\nimport { CardViewItem, CardViewTextItemModel, NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TdDialogService } from '@covalent/core';\nimport { CaseManager } from '../../model/case-management.model';\nimport { CaseManagerService } from '../../services/case-manager.service';\n\n@Component({\n    selector: 'case-manager-details',\n    templateUrl: './case-manager.details.component.html'\n})\nexport class CaseManagerDetailsComponent {\n    properties: CardViewItem[] = [];\n    entity: CaseManager;\n\n    constructor(private router: Router, private route: ActivatedRoute, private service: CaseManagerService,\n                private _dialogService: TdDialogService,\n                private notificationService: NotificationService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'admin', 'case-managers', this.entity.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this Case Manager, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.service.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['admin', 'case-managers'])\n                    } else {\n                        this.notificationService.showError('Error deleting Case Manager, please try again')\n                    }\n                })\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Name',\n            key: 'cs',\n            value: this.entity.name\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Address',\n            key: 'fs',\n            value: this.entity.address\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Gender',\n            key: 'ts',\n            value: this.entity.gender === 'FEMALE' ? 'Female' : 'Male'\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Telephone',\n            key: 'cd4p',\n            value: this.entity.phoneNumber\n        }));\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport { CaseManager } from '../../model/case-management.model';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppLoaderService } from '@lamis/web-core';\nimport { CaseManagementService } from '../../services/case-management.service';\nimport { CaseManagerService } from '../../services/case-manager.service';\nimport { Observable } from 'rxjs';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\n\n@Component({\n    selector: 'case-manager-edit',\n    templateUrl: './case-manager.edit.component.html'\n})\nexport class CaseManagerEditComponent implements OnInit {\n    entity: CaseManager;\n    isSaving: boolean;\n\n    constructor(private caseManagementService: CaseManagementService,\n                private caseManagerService: CaseManagerService,\n                protected notification: NotificationService,\n                protected activatedRoute: ActivatedRoute,\n                private appLoaderService: AppLoaderService) {\n    }\n\n    createEntity(): CaseManager {\n        return <CaseManager>{};\n    }\n\n    ngOnInit(): void {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n\n            this.caseManagementService.getActiveFacility().subscribe((res: any) => {\n                this.entity.facility = res;\n            });\n        });\n    }\n\n    save() {\n        this.isSaving = true;\n        this.appLoaderService.open('Saving Case Manager..');\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.caseManagerService.update(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.caseManagerService.create(this.entity));\n        }\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.onSaveError();\n                this.onError(res.message)\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.openSnackMessage('Case Manager successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.appLoaderService.close();\n        //this.submitButton.disabled = true;\n        this.notification.showError('Error occurred saving Case Manager; try again');\n        //this.progressBar.mode = 'determinate';\n    }\n\n    protected onError(errorMessage: string) {\n        this.appLoaderService.close();\n        this.notification.showError(errorMessage);\n    }\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport { CaseManager } from '../../model/case-management.model';\nimport { CaseManagerService } from '../../services/case-manager.service';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CaseManagementService } from '../../services/case-management.service';\nimport { Facility } from '../../model/facility.model';\n\n@Component({\n    selector: 'case-managers',\n    templateUrl: './case-manager.list.component.html'\n})\nexport class CaseManagerListComponent implements OnInit {\n    page = 0;\n    caseManagers: CaseManager[];\n    loading = false;\n    public itemsPerPage: number = 10;\n    public currentSearch: string = '';\n    totalItems = 0;\n    display = 'list';\n    facility: Facility;\n\n    constructor(private caseManagerService: CaseManagerService,\n                private caseManagementService: CaseManagementService,\n                protected notification: NotificationService,\n                protected router: Router,\n                protected activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.caseManagementService.getActiveFacility().subscribe(res => {\n            this.facility = res;\n            this.onPageChange(0);\n        })\n    }\n\n    public select(data: any): any {\n        this.router.navigate(['..', 'case-managers', data.obj.uuid, 'view'], {relativeTo: this.activatedRoute});\n    }\n\n    onPageChange(pageInfo) {\n        this.page = pageInfo;\n        this.loadAll();\n    }\n\n    loadPage(page: number) {\n        this.page = page;\n        this.loadAll();\n    }\n\n    loadAll() {\n        this.loading = true;\n        this.caseManagerService.query({\n            keyword: this.currentSearch,\n            page: this.page,\n            id: this.facility.id || 0,\n            size: this.itemsPerPage,\n            sort: ['id', 'asc']\n        }).subscribe(\n            (res: any) => {\n                this.onSuccess(res.body, res.headers)\n            },\n            (res: any) => this.onError(res)\n        );\n    }\n\n    protected onSuccess(data: any, headers: any) {\n        this.caseManagers = data;\n        this.totalItems = headers.get('X-Total-Count');\n        this.loading = false;\n    }\n\n    private onError(error: any) {\n        this.notification.openSnackMessage(error.message);\n        this.loading = false;\n    }\n}\n",
        "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { HttpResponse } from '@angular/common/http';\nimport { CaseManagerDetailsComponent } from '../components/case-management/case-manager.details.component';\nimport { CaseManager } from '../model/case-management.model';\nimport { CaseManagerService } from './case-manager.service';\nimport { CaseManagerEditComponent } from '../components/case-management/case-manager.edit.component';\nimport { CaseManagerListComponent } from '../components/case-management/case-manager.list.component';\n\n@Injectable()\nexport class CaseManagerResolve implements Resolve<CaseManager> {\n    constructor(private service: CaseManagerService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<CaseManager> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<CaseManager>) => response.ok),\n                map((patient: HttpResponse<CaseManager>) => patient.body)\n            );\n        }\n        return of(<CaseManager>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Case Manager',\n            breadcrumb: 'CASE MANAGERS'\n        },\n        children: [\n            {\n                path: '',\n                component: CaseManagerListComponent,\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Case Managers',\n                    breadcrumb: 'CASE MANAGERS'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/view',\n                component: CaseManagerDetailsComponent,\n                resolve: {\n                    entity: CaseManagerResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Case Manager',\n                    breadcrumb: 'CASE MANAGER'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'new',\n                component: CaseManagerEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Add Case Manager',\n                    breadcrumb: 'ADD CASE MANAGER'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/edit',\n                component: CaseManagerEditComponent,\n                resolve: {\n                    entity: CaseManagerResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Case Manager Edit',\n                    breadcrumb: 'CASE MANAGER EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n",
        "import { NgModule } from '@angular/core';\nimport { CaseManagerDetailsComponent } from './components/case-management/case-manager.details.component';\nimport { CaseManagerEditComponent } from './components/case-management/case-manager.edit.component';\nimport { CaseManagerListComponent } from './components/case-management/case-manager.list.component';\nimport { MaterialModule } from './material.module';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { CaseManagerResolve, ROUTES } from './services/case-manager.route';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CovalentDialogsModule, CovalentSearchModule } from '@covalent/core';\nimport { LamisSharedModule } from '@lamis/web-core';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        CoreModule,\n        NgbModule,\n        CovalentSearchModule,\n        CovalentDialogsModule,\n        LamisSharedModule,\n    ],\n    declarations: [\n        CaseManagerDetailsComponent,\n        CaseManagerEditComponent,\n        CaseManagerListComponent\n    ],\n    providers: [\n        CaseManagerResolve\n    ]\n})\nexport class CaseManagerModule {\n}\n"
    ],
    "names": [
        "map",
        "DATE_FORMAT",
        "HttpClient",
        "Inject",
        "SERVER_API_URL_CONFIG",
        "Injectable",
        "tslib_1.__param",
        "CardViewDateItemModel",
        "CardViewIntItemModel",
        "CardViewFloatItemModel",
        "CardViewTextItemModel",
        "CardViewBoolItemModel",
        "Router",
        "ActivatedRoute",
        "ComponentFactoryResolver",
        "TdDialogService",
        "NotificationService",
        "Component",
        "moment",
        "ColumnMode",
        "entityCompare",
        "AppLoaderService",
        "filter",
        "of",
        "tslib_1.__decorate",
        "Input",
        "MatAutocompleteModule",
        "MatButtonModule",
        "MatCardModule",
        "MatCheckboxModule",
        "MatChipsModule",
        "MatDatepickerModule",
        "MatDialogModule",
        "MatGridListModule",
        "MatIconModule",
        "MatInputModule",
        "MatListModule",
        "MatNativeDateModule",
        "MatOptionModule",
        "MatProgressSpinnerModule",
        "MatRadioModule",
        "MatRippleModule",
        "MatSelectModule",
        "MatSlideToggleModule",
        "MatTableModule",
        "MatTabsModule",
        "MatMenuModule",
        "MatProgressBarModule",
        "MatSidenavModule",
        "MatSnackBarModule",
        "MatToolbarModule",
        "MatTooltipModule",
        "MatDatetimepickerModule",
        "MatNativeDatetimeModule",
        "NgModule",
        "CommonModule",
        "CoreModule",
        "RouterModule",
        "CovalentMessageModule",
        "CovalentDialogsModule",
        "FormsModule",
        "ReactiveFormsModule",
        "MatDateFormatModule",
        "CustomFormsModule",
        "LamisSharedModule",
        "NgxDatatableModule",
        "ROUTES",
        "MatStepperModule",
        "HttpParams",
        "RxStompService",
        "NgbModule",
        "CovalentSearchModule",
        "createRequestOption"
    ],
    "mappings": "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"
}

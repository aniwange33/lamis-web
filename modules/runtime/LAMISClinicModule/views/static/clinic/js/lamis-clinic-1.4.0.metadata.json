{"__symbolic":"module","version":4,"metadata":{"Patient":{"__symbolic":"interface"},"OpportunisticInfection":{"__symbolic":"interface"},"Adhere":{"__symbolic":"interface"},"AdverseDrugReaction":{"__symbolic":"interface"},"ClinicAdhere":{"__symbolic":"interface"},"ClinicAdverseDrugReaction":{"__symbolic":"interface"},"ClinicOpportunisticInfection":{"__symbolic":"interface"},"Clinic":{"__symbolic":"interface"},"ClinicVm":{"__symbolic":"interface"},"ChronicCare":{"__symbolic":"interface"},"DMScreen":{"__symbolic":"interface"},"TBScreen":{"__symbolic":"interface"},"ChronicCareTB":{"__symbolic":"interface"},"ChronicCareDm":{"__symbolic":"interface"},"ChronicCareVm":{"__symbolic":"interface"},"EAC":{"__symbolic":"interface"},"Observation":{"__symbolic":"interface"},"CervicalCancerScreening":{"__symbolic":"interface"},"ClinicService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":22,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":26,"character":45},"arguments":[{"__symbolic":"reference","module":"@lamis/web-core","name":"SERVER_API_URL_CONFIG","line":26,"character":52}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":26,"character":32},{"__symbolic":"reference","module":"@lamis/web-core","name":"ServerApiUrlConfig","line":26,"character":94}]}],"create":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"find":[{"__symbolic":"method"}],"findByUuid":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"getVisitDatesByPatient":[{"__symbolic":"method"}],"getPatient":[{"__symbolic":"method"}],"getRegimenLines":[{"__symbolic":"method"}],"getRegimenByLine":[{"__symbolic":"method"}],"adverseDrugReactions":[{"__symbolic":"method"}],"opportunisticInfections":[{"__symbolic":"method"}],"adheres":[{"__symbolic":"method"}],"regimes":[{"__symbolic":"method"}],"latestVisit":[{"__symbolic":"method"}],"enrolledOnOTZ":[{"__symbolic":"method"}],"convertDateFromClient":[{"__symbolic":"method"}],"convertDateFromServer":[{"__symbolic":"method"}],"convertDateArrayFromServer":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ClinicModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":23,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":29,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":30,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":31,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule","line":32,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":33,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":34,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":35,"character":8},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"ɵd"}]},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressBarModule","line":36,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentMessageModule","line":37,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentDialogsModule","line":38,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatListModule","line":39,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":40,"character":8},{"__symbolic":"reference","name":"ClinicWidgetModule"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":42,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":43,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"MatDateFormatModule","line":44,"character":8},{"__symbolic":"reference","module":"ng2-validation","name":"CustomFormsModule","line":45,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"LamisSharedModule","line":46,"character":8},{"__symbolic":"reference","module":"@swimlane/ngx-datatable","name":"NgxDatatableModule","line":47,"character":8}],"exports":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"}],"entryComponents":[],"providers":[{"__symbolic":"reference","name":"ɵc"}]}]}],"members":{}},"ClinicWidgetModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":6,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":8,"character":8},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":10,"character":8}],"declarations":[{"__symbolic":"reference","name":"ɵg"}],"entryComponents":[{"__symbolic":"reference","name":"ɵg"}],"exports":[{"__symbolic":"reference","name":"ɵg"}],"providers":[]}]}],"members":{}},"ChronicCareService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":12,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":16,"character":45},"arguments":[{"__symbolic":"reference","module":"@lamis/web-core","name":"SERVER_API_URL_CONFIG","line":16,"character":52}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":16,"character":32},{"__symbolic":"reference","module":"@lamis/web-core","name":"ServerApiUrlConfig","line":16,"character":94}]}],"create":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"find":[{"__symbolic":"method"}],"findByUuid":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"getDmScreens":[{"__symbolic":"method"}],"getTbScreens":[{"__symbolic":"method"}],"getDmScreenByChronicCare":[{"__symbolic":"method"}],"getTbScreenByChronicCare":[{"__symbolic":"method"}],"getVisitDatesByPatient":[{"__symbolic":"method"}],"convertDateFromServer":[{"__symbolic":"method"}],"convertDateFromClient":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ChronicCareModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":15,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵi"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":21,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentDialogsModule","line":22,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":23,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":24,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"LamisSharedModule","line":25,"character":8},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":27,"character":8},{"__symbolic":"reference","module":"ng2-validation","name":"CustomFormsModule","line":28,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"MatDateFormatModule","line":29,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":30,"character":8},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"ɵk"}]},{"__symbolic":"reference","module":"@angular/material","name":"MatStepperModule","line":31,"character":8}],"providers":[{"__symbolic":"reference","name":"ɵj"}]}]}],"members":{}},"EacModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":13,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":15,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentDialogsModule","line":16,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":17,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":18,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"LamisSharedModule","line":19,"character":8},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":21,"character":8},{"__symbolic":"reference","module":"ng2-validation","name":"CustomFormsModule","line":22,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"MatDateFormatModule","line":23,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":24,"character":8},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"ɵm"}]}],"declarations":[{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵp"}],"providers":[{"__symbolic":"reference","name":"ɵl"}]}]}],"members":{}},"CaseManagementModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":12,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":15,"character":8},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":16,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":17,"character":8},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"ɵq"}]},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":18,"character":8},{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbModule","line":19,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentSearchModule","line":20,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentDialogsModule","line":21,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"LamisSharedModule","line":22,"character":8}],"declarations":[{"__symbolic":"reference","name":"ɵr"}],"providers":[]}]}],"members":{}},"CaseManagerModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":14,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":16,"character":8},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":18,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":19,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":20,"character":8},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"ɵu"}]},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":21,"character":8},{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbModule","line":22,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentSearchModule","line":23,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentDialogsModule","line":24,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"LamisSharedModule","line":25,"character":8}],"declarations":[{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","name":"ɵv"}],"providers":[{"__symbolic":"reference","name":"ɵt"}]}]}],"members":{}},"CervicalCancerModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":13,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":16,"character":8},{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":17,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"MatDateFormatModule","line":18,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":19,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":20,"character":8},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"ɵba"}]},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentMessageModule","line":21,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentDialogsModule","line":22,"character":8},{"__symbolic":"reference","module":"ng2-validation","name":"CustomFormsModule","line":23,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"LamisSharedModule","line":24,"character":8}],"declarations":[{"__symbolic":"reference","name":"ɵbd"},{"__symbolic":"reference","name":"ɵbb"}],"providers":[]}]}],"members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":19,"character":1},"arguments":[{"selector":"lamis-clinic","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <mat-card>\n            <mat-card-header>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-card-view [properties]=\"properties\" editable=\"false\"></adf-card-view>\n            </mat-card-content>\n            <mat-card-actions class=\"lamis-edit-form-actions\">\n                <button mat-button (click)=\"previousState()\">Back</button>\n                <button mat-raised-button color=\"warn\" (click)=\"delete()\">Delete</button>\n                <button mat-raised-button color=\"primary\" (click)=\"edit()\">Edit</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":27,"character":32},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":27,"character":55},{"__symbolic":"reference","name":"ClinicService"},{"__symbolic":"reference","module":"@angular/core","name":"ComponentFactoryResolver","line":28,"character":29},{"__symbolic":"reference","module":"@covalent/core","name":"TdDialogService","line":28,"character":79},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":29,"character":45}]}],"ngOnInit":[{"__symbolic":"method"}],"edit":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"buildProperties":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"lamis-clinic-edit","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #clinicForm=\"ngForm\">\n            <mat-card class=\"default\">\n                <mat-card-content *ngIf=\"!!entity.patient\">\n                    <ng-container *ngIf=\"commence === true\">\n                        <div>\n                            <mat-form-field class=\"full-width\">\n                                <input matInput [matDatepicker]=\"picker\"\n                                       placeholder=\"ART Start Date\"\n                                       [(ngModel)]=\"entity.dateVisit\"\n                                       #visit=\"ngModel\"\n                                       (dateChange)=\"dateChanged($event.value)\"\n                                       [matDatepickerFilter]=\"filterDates.bind(this)\"\n                                       [max]=\"today\"\n                                       [min]=\"dateRegistration\"\n                                       name=\"visit\"\n                                       required>\n                                <mat-datepicker-toggle\n                                        matSuffix\n                                        [for]=\"picker\">\n                                </mat-datepicker-toggle>\n                                <mat-datepicker #picker></mat-datepicker>\n                                <mat-error\n                                        *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.required)\">\n                                    {{prep ? 'Date of PrEP Initiation ' : 'ART Start Date '}}is required\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.min)\">\n                                    Date of visit cannot be before {{dateRegistration | date: 'dd MMM, yyyy'}}\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.max)\">\n                                    {{prep ? 'Date of PrEP Initiation ' : 'ART Start Date '}}cannot be in the future\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"row\" *ngIf=\"!prep\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <input matInput placeholder=\"CD4 at start of ART\" [min]=\"0\" type=\"number\"\n                                           #cd4=\"ngModel\" name=\"cd4\" [(ngModel)]=\"entity.cd4\"/>\n                                    <mat-error\n                                            *ngIf=\"cd4.errors && (cd4.dirty || cd4.touched) && (cd4.errors.min)\">\n                                        Minimum CD4 is 0\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <input matInput placeholder=\"CD4 %\" [min]=\"0\" [max]=\"100\" type=\"number\"\n                                           #cd4p=\"ngModel\" name=\"cd4p\" [(ngModel)]=\"entity.cd4p\"/>\n                                    <mat-error\n                                            *ngIf=\"cd4p.errors && (cd4p.dirty || cd4p.touched) && (cd4p.errors.min)\">\n                                        Minimum CD4 % is 0\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"cd4p.errors && (cd4p.dirty || cd4p.touched) && (cd4p.errors.max)\">\n                                        Maximum CD4 % is 100\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-select [(ngModel)]=\"entity.regimenType\"\n                                                placeholder=\"Original Regimen Line\"\n                                                #rtype=\"ngModel\" required name=\"rt\"\n                                                [compareWith]=\"entityCompare\"\n                                                (selectionChange)=\"regimenLineChange($event.value)\">\n                                        <mat-option>None</mat-option>\n                                        <mat-option *ngFor=\"let line of regimenLines\"\n                                                    [value]=\"line\">{{line.description}}</mat-option>\n                                        <mat-error\n                                                *ngIf=\"rtype.errors && (rtype.dirty || rtype.touched) && (rtype.errors.required)\">\n                                            Regimen Line is required\n                                        </mat-error>\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-select [(ngModel)]=\"entity.regimen\"\n                                                placeholder=\"Original Regimen\"\n                                                [compareWith]=\"entityCompare\"\n                                                #rm=\"ngModel\" required name=\"rm\">\n                                        <mat-option>None</mat-option>\n                                        <mat-option *ngFor=\"let regimen of regimens\"\n                                                    [value]=\"regimen\">{{regimen.description}}</mat-option>\n                                        <mat-error\n                                                *ngIf=\"rm.errors && (rm.dirty || rm.touched) && (rm.errors.required)\">\n                                            Regimen is required\n                                        </mat-error>\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <div *ngIf=\"commence === false || commence === undefined\">\n                        <mat-form-field class=\"full-width\">\n                            <input matInput [matDatepicker]=\"picker\"\n                                   placeholder=\"Date of Visit\"\n                                   [(ngModel)]=\"entity.dateVisit\"\n                                   [matDatepickerFilter]=\"filterDates.bind(this)\"\n                                   #visit=\"ngModel\"\n                                   (dateChange)=\"dateChanged($event.value)\"\n                                   [max]=\"today\"\n                                   [min]=\"dateRegistration\"\n                                   name=\"visit\"\n                                   required>\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.required)\">\n                                Date of visit is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.min)\">\n                                Date of visit cannot be before {{dateRegistration | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.max)\">\n                                Date of visit cannot be in the future\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <ng-container *ngIf=\"otzApplicable && !hasOtz\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-checkbox [(ngModel)]=\"fullDisclosure\" name=\"fd\">\n                                    Full Disclosure?\n                                </mat-checkbox>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\" *ngIf=\"fullDisclosure\">\n                                    <input matInput [matDatepicker]=\"picker8\"\n                                           placeholder=\"Date of Full Disclosure\"\n                                           [(ngModel)]=\"dateOfFullDisclosure\"\n                                           #dfd=\"ngModel\"\n                                           [max]=\"today\"\n                                           [min]=\"entity.patient.dateBirth\"\n                                           name=\"dfd\"\n                                           required>\n                                    <mat-datepicker-toggle\n                                            matSuffix\n                                            [for]=\"picker8\">\n                                    </mat-datepicker-toggle>\n                                    <mat-datepicker #picker8></mat-datepicker>\n                                    <mat-error\n                                            *ngIf=\"dfd.errors && (dfd.dirty || dfd.touched) && (dfd.errors.required)\">\n                                        Date of Full Disclosure is required\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"dfd.errors && (dfd.dirty || dfd.touched) && (dfd.errors.min)\">\n                                        Date of Full Disclosure cannot be before date of\n                                        birth {{entity.patient.dateBirth | date: 'dd MMM, yyyy'}}\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"dfd.errors && (dfd.dirty || dfd.touched) && (dfd.errors.max)\">\n                                        Date of Full Disclosure cannot be in the future\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <ng-container *ngIf=\"fullDisclosure && !hasOtz\">\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"enrolledOnOTZ\" name=\"otz\">\n                                        Enrolled on OTZ?\n                                    </mat-checkbox>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\" *ngIf=\"enrolledOnOTZ\">\n                                        <input matInput [matDatepicker]=\"picker7\"\n                                               placeholder=\"Date Enrolled on OTZ\"\n                                               [(ngModel)]=\"dateEnrolledOnOTZ\"\n                                               #otze=\"ngModel\"\n                                               [max]=\"today\"\n                                               [min]=\"entity.patient.dateBirth\"\n                                               name=\"otze\"\n                                               [required]=\"enrolledOnOTZ\">\n                                        <mat-datepicker-toggle\n                                                matSuffix\n                                                [for]=\"picker7\">\n                                        </mat-datepicker-toggle>\n                                        <mat-datepicker #picker7></mat-datepicker>\n                                        <mat-error\n                                                *ngIf=\"otze.errors && (otze.dirty || otze.touched) && (otze.errors.required)\">\n                                            Date enrolled on OTZ is required\n                                        </mat-error>\n                                        <mat-error\n                                                *ngIf=\"otze.errors && (otze.dirty || otze.touched) && (otze.errors.min)\">\n                                            Date enrolled on OTZ cannot be before date of\n                                            birth {{entity.patient.dateBirth | date: 'dd MMM, yyyy'}}\n                                        </mat-error>\n                                        <mat-error\n                                                *ngIf=\"otze.errors && (otze.dirty || otze.touched) && (otze.errors.max)\">\n                                            Date enrolled on OTZ cannot be in the future\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <ng-container *ngIf=\"enrolledOnOTZ\">\n                                <fieldset>\n                                    <legend>OTZ</legend>\n                                    <div class=\"row\">\n                                        <div class=\"col-md-6\">\n                                            <mat-form-field class=\"full-width\">\n                                                <mat-label>Caregiver Phone</mat-label>\n                                                <input matInput name=\"phone\" [(ngModel)]=\"caregiverPhone\"\n                                                       #phone=\"ngModel\"\n                                                       phoneNumber/>\n                                                <mat-error\n                                                        *ngIf=\"phone.errors && (phone.dirty || phone.touched) && (phone.errors.required)\">\n                                                    Caregiver phone number is required\n                                                </mat-error>\n                                                <mat-error\n                                                        *ngIf=\"phone.errors && (phone.dirty || phone.touched || !!entity.id) && (phone.errors.phoneNumber)\">\n                                                    Invalid phone number\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                            <mat-form-field class=\"full-width\">\n                                                <mat-label>Caregiver Address</mat-label>\n                                                <textarea matInput name=\"address\" [(ngModel)]=\"caregiverAddress\"\n                                                          #address=\"ngModel\"\n                                                          rows=\"2\">\n                                            </textarea>\n                                                <mat-error\n                                                        *ngIf=\"address.errors && (address.dirty || address.touched) && (address.errors.required)\">\n                                                    Case Manager address is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                </fieldset>\n                            </ng-container>\n                        </ng-container>\n                    </ng-container>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <mat-select [(ngModel)]=\"entity.clinicStage\"\n                                        placeholder=\"Clinical Stage\"\n                                        #clinicStage=\"ngModel\" name=\"cs\">\n                                <mat-option>None</mat-option>\n                                <mat-option [value]=\"'Stage I'\">Stage I</mat-option>\n                                <mat-option [value]=\"'Stage II'\">Stage II</mat-option>\n                                <mat-option [value]=\"'Stage III'\">Stage III</mat-option>\n                                <mat-option [value]=\"'Stage IV'\">Stage IV</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <mat-select [(ngModel)]=\"entity.funcStatus\"\n                                        placeholder=\"Functional Status\"\n                                        #funcStatus=\"ngModel\" name=\"fs\">\n                                <mat-option>None</mat-option>\n                                <mat-option [value]=\"'Working'\">Working</mat-option>\n                                <mat-option [value]=\"'Ambulatory'\">Ambulatory</mat-option>\n                                <mat-option [value]=\"'Bedridden'\">Bedridden</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <ng-container *ngIf=\"prep\">\n                        <fieldset>\n                            <legend>PrEP</legend>\n                            <div *ngIf=\"commence\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-select [(ngModel)]=\"hivTestResult\"\n                                                placeholder=\"HIV Status at PrEP Initiation\"\n                                                required\n                                                #hivStatus=\"ngModel\" name=\"htr\">\n                                        <mat-option>None</mat-option>\n                                        <mat-option [value]=\"'NEGATIVE'\">Negative</mat-option>\n                                        <mat-option [value]=\"'POSITIVE'\">Positive</mat-option>\n                                    </mat-select>\n                                    <mat-error\n                                            *ngIf=\"hivStatus.errors && (hivStatus.dirty || hivStatus.touched) && (hivStatus.errors.required)\">\n                                        HIV Status is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div *ngIf=\"!commence\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-select [(ngModel)]=\"hivTestResult\"\n                                                placeholder=\"HIV Status /Test Result\"\n                                                required\n                                                #hivStatus=\"ngModel\" name=\"htr\">\n                                        <mat-option>None</mat-option>\n                                        <mat-option [value]=\"'NEGATIVE'\">Negative</mat-option>\n                                        <mat-option [value]=\"'POSITIVE'\">Positive</mat-option>\n                                        <mat-option [value]=\"'NOT_DONE'\">Not Done</mat-option>\n                                    </mat-select>\n                                    <mat-error\n                                            *ngIf=\"hivStatus.errors && (hivStatus.dirty || hivStatus.touched) && (hivStatus.errors.required)\">\n                                        HIV Status is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <ng-container *ngIf=\"commence\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <mat-form-field class=\"full-width\">\n                                            <input matInput [(ngModel)]=\"creatinineClearance\"\n                                                   placeholder=\"Creatinine Clearance (mL/min)\"\n                                                   #creatinine=\"ngModel\" name=\"creatinine\"/>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <mat-form-field class=\"full-width\">\n                                            <mat-select [(ngModel)]=\"urinalysis\"\n                                                        placeholder=\"Urinalysis\"\n                                                        #urinal=\"ngModel\" name=\"urinalysis\">\n                                                <mat-option>None</mat-option>\n                                                <mat-option [value]=\"'Normal'\">Normal</mat-option>\n                                                <mat-option [value]=\"'Deranged'\">Deranged</mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-md-6\">\n                                        <mat-form-field class=\"full-width\">\n                                            <mat-select [(ngModel)]=\"hepatitisB\"\n                                                        placeholder=\"Hepatitis B Screening\"\n                                                        #hepatitisb=\"ngModel\" name=\"hepatitisB\">\n                                                <mat-option>None</mat-option>\n                                                <mat-option [value]=\"'Positive'\">Positive</mat-option>\n                                                <mat-option [value]=\"'Negative'\">Negative</mat-option>\n                                                <mat-option [value]=\"'Not Done'\">Not Done</mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </div>\n                                    <div class=\"col-md-6\">\n                                        <mat-form-field class=\"full-width\">\n                                            <mat-select [(ngModel)]=\"hepatitisC\"\n                                                        placeholder=\"Hepatitis C Screening\"\n                                                        #hepatitisb=\"ngModel\" name=\"hepatitisC\">\n                                                <mat-option>None</mat-option>\n                                                <mat-option [value]=\"'Positive'\">Positive</mat-option>\n                                                <mat-option [value]=\"'Negative'\">Negative</mat-option>\n                                                <mat-option [value]=\"'Not Done'\">Not Done</mat-option>\n                                            </mat-select>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                            </ng-container>\n                        </fieldset>\n                    </ng-container>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <mat-select [(ngModel)]=\"entity.tbStatus\"\n                                        placeholder=\"TB Status\"\n                                        name=\"tb\"\n                                        #tbStatus=\"ngModel\">\n                                <mat-option>None</mat-option>\n                                <mat-option [value]=\"'No sign or symptoms of TB'\">No sign or symptoms of TB</mat-option>\n                                <mat-option [value]=\"'TB suspected and referred for evaluation'\">TB suspected and\n                                    referred\n                                    for evaluation\n                                </mat-option>\n                                <mat-option [value]=\"'Currently on INH prophylaxis'\">Currently on INH prophylaxis\n                                </mat-option>\n                                <mat-option [value]=\"'Currently on TB treatment'\">Currently on TB treatment</mat-option>\n                                <mat-option [value]=\"'TB positive not on TB drugs'\">TB positive not on TB drugs\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <input matInput placeholder=\"Body weight(Kg)\" [min]=\"0\" [max]=\"250\" type=\"number\"\n                                   #weight=\"ngModel\" name=\"weight\" [(ngModel)]=\"entity.bodyWeight\"/>\n                            <mat-error\n                                    *ngIf=\"weight.errors && (weight.dirty || weight.touched) && (weight.errors.min)\">\n                                Minimum body weight is 0\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"weight.errors && (weight.dirty || weight.touched) && (weight.errors.max)\">\n                                Maximum body weight is 250\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <input matInput placeholder=\"Height (m)\" [min]=\"0\" [max]=\"1.8\" type=\"number\"\n                                   #height=\"ngModel\" name=\"height\" [(ngModel)]=\"entity.height\"/>\n                            <mat-error\n                                    *ngIf=\"height.errors && (height.dirty || height.touched) && (height.errors.min)\">\n                                Minimum height is 0\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"height.errors && (height.dirty || height.touched) && (height.errors.max)\">\n                                Maximum height is 1.8m\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <fieldset>\n                        <h6>Blood Pressure(mmHg)</h6>\n                        <div class=\"row\">\n                            <div class=\"col-md-3\">\n                                <mat-form-field class=\"full-width\">\n                                    <input matInput placeholder=\"Systolic\"\n                                           name=\"bp1\" type=\"number\"\n                                           [max]=\"190\"\n                                           [min]=\"70\"\n                                           [required]=\"!!entity.bp2\"\n                                           #bp1=\"ngModel\" [(ngModel)]=\"entity.bp1\"/>\n                                    <mat-error\n                                            *ngIf=\"bp1.errors && (bp1.dirty || bp1.touched) && (bp1.errors.max)\">\n                                        Maximum Systolic is 190\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"bp1.errors && (bp1.dirty || bp1.touched) && (bp1.errors.min)\">\n                                        Minimum Systolic is 70\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"bp1.errors && (bp1.dirty || bp1.touched) && (bp1.errors.required)\">\n                                        Systolic is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-3\">\n                                <mat-form-field class=\"full-width\">\n                                    <input matInput placeholder=\"Diastolic\"\n                                           name=\"bp2\" type=\"number\"\n                                           [max]=\"100\"\n                                           [min]=\"40\"\n                                           [required]=\"!!entity.bp1\"\n                                           #bp2=\"ngModel\" [(ngModel)]=\"entity.bp2\"/>\n                                    <mat-error\n                                            *ngIf=\"bp2.errors && (bp2.dirty || bp2.touched) && (bp2.errors.max)\">\n                                        Maximum Diastolic is 100\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"bp2.errors && (bp2.dirty || bp2.touched) && (bp2.errors.min)\">\n                                        Minimum Diastolic is 40\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"bp2.errors && (bp2.dirty || bp2.touched) && (bp2.errors.required)\">\n                                        Diastolic is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </fieldset>\n                    <div *ngIf=\"entity.patient && entity.patient.gender === 'FEMALE'\">\n                        <mat-form-field class=\"full-width\">\n                            <mat-select [(ngModel)]=\"entity.pregnancyStatus\"\n                                        placeholder=\"Pregnancy Status\"\n                                        #pregStatus=\"ngModel\" name=\"ps\">\n                                <mat-option>None</mat-option>\n                                <mat-option [value]=\"1\">Not Pregnant</mat-option>\n                                <mat-option [value]=\"2\">Pregnant</mat-option>\n                                <mat-option [value]=\"3\">Breastfeeding</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div *ngIf=\"entity.patient && entity.patient.gender === 'FEMALE' && lmpMin\">\n                        <mat-form-field class=\"full-width\">\n                            <input matInput [matDatepicker]=\"picker1\"\n                                   placeholder=\"LMP\"\n                                   [(ngModel)]=\"entity.lmp\"\n                                   #lmp=\"ngModel\"\n                                   [max]=\"entity.dateVisit\"\n                                   [min]=\"lmpMin\"\n                                   name=\"lmp\">\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker1\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker1></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"lmp.errors && (lmp.dirty || lmp.touched) && (lmp.errors.max)\">\n                                LMP cannot be after {{entity.dateVisit | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"lmp.errors && (lmp.dirty || lmp.touched) && (lmp.errors.min)\">\n                                LMP cannot be before {{lmpMin | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <mat-select [(ngModel)]=\"oiList\"\n                                        placeholder=\"Opportunistic Infections\"\n                                        [compareWith]=\"entityCompare\"\n                                        name=\"ois\"\n                                        #oiIds=\"ngModel\" multiple>\n                                <mat-option>None</mat-option>\n                                <mat-option *ngFor=\"let oi of opportunisticInfections\"\n                                            [value]=\"oi\">{{oi.description}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-4\">\n                            <mat-checkbox [(ngModel)]=\"adr\"\n                                          name=\"ad\">Adverse Drug Reaction Screened?\n                            </mat-checkbox>\n                        </div>\n                        <div style=\"height: 300px; overflow-y: auto;\" *ngIf=\"adr\" class=\"col-md-8\">\n                            <adf-datatable [rows]=\"selectedClinicAdr\"\n                                           [stickyHeader]=\"true\">\n                                <data-columns>\n                                    <data-column key=\"adverseDrugReaction.description\" title=\"Description\"\n                                                 sortable=\"true\"></data-column>\n                                    <data-column key=\"severity\" title=\"Severity\" sortable=\"false\">\n                                        <ng-template let-context=\"$implicit\">\n                                            <mat-form-field class=\"full-width\">\n                                                <mat-select autofocus\n                                                            [value]=\"context.row.getValue('severity')\"\n                                                            name=\"severity\"\n                                                            (valueChange)=\"updateValue($event, 'severity', context.row.getValue('adverseDrugReaction'))\">\n                                                    <mat-option>None</mat-option>\n                                                    <mat-option [value]=\"'Grade 1'\">Grade 1</mat-option>\n                                                    <mat-option [value]=\"'Grade 2'\">Grade 2</mat-option>\n                                                    <mat-option [value]=\"'Grade 3'\">Grade 3</mat-option>\n                                                    <mat-option [value]=\"'Grade 4'\">Grade 4</mat-option>\n                                                </mat-select>\n                                            </mat-form-field>\n                                        </ng-template>\n                                    </data-column>\n                                </data-columns>\n                            </adf-datatable>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-select [(ngModel)]=\"entity.adherenceLevel\"\n                                            placeholder=\"Level of Adherence\"\n                                            #adherence=\"ngModel\" name=\"al\">\n                                    <mat-option>None</mat-option>\n                                    <mat-option [value]=\"'Good'\">Good</mat-option>\n                                    <mat-option [value]=\"'Fair'\">Fair</mat-option>\n                                    <mat-option [value]=\"'Poor'\">Poor</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\"\n                                            *ngIf=\"entity.adherenceLevel === 'Fair' || entity.adherenceLevel === 'Poor'\">\n                                <mat-select [(ngModel)]=\"adhereList\"\n                                            placeholder=\"Adherence\"\n                                            name=\"ads\"\n                                            [compareWith]=\"entityCompare\"\n                                            #adrIds=\"ngModel\" multiple>\n                                    <mat-option>None</mat-option>\n                                    <mat-option *ngFor=\"let adhere of adheres\"\n                                                [value]=\"adhere\">{{adhere.description}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"otzApplicable || enrolledOnOTZ\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-checkbox [(ngModel)]=\"attendedLastOTZMeeting\" name=\"aotz\">\n                                    Attended last support group (OTZ club) meeting?\n                                </mat-checkbox>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\" *ngIf=\"attendedLastOTZMeeting\">\n                                    <input matInput [matDatepicker]=\"picker8\"\n                                           placeholder=\"Date of Last OTZ Club Meeting\"\n                                           [(ngModel)]=\"dateLastOTZMeeting\"\n                                           #lotzm=\"ngModel\"\n                                           [max]=\"today\"\n                                           [min]=\"dateEnrolledOnOTZ\"\n                                           name=\"lotzm\"\n                                           [required]=\"attendedLastOTZMeeting\">\n                                    <mat-datepicker-toggle\n                                            matSuffix\n                                            [for]=\"picker8\">\n                                    </mat-datepicker-toggle>\n                                    <mat-datepicker #picker8></mat-datepicker>\n                                    <mat-error\n                                            *ngIf=\"lotzm.errors && (lotzm.dirty || lotzm.touched) && (lotzm.errors.required)\">\n                                        Date of Last OTZ meeting is required\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"lotzm.errors && (lotzm.dirty || lotzm.touched) && (lotzm.errors.min)\">\n                                        Date of last OTZ meeting cannot be\n                                        before {{dateEnrolledOnOTZ | date: 'dd MMM, yyyy'}}\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"lotzm.errors && (lotzm.dirty || lotzm.touched) && (lotzm.errors.max)\">\n                                        Date of last OTZ meeting cannot be in the future\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-select name=\"modules\" [(ngModel)]=\"modulesCompleted\" #modules=\"ngModel\"\n                                                [required]=\"attendedLastOTZMeeting\">\n                                        <mat-option></mat-option>\n                                        <mat-option [value]=\"1\">1</mat-option>\n                                        <mat-option [value]=\"2\">2</mat-option>\n                                        <mat-option [value]=\"3\">3</mat-option>\n                                        <mat-option [value]=\"4\">4</mat-option>\n                                        <mat-option [value]=\"5\">5</mat-option>\n                                        <mat-option [value]=\"6\">6</mat-option>\n                                        <mat-option [value]=\"7\">7</mat-option>\n                                    </mat-select>\n                                    <mat-error\n                                            *ngIf=\"modules.errors && (modules.dirty || modules.touched) && (modules.errors.required)\">\n                                        Number of modules attended required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <div *ngIf=\"!!appointmentMin\">\n                        <mat-form-field class=\"full-width\">\n                            <input matInput [matDatepicker]=\"picker2\"\n                                   placeholder=\"Date of Next Appointment\"\n                                   [(ngModel)]=\"entity.nextAppointment\"\n                                   #na=\"ngModel\"\n                                   [min]=\"appointmentMin\"\n                                   [max]=\"appointmentMax\"\n                                   name=\"na\"\n                                   required>\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker2\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker2></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"na.errors && (na.dirty || na.touched) && (na.errors.required)\">\n                                Date of next appointment is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"na.errors && (na.dirty || na.touched) && (na.errors.max)\">\n                                Date of next appointment cannot be after {{appointmentMax | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"na.errors && (na.dirty || na.touched) && (na.errors.min)\">\n                                Date of next appointment cannot be before {{appointmentMin | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <textarea matInput placeholder=\"Clinical Notes\"\n                                      cols=\"30\"\n                                      rows=\"3\"\n                                      name=\"notes\"\n                                      #note=\"ngModel\" [(ngModel)]=\"entity.notes\"></textarea>\n                        </mat-form-field>\n                    </div>\n                    <mat-card-actions class=\"lamis-edit-form-actions\">\n                        <button mat-raised-button type=\"button\" (click)=\"previousState()\">Back</button>\n                        <button mat-raised-button color='primary'\n                                [disabled]=\"clinicForm.invalid || isSaving\"\n                                type=\"submit\">\n                            {{entity.id !== undefined ? 'Update' : 'Save'}}\n                        </button>\n                    </mat-card-actions>\n                </mat-card-content>\n            </mat-card>\n        </form>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ClinicService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":68,"character":40},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":69,"character":42},{"__symbolic":"reference","module":"@lamis/web-core","name":"AppLoaderService","line":70,"character":42}]}],"createEntity":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"updateValue":[{"__symbolic":"method"}],"filterDates":[{"__symbolic":"method"}],"dateChanged":[{"__symbolic":"method"}],"entityCompare":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"regimenLineChange":[{"__symbolic":"method"}],"subscribeToSaveResponse":[{"__symbolic":"method"}],"onSaveSuccess":[{"__symbolic":"method"}],"onSaveError":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":10,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ClinicService"}]}],"resolve":[{"__symbolic":"method"}]}},"ɵd":[{"path":"","data":{"title":"Clinic Visit","breadcrumb":"CLINIC VISIT"},"children":[{"path":":id/patient/:patientId/view","component":{"__symbolic":"reference","name":"ɵa"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵc"}},"data":{"authorities":["ROLE_USER"],"title":"Clinic Visit","breadcrumb":"CLINIC VISIT"}},{"path":"patient/:patientId/new","component":{"__symbolic":"reference","name":"ɵb"},"data":{"authorities":["ROLE_DEC"],"title":"Clinic Visit","breadcrumb":"ADD CLINIC VISIT"}},{"path":"art-commencement/patient/:patientId/new","component":{"__symbolic":"reference","name":"ɵb"},"data":{"authorities":["ROLE_DEC"],"title":"ART Commencement /PrEP Initiation","breadcrumb":"ADD ART COMMENCEMENT /PREP INITIATION","commence":true}},{"path":":id/patient/:patientId/edit","component":{"__symbolic":"reference","name":"ɵb"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵc"}},"data":{"authorities":["ROLE_DEC"],"title":"Clinic Visit Edit","breadcrumb":"CLINIC VISIT EDIT"}}]}],"ɵe":{"__symbolic":"function","parameters":[],"value":[{"__symbolic":"reference","module":"@angular/material","name":"MatAutocompleteModule","line":51,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":51,"character":31},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule","line":51,"character":48},{"__symbolic":"reference","module":"@angular/material","name":"MatCheckboxModule","line":51,"character":63},{"__symbolic":"reference","module":"@angular/material","name":"MatChipsModule","line":52,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatDatepickerModule","line":52,"character":24},{"__symbolic":"reference","module":"@angular/material","name":"MatDialogModule","line":52,"character":45},{"__symbolic":"reference","module":"@angular/material","name":"MatGridListModule","line":52,"character":62},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":52,"character":81},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":53,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatListModule","line":53,"character":24},{"__symbolic":"reference","module":"@angular/material","name":"MatNativeDateModule","line":53,"character":39},{"__symbolic":"reference","module":"@angular/material","name":"MatOptionModule","line":53,"character":60},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressSpinnerModule","line":53,"character":77},{"__symbolic":"reference","module":"@angular/material","name":"MatRadioModule","line":53,"character":103},{"__symbolic":"reference","module":"@angular/material","name":"MatRippleModule","line":54,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":54,"character":25},{"__symbolic":"reference","module":"@angular/material","name":"MatSlideToggleModule","line":54,"character":42},{"__symbolic":"reference","module":"@angular/material","name":"MatTableModule","line":54,"character":64},{"__symbolic":"reference","module":"@angular/material","name":"MatTabsModule","line":54,"character":80},{"__symbolic":"reference","module":"@angular/material","name":"MatMenuModule","line":55,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressBarModule","line":55,"character":23},{"__symbolic":"reference","module":"@angular/material","name":"MatSidenavModule","line":55,"character":45},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBarModule","line":55,"character":63},{"__symbolic":"reference","module":"@angular/material","name":"MatToolbarModule","line":55,"character":82},{"__symbolic":"reference","module":"@angular/material","name":"MatTooltipModule","line":56,"character":8},{"__symbolic":"reference","module":"@mat-datetimepicker/core","name":"MatDatetimepickerModule","line":56,"character":26},{"__symbolic":"reference","module":"@mat-datetimepicker/core","name":"MatNativeDatetimeModule","line":56,"character":51}]},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":60,"character":1},"arguments":[{"imports":{"__symbolic":"call","expression":{"__symbolic":"reference","name":"ɵe"}},"exports":{"__symbolic":"call","expression":{"__symbolic":"reference","name":"ɵe"}}}]}],"members":{}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"clinic-widget","template":"<adf-card-view [properties]=\"properties\"></adf-card-view>\n"}]}],"members":{"patientId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ClinicService"}]}],"ngOnInit":[{"__symbolic":"method"}],"buildProperties":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"chronic-care-detail","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <mat-card>\n            <mat-card-header>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-card-view [properties]=\"properties\" editable=\"false\"></adf-card-view>\n            </mat-card-content>\n            <mat-card-actions class=\"lamis-edit-form-actions\">\n                <button mat-button (click)=\"previousState()\">Back</button>\n                <button mat-raised-button color=\"warn\" (click)=\"delete()\">Delete</button>\n                <button mat-raised-button color=\"primary\" (click)=\"edit()\">Edit</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":16,"character":32},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":16,"character":55},{"__symbolic":"reference","name":"ChronicCareService"},{"__symbolic":"reference","module":"@covalent/core","name":"TdDialogService","line":17,"character":40},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":17,"character":86},{"__symbolic":"reference","name":"ClinicService"}]}],"ngOnInit":[{"__symbolic":"method"}],"edit":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"buildProperties":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}]}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":14,"character":1},"arguments":[{"selector":"chronic-care-edit","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #careForm=\"ngForm\">\n            <mat-card class=\"default\">\n                <mat-card-content>\n                    <mat-vertical-stepper #stepper *ngIf=\"entity.patient\">\n                        <mat-step>\n                            <ng-template matStepLabel>Details</ng-template>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <input matInput [matDatepicker]=\"picker\"\n                                               placeholder=\"Date of Visit\"\n                                               [(ngModel)]=\"entity.dateVisit\"\n                                               #visit=\"ngModel\"\n                                               [matDatepickerFilter]=\"filterDates.bind(this)\"\n                                               [max]=\"today\"\n                                               [min]=\"entity.patient.dateRegistration\"\n                                               name=\"visit\"\n                                               required>\n                                        <mat-datepicker-toggle\n                                                matSuffix\n                                                [for]=\"picker\">\n                                        </mat-datepicker-toggle>\n                                        <mat-datepicker #picker></mat-datepicker>\n                                        <mat-error\n                                                *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.required)\">\n                                            Date of Visit is required\n                                        </mat-error>\n                                        <mat-error\n                                                *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.min)\">\n                                            Date of Visit cannot be before {{entity.patient.dateRegistration}}\n                                        </mat-error>\n                                        <mat-error\n                                                *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.max)\">\n                                            Date of Visit cannot be in the future\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row \">\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label class=\"form-label\">Type of Client:</mat-label>\n                                        <mat-select name=\"clinicType\" [(ngModel)]=\"entity.clientType\" name=\"type\">\n                                            <mat-option></mat-option>\n                                            <mat-option [value]=\"'PLHIV newly enrolled into HIV Care & treatment'\">PLHIV\n                                                newly enrolled into HIV Care & treatment\n                                            </mat-option>\n                                            <mat-option [value]=\"'Registered PLHIV on first time visit this FY'\">\n                                                Registered PLHIV on first time visit this FY\n                                            </mat-option>\n                                            <mat-option\n                                                    [value]=\"'Registered PLHIV on follow up/subsequent visit this FY'\">\n                                                Registered PLHIV on follow up/subsequent visit this FY\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label class=\"form-label\">ART Status</mat-label>\n                                        <mat-select name=\"currentStatus\" [(ngModel)]=\"entity.currentStatus\"\n                                                    name=\"status\">\n                                            <mat-option></mat-option>\n                                            <mat-option [value]=\"'Pre-ART'\">Pre-ART</mat-option>\n                                            <mat-option [value]=\"'ART'\">ART</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\" *ngIf=\"entity.patient.gender === 'Female'\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label class=\"form-label\">Pregnancy Status:</mat-label>\n                                        <mat-select name=\"pregnancyStatus\" [(ngModel)]=\"entity.pregnancyStatus\"\n                                                    name=\"preg\">\n                                            <mat-option></mat-option>\n                                            <mat-option [value]=\"'Pregnant'\">Pregnant</mat-option>\n                                            <mat-option [value]=\"'Non-Pregnant'\">Non-Pregnant</mat-option>\n                                            <mat-option [value]=\"'Post Partum'\">Post Partum</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label class=\"form-label\">Clinical Stage:</mat-label>\n                                        <mat-select name=\"clinicStage\" [(ngModel)]=\"entity.clinicStage\" name=\"stage\">\n                                            <mat-option></mat-option>\n                                            <mat-option [value]=\"'Stage I'\">Stage I</mat-option>\n                                            <mat-option [value]=\"'Stage II'\">Stage II</mat-option>\n                                            <mat-option [value]=\"'Stage III'\">Stage III</mat-option>\n                                            <mat-option [value]=\"'Stage IV'\">Stage IV</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label class=\"form-label\">Last CD4 Count:</mat-label>\n                                        <input matInput type=\"number\" name=\"lastCd4\"\n                                               #lastCd4=\"ngModel\"\n                                               [(ngModel)]=\"entity.lastCd4\"\n                                               [required]=\"!!entity.dateLastCd4\"\n                                               [min]=\"1\"/>\n                                        <mat-error\n                                                *ngIf=\"lastCd4.errors && (lastCd4.dirty || lastCd4.touched) && (lastCd4.errors.min)\">\n                                            Minimum value is 1\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <input matInput [matDatepicker]=\"picker1\"\n                                               placeholder=\"Date of Last CD4\"\n                                               [(ngModel)]=\"entity.dateLastCd4\"\n                                               [required]=\"!!entity.lastCd4\"\n                                               #cd4=\"ngModel\"\n                                               name=\"cd4\"\n                                               [max]=\"today\"\n                                               [min]=\"entity.patient.dateRegistration\">\n                                        <mat-datepicker-toggle\n                                                matSuffix\n                                                [for]=\"picker1\">\n                                        </mat-datepicker-toggle>\n                                        <mat-datepicker #picker1></mat-datepicker>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label class=\"form-label\">Last Viral Load Count:</mat-label>\n                                        <input matInput type=\"number\" name=\"lastViral\"\n                                               #lastViral=\"ngModel\"\n                                               [(ngModel)]=\"entity.lastViralLoad\"\n                                               [required]=\"!!entity.dateLastViralLoad\"\n                                               [min]=\"1\"/>\n                                        <mat-error\n                                                *ngIf=\"lastViral.errors && (lastViral.dirty || lastViral.touched) && (lastViral.errors.min)\">\n                                            Minimum value is 1\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <input matInput [matDatepicker]=\"picker2\"\n                                               placeholder=\"Date of Last Viral Load\"\n                                               [(ngModel)]=\"entity.dateLastViralLoad\"\n                                               [required]=\"!!entity.lastViralLoad\"\n                                               #viral=\"ngModel\"\n                                               name=\"viral\"\n                                               [max]=\"today\"\n                                               [min]=\"entity.patient.dateRegistration\">\n                                        <mat-datepicker-toggle\n                                                matSuffix\n                                                [for]=\"picker2\">\n                                        </mat-datepicker-toggle>\n                                        <mat-datepicker #picker2></mat-datepicker>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"entity.eligibleCd4\" name=\"cd\">\n                                        Eligible for CD4\n                                    </mat-checkbox>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"entity.eligibleViralLoad\"\n                                                  name=\"vr\">\n                                        Eligible for Viral Load\n                                    </mat-checkbox>\n                                </div>\n                            </div>\n                            <div>\n                                <button mat-button type=\"button\" matStepperNext>Next</button>\n                            </div>\n                        </mat-step>\n                        <mat-step>\n                            <ng-template matStepLabel>Co-trimoxazole Eligibility Assessment</ng-template>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-list>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.plhivSymtomaticHiv\"\n                                                          name=\"symt\"\n                                            >\n                                                PLHIV with symptomatic HIV\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.plhivAsymtomaticCD4L500\"\n                                                          name=\"sdym\"\n                                            >\n                                                Asymptomatic PLHIV with CD4 count &lt;500 cells/mm<sup>3</sup>\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.plhivActiveTb\"\n                                                          name=\"activeTb\"\n                                            >\n                                                PLHIV with active TB\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item *ngIf=\"entity.patient.gender === 'Female'\">\n                                            <mat-checkbox [(ngModel)]=\"entity.plhivPregnantAfter1stTrimester\"\n                                                          name=\"ftm\"\n                                            >\n                                                Pregnant PLHIV after the first trimester\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.plhivL5Years\"\n                                                          name=\"l5\"\n                                            >\n                                                LHIV &le; 5 years\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                    </mat-list>\n                                </div>\n                            </div>\n                            <div>\n                                <button mat-button type=\"button\" matStepperPrevious>Back</button>\n                                <button mat-button type=\"button\" matStepperNext>Next</button>\n                            </div>\n                        </mat-step>\n                        <mat-step>\n                            <ng-template matStepLabel>TB Screening</ng-template>\n                            <div class=\"row \">\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"entity.tbTreatment\"\n                                                  name=\"tbTreatment\">\n                                        Are you currently on TB Treatment?\n                                    </mat-checkbox>\n                                    <div>\n                                    </div>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <input matInput [matDatepicker]=\"picker3\"\n                                               placeholder=\"Date Started\"\n                                               [(ngModel)]=\"entity.dateStartedTbTreatment\"\n                                               [required]=\"entity.tbTreatment\"\n                                               #started=\"ngModel\"\n                                               name=\"started\"\n                                               [max]=\"today\"\n                                               [min]=\"entity.patient.dateRegistration\">\n                                        <mat-datepicker-toggle\n                                                matSuffix\n                                                [for]=\"picker3\">\n                                        </mat-datepicker-toggle>\n                                        <mat-datepicker #picker3></mat-datepicker>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row \">\n                                <div class=\"col-md-6\">\n                                    <mat-list>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.tbReferred\"\n                                                          name=\"tbReferred\">\n                                                Referred for TB Diagnosis\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.ipt\"\n                                                          name=\"ipt\"\n                                            >\n                                                Are you currently on Isoniazid Preventive Therapy (IPT)?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.inh\"\n                                                          name=\"inh\"\n                                            >\n                                                Have you received INH within the past 2 year?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.eligibleIpt\"\n                                                          name=\"iptEl\"\n                                            >\n                                                Eligible for IPT\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                    </mat-list>\n                                </div>\n                            </div>\n                        </mat-step>\n                        <mat-step>\n                            <ng-template matStepLabel>Nutritional Assessment</ng-template>\n                            <div class=\"row\">\n                                <div class=\"col-md-3\">\n                                    <mat-form-field class=\"full-width\">\n                                        <input matInput placeholder=\"Body weight(Kg)\" [min]=\"1\" [max]=\"250\"\n                                               type=\"number\"\n                                               (change)=\"calculateBmi()\"\n                                               #weight=\"ngModel\" name=\"weight\" [(ngModel)]=\"entity.bodyWeight\"/>\n                                        <mat-error\n                                                *ngIf=\"weight.errors && (weight.dirty || weight.touched) && (weight.errors.min)\">\n                                            Minimum body weight is 1\n                                        </mat-error>\n                                        <mat-error\n                                                *ngIf=\"weight.errors && (weight.dirty || weight.touched) && (weight.errors.max)\">\n                                            Maximum body weight is 250\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-3\">\n                                    <mat-form-field class=\"full-width\">\n                                        <input matInput placeholder=\"Height (m)\" [min]=\"0.2\" [max]=\"1.8\" type=\"number\"\n                                               #height=\"ngModel\" name=\"height\" [(ngModel)]=\"entity.height\"\n                                               (change)=\"calculateBmi()\"/>\n                                        <mat-error\n                                                *ngIf=\"height.errors && (height.dirty || height.touched) && (height.errors.min)\">\n                                            Minimum height is 0.2\n                                        </mat-error>\n                                        <mat-error\n                                                *ngIf=\"height.errors && (height.dirty || height.touched) && (height.errors.max)\">\n                                            Maximum height is 1.8m\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-3\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label>BMI Calculated</mat-label>\n                                        <input matInput disabled [value]=\"bmiCalculated\">\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-3\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label>BMI Range</mat-label>\n                                        <input matInput disabled [value]=\"bmi\">\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-4\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label> MUAC (cm) (under 5yrs):</mat-label>\n                                        <input matInput [min]=\"2\" [max]=\"26.5\"\n                                               type=\"number\"\n                                               #muac=\"ngModel\" name=\"muac\" [(ngModel)]=\"entity.muac\"/>\n                                        <mat-error\n                                                *ngIf=\"muac.errors && (muac.dirty || muac.touched) && (muac.errors.min)\">\n                                            Minimum Mid Upper Arm Circumference is 2\n                                        </mat-error>\n                                        <mat-error\n                                                *ngIf=\"muac.errors && (muac.dirty || muac.touched) && (muac.errors.max)\">\n                                            Maximum Mid Upper Arm Circumference is 26.5\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-4\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label>UAC Pediatrics</mat-label>\n                                        <mat-select name=\"muacPediatrics\"\n                                                    [(ngModel)]=\"entity.muacPediatrics\">\n                                            <mat-option></mat-option>\n                                            <mat-option [value]=\"'<11.5cm (Severe Acute Malnutrition)'\">&lt;11.5cm\n                                                (Severe Acute Malnutrition)\n                                            </mat-option>\n                                            <mat-option [value]=\"'11.5-12.5cm (Moderate Acute Malnutrition)'\">\n                                                11.5-12.5cm (Moderate Acute Malnutrition)\n                                            </mat-option>\n                                            <mat-option [value]=\"'>12.5cm (Well nourished)'\">&gt;12.5cm (Well\n                                                nourished)\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-4\" *ngIf=\"entity.patient.gender === 'Female'\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label>MUAC Pregnant:</mat-label>\n                                        <mat-select name=\"muacPregnant\" [(ngModel)]=\"entity.muacPregnant\">\n                                            <mat-option></mat-option>\n                                            <mat-option [value]=\"'<23cm (Underweight)'\">&lt;23cm (Underweight)\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-list>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.supplementaryFood\"\n                                                          name=\"supp\"\n                                            >\n                                                Provided with Therapeutic/Supplementary\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.nutritionalStatusReferred\"\n                                                          name=\"nutr\"\n                                            >\n                                                Referred\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                    </mat-list>\n                                </div>\n                            </div>\n                            <div>\n                                <button mat-button type=\"button\" matStepperPrevious>Back</button>\n                                <button mat-button type=\"button\" matStepperNext>Next</button>\n                            </div>\n                        </mat-step>\n                        <mat-step>\n                            <ng-template matStepLabel>Gender Based Violence Screening</ng-template>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-list>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.sexuallyAbused\"\n                                                          name=\"sexuallyAbused\"\n                                            >\n                                                Have you been beaten, sexually coerced, raped or threatened or any of\n                                                these by your partner or anyone else?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.sexuallyAbusedReferred\"\n                                                          *ngIf=\"entity.sexuallyAbused\"\n                                                          name=\"sexuallyAbusedReferred\"\n                                            >\n                                                Referred for Post GBV Care\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.essentialsDeniedByPartner\"\n                                                          name=\"denied\"\n                                            >\n                                                Does your partner/family deny you food, shelter, freedom of movement,\n                                                livelihood or finance to access health care?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.essentialsDeniedByPartnerReferred\"\n                                                          *ngIf=\"entity.essentialsDeniedByPartner\"\n                                                          name=\"deniedReferred\"\n                                            >\n                                                Referred for Post GBV Care\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                    </mat-list>\n                                </div>\n                            </div>\n                            <div>\n                                <button mat-button type=\"button\" matStepperPrevious>Back</button>\n                                <button mat-button type=\"button\" matStepperNext>Next</button>\n                            </div>\n                        </mat-step>\n                        <mat-step>\n                            <ng-template matStepLabel>Screening for Chronic Conditions</ng-template>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"entity.hypertensive\"\n                                                  name=\"hyper\"\n                                    >\n                                        Known Hypertensive?\n                                    </mat-checkbox>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"entity.firstHypertensive\"\n                                                  *ngIf=\"entity.hypertensive\"\n                                                  name=\"hyper1s\"\n                                    >\n                                        First time identified within the programme\n                                    </mat-checkbox>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"entity.bpAbove14090\"\n                                                  name=\"bpAbove\"\n                                    >\n                                        BP above 140/90mmHg\n                                    </mat-checkbox>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"entity.bpReferred\"\n                                                  *ngIf=\"entity.bpAbove14090\"\n                                                  name=\"bpReferred\"\n                                    >\n                                        Referred for further care\n                                    </mat-checkbox>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"entity.diabetic\"\n                                                  name=\"diabetic\"\n                                    >\n                                        Known Diabetic?\n                                    </mat-checkbox>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"entity.firstDiabetic\"\n                                                  *ngIf=\"entity.diabetic\"\n                                                  name=\"diabetic1st\"\n                                    >\n                                        First Time Identified Within the Programme?\n                                    </mat-checkbox>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"entity.dmReferred\"\n                                                  name=\"dm\"\n                                    >\n                                        Referred for further care\n                                    </mat-checkbox>\n                                </div>\n                            </div>\n                            <div>\n                                <button mat-button type=\"button\" matStepperPrevious>Back</button>\n                                <button mat-button type=\"button\" matStepperNext>Next</button>\n                            </div>\n                        </mat-step>\n                        <mat-step>\n                            <ng-template matStepLabel>Positive Health Dignity and Prevention(PHDP)</ng-template>\n                            <h5>A)Prevent HIV Transmission</h5>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label>How many doses of ARVs have you missed since the last appointment?(If\n                                            on ART)\n                                        </mat-label>\n                                        <mat-select name=\"missed1\" [(ngModel)]=\"entity.missedArvs\">\n                                            <mat-option></mat-option>\n                                            <mat-option [value]=\"'<=3'\">&le;3</mat-option>\n                                            <mat-option [value]=\"'4-8'\">4-8</mat-option>\n                                            <mat-option [value]=\"'>=9'\">&ge;9</mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                                <mat-list>\n                                    <mat-list-item>\n                                        <mat-checkbox [(ngModel)]=\"entity.missedArvsServicesProvided\"\n                                                      name=\"missed1Referred\"\n                                        >\n                                            Medication adherence counselling done?\n                                        </mat-checkbox>\n                                    </mat-list-item>\n                                    <mat-list-item>\n                                        <mat-checkbox [(ngModel)]=\"entity.statusDisclosedToPartner\"\n                                                      name=\"sdtp\"\n                                        >\n                                            Have you disclosed your status to your partner(s)?\n                                        </mat-checkbox>\n                                    </mat-list-item>\n                                    >\n                                    <mat-list-item>\n                                        <mat-checkbox [(ngModel)]=\"entity.partnerStatusKnown\"\n                                                      name=\"psk\"\n                                        >\n                                            Do you know the status of your partner(s)?\n                                        </mat-checkbox>\n                                    </mat-list-item>\n                                    <mat-list-item>\n                                        <mat-checkbox [(ngModel)]=\"entity.useCondomsAlways\"\n                                                      name=\"uca\"\n                                        >\n                                            Do you use condoms during every sexual encounter?\n                                        </mat-checkbox>\n                                    </mat-list-item>\n                                    <mat-list-item>\n                                        <mat-checkbox [(ngModel)]=\"entity.useCondomsAlwaysServicesProvided\"\n                                                      name=\"ucasp\"\n                                        >\n                                            Condom use counselling done?\n                                        </mat-checkbox>\n                                    </mat-list-item>\n                                </mat-list>\n                            </div>\n                            <mat-divider class=\"pb-1\"></mat-divider>\n                            <h5>B)Prevent Diseases/Opportunistic Infections</h5>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"entity.opportunisticInfections\"\n                                                  name=\"oi\"\n                                    >\n                                        Do you/partner have genital sores/rash/pain/discharge/bleeding?\n                                    </mat-checkbox>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label>How many doses of Co-trimoxazole have you missed since the last\n                                            appointment?\n                                        </mat-label>\n                                        <input matInput type=\"number\" [(ngModel)]=\"entity.missedCotrim\" [min]=\"1\"\n                                               #missed=\"ngModel\"\n                                               name=\"missed\"/>\n                                        <mat-error\n                                                *ngIf=\"missed.errors && (missed.dirty || missed.touched) && (missed.errors.min)\">\n                                            Minimum value is 1\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <mat-divider class=\"pb-1\"></mat-divider>\n                            <h5>C)Promote Healthy Living</h5>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label>How regularly do you take alcohol in a week?</mat-label>\n                                        <input matInput type=\"number\" [(ngModel)]=\"entity.weeklyAlcoholConsumption\"\n                                               [min]=\"1\" #alcohol=\"ngModel\"\n                                               name=\"alcohol\"/>\n                                        <mat-error\n                                                *ngIf=\"alcohol.errors && (alcohol.dirty || alcohol.touched) && (alcohol.errors.min)\">\n                                            Minimum value is 1\n                                        </mat-error>\n                                    </mat-form-field>\n                                    <mat-list>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.weeklyAlcoholConsumptionServicesProvided\"\n                                                          name=\"alcolR\"\n                                            >\n                                                Nutritional counseling done?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.washServicesProvided\"\n                                                          name=\"wash\"\n                                            >\n                                                WASH counseling done?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                    </mat-list>\n                                </div>\n                            </div>\n                            <mat-divider class=\"pb-1\"></mat-divider>\n                            <h5>Additional PHDP Services provided</h5>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-list>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.useInsecticideNets\"\n                                                          name=\"uin\"\n                                            >\n                                                Insecticide treated nets\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item *ngIf=\"entity.patient.gender === 'Female'\">\n                                            <mat-checkbox [(ngModel)]=\"entity.cervicalCancerScreening\"\n                                                          name=\"ccs\"\n                                            >\n                                                Cervical Cancer Screening\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.activeMemberOfSG\"\n                                                          name=\"amsg\"\n                                            >\n                                                Active member of SG\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.familyPlanning\"\n                                                          name=\"fp\"\n                                            >\n                                                Family Planning\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.basicCareKits\"\n                                                          name=\"bck\"\n                                            >\n                                                Basic care kits\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.disclosureCounseling\"\n                                                          name=\"dc\"\n                                            >\n                                                Disclosure counseling\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.socialServices\"\n                                                          name=\"sc\"\n                                            >\n                                                Social Services\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.linkageToIGA\"\n                                                          name=\"liga\"\n                                            >\n                                                Linkage to IGAs\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.legalServices\"\n                                                          name=\"ls\"\n                                            >\n                                                Legal Services\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.otherServices\"\n                                                          name=\"ots\"\n                                            >\n                                                Others\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                    </mat-list>\n                                </div>\n                            </div>\n                            <div>\n                                <button mat-button type=\"button\" matStepperPrevious>Back</button>\n                                <button mat-button type=\"button\" matStepperNext>Next</button>\n                            </div>\n                        </mat-step>\n                        <mat-step>\n                            <ng-template matStepLabel>Reproductive Intentions</ng-template>\n                            <div class=\"row \">\n                                <div class=\"col-md-6\">\n                                    <mat-list>\n                                        <mat-list-item *ngIf=\"entity.patient.gender === 'Female'\">\n                                            <mat-checkbox [(ngModel)]=\"entity.cervicalCancerScreeningWithinPastYear\"\n                                                          name=\"ccswpy\"\n                                            >\n                                                Have you been screened for cervical cancer in the last one year?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item *ngIf=\"entity.patient.gender === 'Female'\">\n                                            <mat-checkbox\n                                                    [(ngModel)]=\"entity.cervicalCancerScreeningWithinPastYearReferred\"\n                                                    name=\"ccswpyr\"\n                                            >\n                                                Referred for further care\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item *ngIf=\"entity.patient.gender === 'Female'\">\n                                            <mat-checkbox [(ngModel)]=\"entity.wantPregnancyWithinAYear\"\n                                                          name=\"wpwy\"\n                                            >\n                                                Do you want a pregnancy in the next one year?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item *ngIf=\"entity.patient.gender === 'Female'\">\n                                            <mat-checkbox [(ngModel)]=\"entity.wantPregnancyWithinAYearReferred\"\n                                                          name=\"wpwar\"\n                                            >\n                                                Referred for further care?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.currentlyUsingContraceptive\"\n                                                          name=\"cuc\"\n                                            >\n                                                If no, are you currently using a contraceptive?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.currentlyUsingContraceptiveReferred\"\n                                                          name=\"cucr\"\n                                            >\n                                                Referred for further care?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                    </mat-list>\n                                    <mat-divider class=\"pb-1\"></mat-divider>\n                                    <h5>Malaria Prevention</h5>\n                                    <mat-list>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.useInsecticideBedNet\"\n                                                          name=\"uibn\"\n                                            >\n                                                Do you use insecticide treated bed net?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item>\n                                            <mat-checkbox [(ngModel)]=\"entity.useInsecticideBedNetReferred\"\n                                                          name=\"uibnr\"\n                                            >\n                                                Referred?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item *ngIf=\"entity.patient.gender === 'Female'\">\n                                            <mat-checkbox [(ngModel)]=\"entity.pregnantIntermittentPreventiveTherapy\"\n                                                          name=\"pipt\"\n                                            >\n                                                If pregnant: have you been on intermittent preventive therapy?\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                        <mat-list-item *ngIf=\"entity.patient.gender === 'Female'\">\n                                            <mat-checkbox\n                                                    [(ngModel)]=\"entity.pregnantIntermittentPreventiveTherapyReferred\"\n                                                    name=\"piptr\"\n                                            >\n                                                Referred\n                                            </mat-checkbox>\n                                        </mat-list-item>\n                                    </mat-list>\n                                </div>\n                            </div>\n                            <div>\n                                <button mat-button type=\"button\" matStepperPrevious>Back</button>\n                            </div>\n                        </mat-step>\n                    </mat-vertical-stepper>\n                    <mat-divider></mat-divider>\n                </mat-card-content>\n                <mat-card-actions class=\"lamis-edit-form-actions\">\n                    <button mat-raised-button type=\"button\" (click)=\"previousState()\">Back</button>\n                    <button mat-raised-button color='primary'\n                            [disabled]=\"careForm.invalid || isSaving\"\n                            type=\"submit\">\n                        {{entity.id !== undefined ? 'Update' : 'Save'}}\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </form>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ClinicService"},{"__symbolic":"reference","name":"ChronicCareService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":31,"character":40},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":32,"character":42},{"__symbolic":"reference","module":"@lamis/web-core","name":"AppLoaderService","line":33,"character":42}]}],"createEntity":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"filterDates":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}],"calculateBmi":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"subscribeToSaveResponse":[{"__symbolic":"method"}],"onSaveSuccess":[{"__symbolic":"method"}],"onSaveError":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":10,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ChronicCareService"}]}],"resolve":[{"__symbolic":"method"}]}},"ɵk":[{"path":"","data":{"title":"Chronic Care Visit","breadcrumb":"CHRONIC CARE VISIT"},"children":[{"path":":id/patient/:patientId/view","component":{"__symbolic":"reference","name":"ɵh"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵj"}},"data":{"authorities":["ROLE_USER"],"title":"Chronic Care Visit","breadcrumb":"CHRONIC CARE VISIT"}},{"path":"patient/:patientId/new","component":{"__symbolic":"reference","name":"ɵi"},"data":{"authorities":["ROLE_DEC"],"title":"Chronic Care Visit","breadcrumb":"ADD CHRONIC CARE VISIT"}},{"path":":id/patient/:patientId/edit","component":{"__symbolic":"reference","name":"ɵi"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵj"}},"data":{"authorities":["ROLE_DEC"],"title":"Chronic Care Visit Edit","breadcrumb":"CHRONIC CARE VISIT EDIT"}}]}],"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":10,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵo"}]}],"resolve":[{"__symbolic":"method"}]}},"ɵm":[{"path":"","data":{"title":"EAC Session","breadcrumb":"EAC SESSION"},"children":[{"path":":id/patient/:patientId/view","component":{"__symbolic":"reference","name":"ɵn"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵl"}},"data":{"authorities":["ROLE_USER"],"title":"EAC Session","breadcrumb":"EAC SESSION"}},{"path":"patient/:patientId/new","component":{"__symbolic":"reference","name":"ɵp"},"data":{"authorities":["ROLE_DEC"],"title":"EAC Session","breadcrumb":"ADD EAC SESSION","commence":true}},{"path":":id/patient/:patientId/edit","component":{"__symbolic":"reference","name":"ɵp"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵl"}},"data":{"authorities":["ROLE_DEC"],"title":"EAC Session Edit","breadcrumb":"EAC SESSION EDIT"}}]}],"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"eac-details","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <mat-card>\n            <mat-card-header>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-card-view [properties]=\"properties\" editable=\"false\"></adf-card-view>\n            </mat-card-content>\n            <mat-card-actions class=\"lamis-edit-form-actions\">\n                <button mat-button (click)=\"previousState()\">Back</button>\n                <button mat-raised-button color=\"warn\" (click)=\"delete()\">Delete</button>\n                <button mat-raised-button color=\"primary\" (click)=\"edit()\">Edit</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":15,"character":32},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":15,"character":55},{"__symbolic":"reference","module":"@covalent/core","name":"TdDialogService","line":16,"character":40},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":16,"character":86},{"__symbolic":"reference","name":"ɵo"}]}],"ngOnInit":[{"__symbolic":"method"}],"edit":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"buildProperties":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}]}},"ɵo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":12,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":18,"character":45},"arguments":[{"__symbolic":"reference","module":"@lamis/web-core","name":"SERVER_API_URL_CONFIG","line":18,"character":52}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":18,"character":32},{"__symbolic":"reference","module":"@lamis/web-core","name":"ServerApiUrlConfig","line":18,"character":94}]}],"create":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"find":[{"__symbolic":"method"}],"findByUuid":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"getLatestByPatient":[{"__symbolic":"method"}],"getLatestViralLoadByPatient":[{"__symbolic":"method"}],"convertDateFromClient":[{"__symbolic":"method"}],"convertDateFromServer":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":16,"character":1},"arguments":[{"selector":"eac-edit","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <mat-card class=\"default\">\n            <mat-card-content>\n                <mat-progress-bar mode=\"determinate\" class=\"session-progress\"></mat-progress-bar>\n            </mat-card-content>\n        </mat-card>\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #clinicForm=\"ngForm\">\n            <mat-card class=\"default\">\n                <mat-card-content *ngIf=\"entity.patient\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field>\n                                <mat-label>Date Last Viral Load</mat-label>\n                                <input matInput\n                                       [value]=\"entity.dateLastViralLoad && entity.dateLastViralLoad.format('DD MMM, YYYY')\"\n                                       disabled>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field>\n                                <input matInput [value]=\"entity.lastViralLoad\" disabled>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <input matInput [matDatepicker]=\"picker\"\n                                   placeholder=\"Date of 1st EAC Session\"\n                                   [(ngModel)]=\"entity.dateEac1\"\n                                   #visit=\"ngModel\"\n                                   (dateChange)=\"dateEac1Changed($event.value)\"\n                                   [max]=\"today\"\n                                   [min]=\"eac1Min\"\n                                   name=\"visit\"\n                                   required>\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.required)\">\n                                Date of first EAC session is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.min)\">\n                                Date of first EAC session cannot be before {{eac1Min | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.max)\">\n                                Date of first EAC session cannot be after {{today | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\" *ngIf=\"entity.id && !!eac2Min\">\n                            <input matInput [matDatepicker]=\"picker2\"\n                                   placeholder=\"Date of 2nd EAC Session\"\n                                   [(ngModel)]=\"entity.dateEac2\"\n                                   #visit2=\"ngModel\"\n                                   (dateChange)=\"dateEac2Changed($event.value)\"\n                                   [max]=\"today\"\n                                   [min]=\"eac2Min\"\n                                   name=\"visit2\">\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker2\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker2></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"visit2.errors && (visit2.dirty || visit2.touched) && (visit2.errors.required)\">\n                                Date of second EAC session is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit2.errors && (visit2.dirty || visit2.touched) && (visit2.errors.min)\">\n                                Date of second EAC session cannot be before {{eac2Min | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit2.errors && (visit2.dirty || visit2.touched) && (visit2.errors.max)\">\n                                Date of second EAC session cannot be after {{today | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\" *ngIf=\"entity.dateEac2 && !!eac3Min\">\n                            <input matInput [matDatepicker]=\"picker3\"\n                                   placeholder=\"Date of 3rd EAC Session\"\n                                   [(ngModel)]=\"entity.dateEac3\"\n                                   #visit3=\"ngModel\"\n                                   (dateChange)=\"dateEac3Changed($event.value)\"\n                                   [max]=\"today\"\n                                   [min]=\"eac3Min\"\n                                   name=\"visit3\">\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker3\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker3></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"visit3.errors && (visit3.dirty || visit3.touched) && (visit3.errors.required)\">\n                                Date of third EAC session is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit3.errors && (visit3.dirty || visit3.touched) && (visit3.errors.min)\">\n                                Date of third EAC session cannot be before {{eac3Min | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit3.errors && (visit3.dirty || visit3.touched) && (visit3.errors.max)\">\n                                Date of third EAC session cannot be after {{today | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\" *ngIf=\"entity.dateEac3 && !!repeatVLMin\">\n                            <input matInput [matDatepicker]=\"picker4\"\n                                   placeholder=\"Date of Repeat VL Sample Collection\"\n                                   [(ngModel)]=\"entity.dateSampleCollected\"\n                                   #visit4=\"ngModel\"\n                                   [max]=\"repeatVLMax\"\n                                   [min]=\"repeatVLMin\"\n                                   name=\"repeat\">\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker4\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker4></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"visit4.errors && (visit4.dirty || visit4.touched) && (visit4.errors.required)\">\n                                Date of Repeat VL Sample Collection is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit4.errors && (visit4.dirty || visit4.touched) && (visit4.errors.min)\">\n                                Date of Repeat VL Sample Collection cannot be\n                                before {{repeatVLMin | date:'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit4.errors && (visit4.dirty || visit4.touched) && (visit4.errors.max)\">\n                                Date of Repeat VL Sample Collection cannot be\n                                after {{repeatVLMax | date:'dd MMM, yyyy'}}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <textarea matInput placeholder=\"Notes\"\n                                      cols=\"30\"\n                                      rows=\"3\"\n                                      name=\"notes\"\n                                      #note=\"ngModel\" [(ngModel)]=\"entity.notes\"></textarea>\n                        </mat-form-field>\n                    </div>\n                    <mat-card-actions class=\"lamis-edit-form-actions\">\n                        <button mat-raised-button type=\"button\" (click)=\"previousState()\">Back</button>\n                        <button mat-raised-button color='primary'\n                                [disabled]=\"clinicForm.invalid || isSaving\"\n                                type=\"submit\">\n                            {{entity.id !== undefined ? 'Update' : 'Save'}}\n                        </button>\n                    </mat-card-actions>\n                </mat-card-content>\n            </mat-card>\n        </form>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ClinicService"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":34,"character":40},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":35,"character":42},{"__symbolic":"reference","module":"@lamis/web-core","name":"AppLoaderService","line":36,"character":42}]}],"createEntity":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"updateMinDates":[{"__symbolic":"method"}],"dateEac1Changed":[{"__symbolic":"method"}],"dateEac2Changed":[{"__symbolic":"method"}],"dateEac3Changed":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}],"subscribeToSaveResponse":[{"__symbolic":"method"}],"onSaveSuccess":[{"__symbolic":"method"}],"onSaveError":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"ɵq":[{"path":"","data":{"title":"Case Management","breadcrumb":"CASE MANAGEMENT"},"children":[{"path":"","children":[{"path":"","component":{"__symbolic":"reference","name":"ɵr"},"data":{"authorities":["ROLE_USER"],"title":"Case Management","breadcrumb":"CASE MANAGEMENT"}}],"data":{"title":"Case Management","breadcrumb":"CASE MANAGEMENT"}}]}],"ɵr":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"case-management-patient-list","template":"<div class=\"layout\">\n    <div class=\"list-container\">\n        <mat-card>\n            <mat-card-content>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-form-field class=\"full-width\">\n                            <mat-label>Facility Case Manager:</mat-label>\n                            <mat-select [(ngModel)]=\"caseManager\" name=\"caseManager\"\n                                        (selectionChange)=\"caseManagerChanged()\">\n                                <mat-option></mat-option>\n                                <mat-option *ngFor=\"let c of caseManagers\" [value]=\"c\">{{c.name}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <div *ngIf=\"caseManager\">\n                            <mat-checkbox [(ngModel)]=\"filterByCaseManager\"\n                                          (change)=\"updateList()\"\n                                          name=\"activeTb\"\n                            >\n                                Filter by Case Manager\n                            </mat-checkbox>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <div *ngIf=\"caseManager\">\n                            <div class=\"row\">\n                                <div class=\"col-md-2\">\n                                    Clients(s) Assigned:\n                                </div>\n                                <div class=\"col-md-2\">\n                                    {{stats.assigned | number: '1.'}}\n                                </div>\n                                <div class=\"col-md-2\">\n                                    Stable 1 Year:\n                                </div>\n                                <div class=\"col-md-2\">\n                                    {{stats.stable | number: '1.'}}\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-2\">\n                                    Unstable less than 1 Year:\n                                </div>\n                                <div class=\"col-md-2\">\n                                    {{stats.unstableLessThan1year | number: '1.'}}\n                                </div>\n                                <div class=\"col-md-2\">\n                                    Unstable more than 1 Year:\n                                </div>\n                                <div class=\"col-md-2\">\n                                    {{stats.unstableMoreThan1Year | number: '1.'}}\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-2\">\n                                    Awaiting ART:\n                                </div>\n                                <div class=\"col-md-2\">\n                                    {{stats.preArt | number: '1.'}}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <h5> Demographic/Clinic filters</h5>\n                <p></p>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-form-field class=\"full-width\">\n                            <mat-label>Client Categorization</mat-label>\n                            <mat-select name=\"categoryId\" [(ngModel)]=\"filter.status\" (selectionChange)=\"updateList()\">\n                                <mat-option>--All--</mat-option>\n                                <mat-option value='STABLE'>Stable One Year</mat-option>\n                                <mat-option value='UNSTABLE_LESS_THAN_1_YEAR'>Unstable less than One Year</mat-option>\n                                <mat-option value='UNSTABLE_MORE_THAN_1_YEAR'>Unstable One Year or more</mat-option>\n                                <mat-option value='PRE_ART'>Awaiting ART</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <mat-form-field class=\"full-width\">\n                            <mat-label>Age Group</mat-label>\n                            <mat-select name=\"ageGroup\" [(ngModel)]=\"ageLimit\" (selectionChange)=\"ageGroupChanged()\">\n                                <mat-option>--All--</mat-option>\n                                <mat-option value='9'>Children (0-9 Years)</mat-option>\n                                <mat-option value='14'>Younger Adolescent (10 to 14 Years)</mat-option>\n                                <mat-option value='19'>Older Adolescent (15 to 19 Years)</mat-option>\n                                <mat-option value='24'>Young People (20 to 24 Years)</mat-option>\n                                <mat-option value='100'>Adults (25 and Above)</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-form-field class=\"full-width\">\n                            <mat-label>Gender</mat-label>\n                            <mat-select name=\"gender\" [(ngModel)]=\"filter.gender\" (selectionChange)=\"updateList()\">\n                                <mat-option>--All--</mat-option>\n                                <mat-option [value]=\"'FEMALE'\">Female</mat-option>\n                                <mat-option [value]=\"'MALE'\">Male</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <mat-form-field class=\"full-width\">\n                            <mat-label>Pregnancy Status</mat-label>\n                            <mat-select name=\"pregnancyStatus\" [(ngModel)]=\"pregnancyStatus\"\n                                        (selectionChange)=\"pregnancyStatusChanged()\">\n                                <mat-option>--All--</mat-option>\n                                <mat-option value='1'>Pregnant</mat-option>\n                                <mat-option value='2'>Breastfeeding</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-6\">\n                        <mat-form-field class=\"full-width\">\n                            <mat-label>State of Residence</mat-label>\n                            <mat-select name=\"state\" (selectionChange)=\"stateChanged($event.value.id)\">\n                                <mat-option></mat-option>\n                                <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state.name}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <mat-form-field class=\"full-width\">\n                            <mat-label>LGA of Residence</mat-label>\n                            <mat-select name=\"lga\" (selectionChange)=\"lgaChanged($event.value.id)\">\n                                <mat-option></mat-option>\n                                <mat-option *ngFor=\"let lga of lgas\" [value]=\"lga\">{{lga.name}}</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n                <div *ngIf=\"patients?.length\">\n                    <div class=\"row\">\n                        <div class=\"col-md-2\">\n                            Clients(s) Assigned:\n                        </div>\n                        <div class=\"col-md-2\">\n                            {{globalStats.assigned | number: '1.'}}\n                        </div>\n                        <div class=\"col-md-2\">\n                            Stable 1 Year:\n                        </div>\n                        <div class=\"col-md-2\">\n                            {{globalStats.stable | number: '1.'}}\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-2\">\n                            Unstable less than 1 Year:\n                        </div>\n                        <div class=\"col-md-2\">\n                            {{globalStats.unstableLessThan1year | number: '1.'}}\n                        </div>\n                        <div class=\"col-md-2\">\n                            Unstable more than 1 Year:\n                        </div>\n                        <div class=\"col-md-2\">\n                            {{globalStats.unstableMoreThan1Year | number: '1.'}}\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-2\">\n                            Awaiting ART:\n                        </div>\n                        <div class=\"col-md-2\">\n                            {{globalStats.preArt | number: '1.'}}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <div class=\"row\">\n                        <div class=\"col-md-8 col-md-offset-4\">\n                            <div class=\"adf-toolbar--spacer\"></div>\n                            <td-search-box backIcon=\"arrow_back\" class=\"push-right-sm\"\n                                           placeholder=\"Search hospital number\" [debounce]=\"500\"\n                                           [(ngModel)]=\"hospitalNum\"\n                                           (searchDebounce)=\"search()\"\n                                           (search)=\"search()\"\n                                           (clear)=\"clearHospitalNum()\" flex>\n                            </td-search-box>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Assign to Case Manager:</mat-label>\n                                <mat-select [(ngModel)]=\"assignCaseManager\" name=\"caseManager1\">\n                                    <mat-option></mat-option>\n                                    <mat-option *ngFor=\"let c of caseManagers\" [value]=\"c\">{{c.name}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-3 col-sm-offset-9\">\n                            <div>\n                                <button mat-raised-button color=\"primary\"\n                                        *ngIf=\"assignCaseManager && selections()\"\n                                        (click)=\"assignClients()\">Assign to Case Manager\n                                </button>\n                                <button mat-raised-button color=\"accent\" *ngIf=\"selections()\"\n                                        (click)=\"deAssignClients()\">De-assign Client(s)\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <mat-progress-spinner\n                            *ngIf=\"initializing\"\n                            class=\"adf-document-list-loading-margin\"\n                            [color]=\"'primary'\"\n                            [mode]=\"'indeterminate'\">\n                    </mat-progress-spinner>\n                    <adf-datatable *ngIf=\"patients || loading\"\n                                   [rows]=\"patients\"\n                                   (rowClick)=\"select($event.value)\">\n                        <data-columns>\n                            <data-column key=\"selected\" title=\"\">\n                                <ng-template let-context=\"$implicit\">\n                                    <mat-checkbox [checked]=\"context.row.getValue('selected')\"></mat-checkbox>\n                                </ng-template>\n                            </data-column>\n                            <data-column key=\"name\" title=\"Name\" sortable=\"true\"></data-column>\n                            <data-column key=\"hospitalNum\" title=\"Hospital Number\" sortable=\"true\"></data-column>\n                            <data-column key=\"gender\" title=\"Gender\" sortable=\"true\">\n                                <ng-template let-context=\"$implicit\">\n                                    {{context.row.getValue('gender') === 'MALE' ? 'Male' : context.row.getValue('gender') === 'FEMALE' ? 'Female' : ''}}\n                                </ng-template>\n                            </data-column>\n                            <data-column key=\"dateBirth\" title=\"Date of Birth\" sortable=\"true\">\n                                <ng-template let-context=\"$implicit\">\n                                    {{context.row.getValue('dateBirth') | date: 'dd MMM, yyyy'}}\n                                </ng-template>\n                            </data-column>\n                            <data-column key=\"address\" title=\"Address\" class=\"full-width ellipsis-cell\"></data-column>\n                            <data-column key=\"currentStatus\" title=\"ART Status\" sortable=\"true\"></data-column>\n                            <data-column key=\"caseManager.name\" title=\"Assigned to\" sortable=\"true\"></data-column>\n                        </data-columns>\n                        <adf-loading-content-template>\n                            <ng-template>\n                                <mat-progress-spinner\n                                        class=\"adf-document-list-loading-margin\"\n                                        [color]=\"'primary'\"\n                                        [mode]=\"'indeterminate'\">\n                                </mat-progress-spinner>\n                            </ng-template>\n                        </adf-loading-content-template>\n                    </adf-datatable>\n                </div>\n                <adf-empty-content\n                        *ngIf=\"!patients\"\n                        icon=\"blur_on\"\n                        [title]=\"'No Patients found'\"\n                        [subtitle]=\"'No Patients matching search criteria or no Patients available'\">\n                </adf-empty-content>\n                <div class=\"row\">\n                    <div class=\"col-md-8\">\n                        <ngb-pagination [collectionSize]=\"totalItems\"\n                                        [(page)]=\"page\"\n                                        [pageSize]=\"itemsPerPage\"\n                                        [maxSize]=\"5\"\n                                        size=\"sm\"\n                                        [rotate]=\"true\"\n                                        [boundaryLinks]=\"true\"\n                                        (pageChange)=\"loadPage(page)\">\n                        </ngb-pagination>\n                    </div>\n                    <div class=\"col-md-4\">\n                        <mat-form-field>\n                            <mat-label>Assignment Filter</mat-label>\n                            <mat-select (selectionChange)=\"assigned($event.value)\">\n                                <mat-option></mat-option>\n                                <mat-option [value]=\"1\">Only assigned clients</mat-option>\n                                <mat-option [value]=\"2\">Only clients not assigned</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","module":"@covalent/core","name":"TdDialogService","line":52,"character":80},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":53,"character":45},{"__symbolic":"reference","module":"@stomp/ng2-stompjs","name":"RxStompService","line":53,"character":88}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"clearHospitalNum":[{"__symbolic":"method"}],"search":[{"__symbolic":"method"}],"assignClients":[{"__symbolic":"method"}],"deAssignClients":[{"__symbolic":"method"}],"selections":[{"__symbolic":"method"}],"loadPage":[{"__symbolic":"method"}],"select":[{"__symbolic":"method"}],"caseManagerChanged":[{"__symbolic":"method"}],"updateList":[{"__symbolic":"method"}],"ageGroupChanged":[{"__symbolic":"method"}],"pregnancyStatusChanged":[{"__symbolic":"method"}],"stateChanged":[{"__symbolic":"method"}],"assigned":[{"__symbolic":"method"}],"lgaChanged":[{"__symbolic":"method"}],"buildStats":[{"__symbolic":"method"}],"buildGlobalStats":[{"__symbolic":"method"}]}},"ɵs":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":12,"character":45},"arguments":[{"__symbolic":"reference","module":"@lamis/web-core","name":"SERVER_API_URL_CONFIG","line":12,"character":52}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":12,"character":32},{"__symbolic":"reference","module":"@lamis/web-core","name":"ServerApiUrlConfig","line":12,"character":94}]}],"initClients":[{"__symbolic":"method"}],"getClientList":[{"__symbolic":"method"}],"getCaseManagerStats":[{"__symbolic":"method"}],"getActiveFacility":[{"__symbolic":"method"}],"getCaseManagers":[{"__symbolic":"method"}],"assignToCaseManager":[{"__symbolic":"method"}],"deAssignClients":[{"__symbolic":"method"}],"getStates":[{"__symbolic":"method"}],"getLgasByState":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵt":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":11,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵw"}]}],"resolve":[{"__symbolic":"method"}]}},"ɵu":[{"path":"","data":{"title":"Case Manager","breadcrumb":"CASE MANAGERS"},"children":[{"path":"","component":{"__symbolic":"reference","name":"ɵv"},"data":{"authorities":["ROLE_USER"],"title":"Case Managers","breadcrumb":"CASE MANAGERS"}},{"path":":id/view","component":{"__symbolic":"reference","name":"ɵx"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵt"}},"data":{"authorities":["ROLE_USER"],"title":"Case Manager","breadcrumb":"CASE MANAGER"}},{"path":"new","component":{"__symbolic":"reference","name":"ɵy"},"data":{"authorities":["ROLE_DEC"],"title":"Add Case Manager","breadcrumb":"ADD CASE MANAGER"}},{"path":":id/edit","component":{"__symbolic":"reference","name":"ɵy"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵt"}},"data":{"authorities":["ROLE_DEC"],"title":"Case Manager Edit","breadcrumb":"CASE MANAGER EDIT"}}]}],"ɵv":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"case-managers","template":"<div class=\"layout\">\n    <div class=\"list-container\">\n        <adf-datatable *ngIf=\"caseManagers\"\n                       [rows]=\"caseManagers\"\n                       [loading]=\"loading\"\n                       [display]=\"display\"\n                       (rowClick)=\"select($event.value)\">\n            <data-columns>\n                <data-column key=\"name\" title=\"Name\" sortable=\"true\"></data-column>\n                <data-column key=\"gender\" title=\"Gender\" sortable=\"true\">\n                    <ng-template let-context=\"$implicit\">\n                        {{context.row.getValue('gender') === 'MALE' ? 'Male' : context.row.getValue('gender') === 'FEMALE' ? 'Female' : ''}}\n                    </ng-template>\n                </data-column>\n                <data-column key=\"phoneNumber\" title=\"Telephone Number\" sortable=\"true\"></data-column>\n                <data-column key=\"address\" title=\"Address\" class=\"full-width ellipsis-cell\"></data-column>\n                <data-column key=\"active\" title=\"Active\" sortable=\"true\">\n                    <ng-template let-context=\"$implicit\">\n                        <mat-checkbox [checked]=\"context.row.getValue('active')\"></mat-checkbox>\n                    </ng-template>\n                </data-column>\n            </data-columns>\n            <adf-loading-content-template>\n                <ng-template>\n                    <mat-progress-spinner\n                            class=\"adf-document-list-loading-margin\"\n                            [color]=\"'primary'\"\n                            [mode]=\"'indeterminate'\">\n                    </mat-progress-spinner>\n                </ng-template>\n            </adf-loading-content-template>\n        </adf-datatable>\n    </div>\n    <adf-empty-content\n            *ngIf=\"!caseManagers\"\n            icon=\"blur_on\"\n            [title]=\"'No Case Managers found'\"\n            [subtitle]=\"'No Case Managers matching search criteria or no Case Managers available'\">\n    </adf-empty-content>\n    <ngb-pagination [collectionSize]=\"totalItems\"\n                    [(page)]=\"page\"\n                    [pageSize]=\"itemsPerPage\"\n                    [maxSize]=\"5\"\n                    size=\"sm\"\n                    [rotate]=\"true\"\n                    [boundaryLinks]=\"true\"\n                    (pageChange)=\"loadPage(page)\">\n    </ngb-pagination>\n\n</div>\n<div class=\"fab-container\">\n    <button mat-fab\n            [matTooltip]=\"'Add New Case Manager'\"\n            [routerLink]=\"['new']\">\n        <mat-icon>add</mat-icon>\n    </button>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":24,"character":40},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":25,"character":34},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":26,"character":42}]}],"ngOnInit":[{"__symbolic":"method"}],"select":[{"__symbolic":"method"}],"onPageChange":[{"__symbolic":"method"}],"loadPage":[{"__symbolic":"method"}],"loadAll":[{"__symbolic":"method"}],"onSuccess":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"ɵw":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":12,"character":45},"arguments":[{"__symbolic":"reference","module":"@lamis/web-core","name":"SERVER_API_URL_CONFIG","line":12,"character":52}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":12,"character":32},{"__symbolic":"reference","module":"@lamis/web-core","name":"ServerApiUrlConfig","line":12,"character":94}]}],"create":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"find":[{"__symbolic":"method"}],"findByUuid":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"query":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵx":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"case-manager-details","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <mat-card>\n            <mat-card-header>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-card-view [properties]=\"properties\" editable=\"false\"></adf-card-view>\n            </mat-card-content>\n            <mat-card-actions class=\"lamis-edit-form-actions\">\n                <button mat-button (click)=\"previousState()\">Back</button>\n                <button mat-raised-button color=\"primary\" (click)=\"edit()\">Edit</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":15,"character":32},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":15,"character":55},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","module":"@covalent/core","name":"TdDialogService","line":16,"character":40},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":17,"character":45}]}],"ngOnInit":[{"__symbolic":"method"}],"edit":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"buildProperties":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}]}},"ɵy":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"case-manager-edit","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #caseManagerForm=\"ngForm\">\n            <mat-card class=\"default\">\n                <mat-card-content>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Name</mat-label>\n                                <input matInput name=\"name\" #name=\"ngModel\"\n                                       required\n                                       [(ngModel)]=\"entity.name\"/>\n                                <mat-error\n                                        *ngIf=\"name.errors && (name.dirty || name.touched) && (name.errors.required)\">\n                                    Case Manager name is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Address</mat-label>\n                                <textarea matInput name=\"address\" [(ngModel)]=\"entity.address\" #address=\"ngModel\"\n                                          rows=\"2\" required>\n                                </textarea>\n                                <mat-error\n                                        *ngIf=\"address.errors && (address.dirty || address.touched) && (address.errors.required)\">\n                                    Case Manager address is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Sex</mat-label>\n                                <mat-select name=\"sex\" [(ngModel)]=\"entity.gender\" #sex=\"ngModel\" required>\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'FEMALE'\">Female</mat-option>\n                                    <mat-option [value]=\"'MALE'\">Male</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"sex.errors && (sex.dirty || sex.touched) && (sex.errors.required)\">\n                                    Case Manager sex is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Telephone</mat-label>\n                                <input matInput name=\"phone\" phoneNumber [(ngModel)]=\"entity.phoneNumber\" required\n                                       #phone=\"ngModel\"/>\n                                <mat-error\n                                        *ngIf=\"phone.errors && (phone.dirty || phone.touched) && (phone.errors.required)\">\n                                    Case Manager Telephone number is required\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"phone.errors && (phone.dirty || phone.touched) && (phone.errors.invalidPhone)\">\n                                    Invalid phone number\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-checkbox name=\"active\" [(ngModel)]=\"entity.active\">Active</mat-checkbox>\n                        </div>\n                    </div>\n                </mat-card-content>\n                <mat-card-actions class=\"lamis-edit-form-actions\">\n                    <button mat-raised-button type=\"button\" (click)=\"previousState()\">Back</button>\n                    <button mat-raised-button color='primary'\n                            [disabled]=\"caseManagerForm.invalid || isSaving\"\n                            type=\"submit\">\n                        {{entity.id !== undefined ? 'Update' : 'Save'}}\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </form>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":20,"character":40},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":21,"character":42},{"__symbolic":"reference","module":"@lamis/web-core","name":"AppLoaderService","line":22,"character":42}]}],"createEntity":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}],"subscribeToSaveResponse":[{"__symbolic":"method"}],"onSaveSuccess":[{"__symbolic":"method"}],"onSaveError":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"ɵz":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":10,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵbc"}]}],"resolve":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵba":[{"path":"","data":{"title":"Cervical Cancer Screening","breadcrumb":"CERVICAL CANCER SCREENING"},"children":[{"path":":id/patient/:patientId/view","component":{"__symbolic":"reference","name":"ɵbb"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵz"}},"data":{"authorities":["ROLE_USER"],"title":"Cervical Cancer Screening","breadcrumb":"CERVICAL CANCER SCREENING"}},{"path":"patient/:patientId/new","component":{"__symbolic":"reference","name":"ɵbd"},"data":{"authorities":["ROLE_DEC"],"title":"Cervical Cancer Screening","breadcrumb":"ADD CERVICAL CANCER SCREENING"}},{"path":":id/patient/:patientId/edit","component":{"__symbolic":"reference","name":"ɵbd"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵz"}},"data":{"authorities":["ROLE_DEC"],"title":"Cervical Cancer Screening","breadcrumb":"CERVICAL CANCER SCREENING EDIT"}}]}],"ɵbb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":38,"character":1},"arguments":[{"selector":"cervical-screening-detail","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <mat-card>\n            <mat-card-header>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-card-view [properties]=\"properties\" editable=\"false\"></adf-card-view>\n            </mat-card-content>\n            <mat-card-actions class=\"lamis-edit-form-actions\">\n                <button mat-button (click)=\"previousState()\">Back</button>\n                <button mat-raised-button color=\"warn\" (click)=\"delete()\">Delete</button>\n                <button mat-raised-button color=\"primary\" (click)=\"edit()\">Edit</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":49,"character":32},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":49,"character":55},{"__symbolic":"reference","name":"ɵbc"},{"__symbolic":"reference","module":"@covalent/core","name":"TdDialogService","line":50,"character":40},{"__symbolic":"reference","name":"ClinicService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":51,"character":45}]}],"ngOnInit":[{"__symbolic":"method"}],"edit":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"buildProperties":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}]}},"ɵbc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":12,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":19,"character":45},"arguments":[{"__symbolic":"reference","module":"@lamis/web-core","name":"SERVER_API_URL_CONFIG","line":19,"character":52}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":19,"character":32},{"__symbolic":"reference","module":"@lamis/web-core","name":"ServerApiUrlConfig","line":19,"character":94}]}],"find":[{"__symbolic":"method"}],"findByUuid":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"getScreeningByPatient":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵbd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":13,"character":1},"arguments":[{"selector":"cancer-screening","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #screeningForm=\"ngForm\">\n            <mat-card class=\"default\">\n                <mat-card-content *ngIf=\"patient\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <input matInput [matDatepicker]=\"picker\"\n                                       placeholder=\"Date of Screening\"\n                                       [(ngModel)]=\"entity.dateScreened\"\n                                       #visit=\"ngModel\"\n                                       [max]=\"today\"\n                                       [min]=\"patient.dateBirth\"\n                                       name=\"visit\"\n                                       required>\n                                <mat-datepicker-toggle\n                                        matSuffix\n                                        [for]=\"picker\">\n                                </mat-datepicker-toggle>\n                                <mat-datepicker #picker></mat-datepicker>\n                                <mat-error\n                                        *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.required)\">\n                                    Date of Screening is required\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.min)\">\n                                    Date of Screening cannot be before {{patient.dateBirth}}\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.max)\">\n                                    Date of Screening cannot be in the future\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Screening Type</mat-label>\n                                <mat-select name=\"type\" [(ngModel)]=\"entity.screeningType\" #type=\"ngModel\" required>\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'FIRST_TIME'\">First Time</mat-option>\n                                    <mat-option [value]=\"'FOLLOWUP'\">Followup after previous negative result or\n                                        suspected cancer\n                                    </mat-option>\n                                    <mat-option [value]=\"'POST_TREATMENT_FOLLOWUP'\">Post-treatment Followup</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"type.errors && (type.dirty || type.touched) && (type.errors.required)\">\n                                    Screening type is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Screening Method</mat-label>\n                                <mat-select name=\"method\" [(ngModel)]=\"entity.screeningMethod\" #method=\"ngModel\"\n                                            required>\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'VIA'\">Visual Inspection with Acetric Acid (VIA)</mat-option>\n                                    <mat-option [value]=\"'VILI'\">Visual Inspection with Lugos Iodine (VILI)</mat-option>\n                                    <mat-option [value]=\"'PAP_SMEAR'\">PAP Smear</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"method.errors && (method.dirty || method.touched) && (method.errors.required)\">\n                                    Screening method is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Result of Screening</mat-label>\n                                <mat-select name=\"result\" [(ngModel)]=\"entity.screeningResult\" #result=\"ngModel\"\n                                            required>\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'NEGATIVE'\">Negative</mat-option>\n                                    <mat-option [value]=\"'POSITIVE'\">Positive</mat-option>\n                                    <mat-option [value]=\"'SUSPICIOUS'\">Suspicious Cancerous Lesions</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"result.errors && (result.dirty || result.touched) && (result.errors.required)\">\n                                    Result of Screening is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\" *ngIf=\"entity.screeningResult === 'POSITIVE'\">\n                            <mat-checkbox [(ngModel)]=\"entity.referredForTreatment\"\n                                          name=\"uibn\"\n                            >\n                                Referred for Treatment?\n                            </mat-checkbox>\n                        </div>\n                    </div>\n                    <div class=\"row\" *ngIf=\"entity.referredForTreatment\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\" *ngIf=\"entity.dateScreened\">\n                                <input matInput [matDatepicker]=\"picker1\"\n                                       placeholder=\"Date Treated\"\n                                       [(ngModel)]=\"entity.dateTreated\"\n                                       #treat=\"ngModel\"\n                                       [max]=\"today\"\n                                       [min]=\"entity.dateScreened\"\n                                       name=\"treat\"\n                                       required>\n                                <mat-datepicker-toggle\n                                        matSuffix\n                                        [for]=\"picker1\">\n                                </mat-datepicker-toggle>\n                                <mat-datepicker #picker1></mat-datepicker>\n                                <mat-error\n                                        *ngIf=\"treat.errors && (treat.dirty || treat.touched) && (treat.errors.required)\">\n                                    Date Treated is required\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"treat.errors && (treat.dirty || treat.touched) && (treat.errors.min)\">\n                                    Date Treated cannot be before {{entity.dateScreened}}\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"treat.errors && (treat.dirty || treat.touched) && (treat.errors.max)\">\n                                    Date Treated cannot be in the future\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Precancerous Lesions Treatment Method</mat-label>\n                                <mat-select name=\"pc\" [(ngModel)]=\"entity.precancerousLesionsTreatmentMethod\"\n                                            #pc=\"ngModel\" required>\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'CRYOTHERAPY'\">Cryotherapy</mat-option>\n                                    <mat-option [value]=\"'THERMAL_ABLATION'\">Thermal Ablation/ Thermocoagulation\n                                    </mat-option>\n                                    <mat-option [value]=\"'LEETZ_LEEP'\">LEETZ/ LEEP</mat-option>\n                                    <mat-option [value]=\"'CONIZATION'\">Conization Knifer/ Lagor</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"pc.errors && (pc.dirty || pc.touched) && (pc.errors.required)\">\n                                    Treatment method is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </mat-card-content>\n                <mat-card-actions class=\"lamis-edit-form-actions\">\n                    <button mat-raised-button type=\"button\" (click)=\"previousState()\">Back</button>\n                    <button mat-raised-button color='primary'\n                            [disabled]=\"screeningForm.invalid || isSaving\"\n                            type=\"submit\">\n                        {{!!observation ? 'Update' : 'Save'}}\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </form>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ClinicService"},{"__symbolic":"reference","name":"ɵbc"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":26,"character":40},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":27,"character":42},{"__symbolic":"reference","module":"@lamis/web-core","name":"AppLoaderService","line":28,"character":42}]}],"ngOnInit":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"subscribeToSaveResponse":[{"__symbolic":"method"}],"onSaveSuccess":[{"__symbolic":"method"}],"onSaveError":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}}},"origins":{"Patient":"./lib/model/clinic.model","OpportunisticInfection":"./lib/model/clinic.model","Adhere":"./lib/model/clinic.model","AdverseDrugReaction":"./lib/model/clinic.model","ClinicAdhere":"./lib/model/clinic.model","ClinicAdverseDrugReaction":"./lib/model/clinic.model","ClinicOpportunisticInfection":"./lib/model/clinic.model","Clinic":"./lib/model/clinic.model","ClinicVm":"./lib/model/clinic.model","ChronicCare":"./lib/model/clinic.model","DMScreen":"./lib/model/clinic.model","TBScreen":"./lib/model/clinic.model","ChronicCareTB":"./lib/model/clinic.model","ChronicCareDm":"./lib/model/clinic.model","ChronicCareVm":"./lib/model/clinic.model","EAC":"./lib/model/clinic.model","Observation":"./lib/model/clinic.model","CervicalCancerScreening":"./lib/model/clinic.model","ClinicService":"./lib/services/clinic.service","ClinicModule":"./lib/clinic.module","ClinicWidgetModule":"./lib/clinic.widget.module","ChronicCareService":"./lib/services/chronic.care.service","ChronicCareModule":"./lib/chronic.care.module","EacModule":"./lib/eac.module","CaseManagementModule":"./lib/case-management.module","CaseManagerModule":"./lib/case-manager.module","CervicalCancerModule":"./lib/cervical-cancer.module","ɵa":"./lib/components/clinic/clinic-details.component","ɵb":"./lib/components/clinic/clinic-edit.component","ɵc":"./lib/services/clinic.route","ɵd":"./lib/services/clinic.route","ɵe":"./lib/material.module","ɵf":"./lib/material.module","ɵg":"./lib/components/clinic/clinic.widget","ɵh":"./lib/components/chronic-care/chronic.care.detail.component","ɵi":"./lib/components/chronic-care/chronic.care.edit.component","ɵj":"./lib/services/chronic.care.route","ɵk":"./lib/services/chronic.care.route","ɵl":"./lib/services/eac.route","ɵm":"./lib/services/eac.route","ɵn":"./lib/components/eac/eac.details.component","ɵo":"./lib/services/eac.service","ɵp":"./lib/components/eac/eac.edit.component","ɵq":"./lib/services/case-management.route","ɵr":"./lib/components/case-management/patient.list.component","ɵs":"./lib/services/case-management.service","ɵt":"./lib/services/case-manager.route","ɵu":"./lib/services/case-manager.route","ɵv":"./lib/components/case-management/case-manager.list.component","ɵw":"./lib/services/case-manager.service","ɵx":"./lib/components/case-management/case-manager.details.component","ɵy":"./lib/components/case-management/case-manager.edit.component","ɵz":"./lib/services/cervical-cancer-screening.route","ɵba":"./lib/services/cervical-cancer-screening.route","ɵbb":"./lib/components/cervical-cancer-screening/cervical-cancer-screening-detail.component","ɵbc":"./lib/services/cervical-cancer-screening.service","ɵbd":"./lib/components/cervical-cancer-screening/cervical-cancer-screening.component"},"importAs":"lamis-clinic-1.4.0"}
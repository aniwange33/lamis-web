{
    "version": 3,
    "file": "lamis-database-1.0.0.js",
    "sources": [
        "ng://lamis-database-1.0.0/lib/services/module.update.service.ts",
        "ng://lamis-database-1.0.0/lib/components/module-updates.component.ts",
        "ng://lamis-database-1.0.0/lib/services/module-updates.route.ts",
        "ng://lamis-database-1.0.0/lib/components/database.sync.component.ts",
        "ng://lamis-database-1.0.0/lib/module.updates.module.ts",
        "ng://lamis-database-1.0.0/public_api.ts",
        "ng://lamis-database-1.0.0/lamis-database-1.0.0.ts"
    ],
    "sourcesContent": [
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { Module } from '../model/module.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ModuleUpdateService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/module-update';\n    }\n\n    installUpdates() {\n        return this.http.get<Module[]>(`${this.resourceUrl}/install-updates`);\n    }\n\n    availableUpdates() {\n        return this.http.get<Module[]>(`${this.resourceUrl}/available-updates`);\n    }\n}\n",
        "import { Component, OnInit } from '@angular/core';\nimport { CardViewBoolItemModel, CardViewItem, CardViewTextItemModel } from '@alfresco/adf-core';\nimport { Module } from '../model/module.model';\nimport { ModuleUpdateService } from '../services/module.update.service';\n\n\n@Component({\n    selector: 'module-update',\n    templateUrl: './module-updates.component.html'\n})\nexport class ModuleUpdatesComponent implements OnInit {\n    modules: Module[] = [];\n    isUpdating = false;\n    installed = false;\n\n    constructor(private service: ModuleUpdateService) {\n    }\n\n    ngOnInit(): void {\n        this.service.availableUpdates().subscribe(res => this.modules = res)\n    }\n\n    getProperties(module: Module): Array<CardViewItem> {\n        const properties = [];\n        const description = new CardViewTextItemModel({\n            label: 'Description',\n            value: module.description,\n            key: 'desc',\n        });\n        properties.push(description);\n        const active = new CardViewBoolItemModel({\n            label: 'Active',\n            value: module.active,\n            key: 'active',\n        });\n        properties.push(active);\n        const version = new CardViewTextItemModel({\n            label: 'version',\n            value: module.version,\n            key: 'version',\n        });\n        properties.push(version);\n        return properties;\n    }\n\n    updateModules() {\n        this.isUpdating = true;\n        this.installed = false;\n        this.service.installUpdates().subscribe(res => {\n            this.modules = res;\n            this.isUpdating = false;\n            this.installed = true;\n        })\n    }\n\n    previousState() {\n        window.history.back();\n    }\n}\n",
        "import { Routes } from '@angular/router';\nimport { ModuleUpdatesComponent } from '../components/module-updates.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Module Updates',\n            breadcrumb: 'MODULE UPDATES'\n        },\n        children: [\n            {\n                path: '',\n                component: ModuleUpdatesComponent,\n                data: {\n                    authorities: ['ROLE_ADMIN'],\n                    title: 'Module Updates',\n                    breadcrumb: 'MODULE UPDATES'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n",
        "import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { RxStompService } from \"@stomp/ng2-stompjs\";\nimport { Message } from '@stomp/stompjs';\nimport { CardViewBoolItemModel, CardViewDateItemModel, CardViewItem } from '@alfresco/adf-core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n    selector: 'database-sync',\n    templateUrl: './database.sync.component.html'\n})\nexport class DatabaseSyncComponent implements OnInit, OnDestroy {\n    syncing = false;\n    tables = '';\n    statusSubscription: Subscription;\n    tableSubscription: Subscription;\n    syncSubscription: Subscription;\n    properties: CardViewItem[] = [];\n    statusProperties: CardViewItem[] = [];\n\n    constructor(private stompService: RxStompService) {\n    }\n\n    ngOnInit(): void {\n        this.statusSubscription = this.stompService.watch(\"/topic/server-status\").subscribe((msg: Message) => {\n            this.properties = [];\n            this.properties.push(new CardViewDateItemModel({\n                key: 'date',\n                value: moment(msg.body),\n                label: 'Last contact with Server',\n                format: 'DD MMM, YYYY HH:MM'\n            }));\n\n            this.properties.push(new CardViewDateItemModel({\n                key: 'date',\n                value: moment(msg.body),\n                label: 'Last successful upload to Server',\n                format: 'DD MMM, YYYY HH:MM'\n            }))\n        });\n\n        this.syncSubscription = this.stompService.watch(\"/topic/server-status\").subscribe((msg: Message) => {\n            this.properties = [];\n            this.properties.push(new CardViewBoolItemModel({\n                key: 'date',\n                value: msg.body === 'true',\n                label: 'Upload Complete',\n            }));\n\n            this.syncing = msg.body === 'false';\n        });\n\n        this.tableSubscription = this.stompService.watch(\"/topic/table-status\").subscribe((msg: Message) => {\n            this.tables = msg.body\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.statusSubscription.unsubscribe();\n        this.tableSubscription.unsubscribe();\n        this.syncSubscription.unsubscribe();\n    }\n\n    sync() {\n        this.syncing = true;\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n\n}\n",
        "import { CoreModule } from '@alfresco/adf-core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule,\r\n    MatTableModule\r\n} from '@angular/material';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CovalentDialogsModule, CovalentMessageModule } from '@covalent/core';\r\nimport { ROUTES } from './services/module-updates.route';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDateFormatModule } from '@lamis/web-core';\r\nimport { CustomFormsModule } from 'ng2-validation';\r\nimport { ModuleUpdatesComponent } from './components/module-updates.component';\r\nimport { DatabaseSyncComponent } from './components/database.sync.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DatabaseSyncComponent,\r\n        ModuleUpdatesComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatCardModule,\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        RouterModule.forChild(ROUTES),\r\n        MatProgressBarModule,\r\n        FormsModule,\r\n        CovalentMessageModule,\r\n        CovalentDialogsModule,\r\n        MatTableModule,\r\n        MatListModule,\r\n        CoreModule,\r\n        ReactiveFormsModule,\r\n        MatDateFormatModule,\r\n        CustomFormsModule\r\n    ],\r\n    exports: [\r\n    ],\r\n    entryComponents: [],\r\n    providers: [\r\n    ]\r\n})\r\nexport class ModuleUpdatesModule {\r\n}\r\n",
        "/*\r\n * Public API Surface of Clinic\r\n */\r\n\r\nexport * from './lib/module.updates.module';\r\n",
        "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {DatabaseSyncComponent as Éµa} from './lib/components/database.sync.component';\nexport {ModuleUpdatesComponent as Éµb} from './lib/components/module-updates.component';\nexport {ROUTES as Éµd} from './lib/services/module-updates.route';\nexport {ModuleUpdateService as Éµc} from './lib/services/module.update.service';"
    ],
    "names": [
        "tslib_1.__param"
    ],
    "mappings": "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"
}

!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@alfresco/adf-core"),require("@angular/common"),require("@angular/core"),require("@angular/material"),require("@angular/router"),require("@covalent/core"),require("@angular/common/http"),require("@lamis/web-core"),require("@angular/forms"),require("ng2-validation"),require("@stomp/ng2-stompjs"),require("moment")):"function"==typeof define&&define.amd?define("lamis-database-1.0.0",["exports","@alfresco/adf-core","@angular/common","@angular/core","@angular/material","@angular/router","@covalent/core","@angular/common/http","@lamis/web-core","@angular/forms","ng2-validation","@stomp/ng2-stompjs","moment"],t):t(((e=e||self)["lamis-database-1"]=e["lamis-database-1"]||{},e["lamis-database-1"][0]=e["lamis-database-1"][0]||{},e["lamis-database-1"][0][0]={}),e.adfCore,e.ng.common,e.ng.core,e.ng.material,e.ng.router,e.core$1,e.ng.common.http,e.webCore,e.ng.forms,e.ng2Validation,e.ng2Stompjs,e.moment_)}(this,(function(e,t,a,n,r,o,i,s,l,c,d,u,p){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function m(e,t,a,n){var r,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,a):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,a,n);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(o<3?r(i):o>3?r(t,a,i):r(t,a))||i);return o>3&&i&&Object.defineProperty(t,a,i),i}function b(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}var f=function(){function e(e,t){this.http=e,this.serverUrl=t,this.resourceUrl="",this.resourceUrl=t.SERVER_API_URL+"/api/module-update"}var t,a;return e.prototype.installUpdates=function(){return this.http.get(this.resourceUrl+"/install-updates")},e.prototype.availableUpdates=function(){return this.http.get(this.resourceUrl+"/available-updates")},e.ctorParameters=function(){return[{type:s.HttpClient},{type:void 0,decorators:[{type:n.Inject,args:[l.SERVER_API_URL_CONFIG]}]}]},e.ngInjectableDef=n.ɵɵdefineInjectable({factory:function(){return new e(n.ɵɵinject(s.HttpClient),n.ɵɵinject(l.SERVER_API_URL_CONFIG))},token:e,providedIn:"root"}),e=m([n.Injectable({providedIn:"root"}),(t=1,a=n.Inject(l.SERVER_API_URL_CONFIG),function(e,n){a(e,n,t)}),b("design:paramtypes",[s.HttpClient,Object])],e)}(),v=function(){function e(e){this.service=e,this.modules=[],this.isUpdating=!1,this.installed=!1}return e.prototype.ngOnInit=function(){var e=this;this.service.availableUpdates().subscribe((function(t){return e.modules=t}))},e.prototype.getProperties=function(e){var a=[],n=new t.CardViewTextItemModel({label:"Description",value:e.description,key:"desc"});a.push(n);var r=new t.CardViewBoolItemModel({label:"Active",value:e.active,key:"active"});a.push(r);var o=new t.CardViewTextItemModel({label:"version",value:e.version,key:"version"});return a.push(o),a},e.prototype.updateModules=function(){var e=this;this.isUpdating=!0,this.installed=!1,this.service.installUpdates().subscribe((function(t){e.modules=t,e.isUpdating=!1,e.installed=!0}))},e.prototype.previousState=function(){window.history.back()},e.ctorParameters=function(){return[{type:f}]},e=m([n.Component({selector:"module-update",template:'<div class="layout">\n    <div class="list-container">\n        <mat-card>\n            <mat-card-header *ngIf="installed">\n                Updates installed; please restart service or system\n            </mat-card-header>\n            <mat-card-content>\n                <div class="row" *ngIf="modules">\n                    <div class="col-sm-12 col-md-4 col-lg-6"\n                         *ngFor="let module of modules">\n                        <mat-card class="">\n                            <mat-card-header>\n                                <mat-card-title>\n                                    {{module.name}}\n                                </mat-card-title>\n                            </mat-card-header>\n                            <mat-card-content>\n                                <adf-card-view [properties]="getProperties(module)"></adf-card-view>\n                            </mat-card-content>\n                        </mat-card>\n                    </div>\n                </div>\n                <adf-empty-content\n                        *ngIf="!modules"\n                        icon="group"\n                        [title]="\'No updates available\'">\n                </adf-empty-content>\n                <mat-divider></mat-divider>\n                <button mat-raised-button type="button" (click)="previousState()">Back</button>\n                <button mat-raised-button color=\'primary\'\n                        (click)="updateModules()"\n                        [disabled]="!modules || isUpdating"\n                        type="submit">\n                    Install Updates\n                </button>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n'}),b("design:paramtypes",[f])],e)}(),h=[{path:"",data:{title:"Module Updates",breadcrumb:"MODULE UPDATES"},children:[{path:"",component:v,data:{authorities:["ROLE_ADMIN"],title:"Module Updates",breadcrumb:"MODULE UPDATES"}}]}],y=p,g=function(){function e(e){this.stompService=e,this.syncing=!1,this.tables="",this.properties=[],this.statusProperties=[]}return e.prototype.ngOnInit=function(){var e=this;this.statusSubscription=this.stompService.watch("/topic/server-status").subscribe((function(a){e.properties=[],e.properties.push(new t.CardViewDateItemModel({key:"date",value:y(a.body),label:"Last contact with Server",format:"DD MMM, YYYY HH:MM"})),e.properties.push(new t.CardViewDateItemModel({key:"date",value:y(a.body),label:"Last successful upload to Server",format:"DD MMM, YYYY HH:MM"}))})),this.syncSubscription=this.stompService.watch("/topic/server-status").subscribe((function(a){e.properties=[],e.properties.push(new t.CardViewBoolItemModel({key:"date",value:"true"===a.body,label:"Upload Complete"})),e.syncing="false"===a.body})),this.tableSubscription=this.stompService.watch("/topic/table-status").subscribe((function(t){e.tables=t.body}))},e.prototype.ngOnDestroy=function(){this.statusSubscription.unsubscribe(),this.tableSubscription.unsubscribe(),this.syncSubscription.unsubscribe()},e.prototype.sync=function(){this.syncing=!0},e.prototype.previousState=function(){window.history.back()},e.ctorParameters=function(){return[{type:u.RxStompService}]},e=m([n.Component({selector:"database-sync",template:'<mat-card>\n    <mat-card-content>\n        <adf-card-view [properties]="properties" [editable]="false"></adf-card-view>\n        <adf-card-view [properties]="statusProperties" [editable]="false"></adf-card-view>\n\n        <mat-form-field class="full-width">\n            <mat-label>Synced Tables</mat-label>\n            <textarea matInput></textarea>\n        </mat-form-field>\n\n        <mat-divider></mat-divider>\n        <button mat-raised-button type="button" (click)="previousState()">Back</button>\n        <button mat-raised-button color=\'primary\'\n                (click)="sync()"\n                [disabled]="!syncing"\n                type="submit">\n            Upload to Server\n        </button>\n    </mat-card-content>\n</mat-card>\n'}),b("design:paramtypes",[u.RxStompService])],e)}(),M=function(){function e(){}return e=m([n.NgModule({declarations:[g,v],imports:[a.CommonModule,r.MatInputModule,r.MatIconModule,r.MatCardModule,r.MatSelectModule,r.MatButtonModule,o.RouterModule.forChild(h),r.MatProgressBarModule,c.FormsModule,i.CovalentMessageModule,i.CovalentDialogsModule,r.MatTableModule,r.MatListModule,t.CoreModule,c.ReactiveFormsModule,l.MatDateFormatModule,d.CustomFormsModule],exports:[],entryComponents:[],providers:[]})],e)}();e.ModuleUpdatesModule=M,e.ɵa=g,e.ɵb=v,e.ɵc=f,e.ɵd=h,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=lamis-database-1.0.0.umd.min.js.map
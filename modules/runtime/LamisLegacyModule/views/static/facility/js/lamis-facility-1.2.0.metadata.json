{"__symbolic":"module","version":4,"metadata":{"FacilityService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":10,"character":45},"arguments":[{"__symbolic":"reference","module":"@lamis/web-core","name":"SERVER_API_URL_CONFIG","line":10,"character":52}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":10,"character":32},{"__symbolic":"reference","module":"@lamis/web-core","name":"ServerApiUrlConfig","line":10,"character":94}]}],"update":[{"__symbolic":"method"}],"getFacilitiesByLga":[{"__symbolic":"method"}],"getStates":[{"__symbolic":"method"}],"getLgaByState":[{"__symbolic":"method"}],"getActive":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"FacilityModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":16,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵa"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":21,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":22,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":23,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatDividerModule","line":24,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule","line":25,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":26,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":27,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":28,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":29,"character":8},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"ɵb"}]}],"exports":[{"__symbolic":"reference","name":"ɵa"}],"entryComponents":[],"providers":[]}]}],"members":{}},"CommunityPharmacyModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":21,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵf"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":28,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":29,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":30,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatDividerModule","line":31,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule","line":32,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":33,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":34,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":35,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":36,"character":8},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"ɵh"}]},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":37,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentCommonModule","line":38,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentDialogsModule","line":39,"character":8},{"__symbolic":"reference","module":"@ng-bootstrap/ng-bootstrap","name":"NgbModule","line":40,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"LamisCoreModule","line":41,"character":8}],"exports":[],"providers":[{"__symbolic":"reference","name":"ɵg"}]}]}],"members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"lamis-facility","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <mat-card>\n            <mat-card-header>\n                Switch Facility\n            </mat-card-header>\n            <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"setActive()\" #facilityForm=\"ngForm\">\n                <mat-card-content>\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            Active Facility: {{facility.name}}\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-select placeholder=\"State\"\n                                            (selectionChange)=\"stateChanged($event.value)\">\n                                    <mat-option *ngFor=\"let state of states\"\n                                                [value]=\"state.id\">{{state.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-select placeholder=\"LGA\"\n                                            (selectionChange)=\"lgaChanged($event.value)\">\n                                    <mat-option *ngFor=\"let lga of lgas\"\n                                                [value]=\"lga.id\">{{lga.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-select placeholder=\"Facility\"\n                                            [(ngModel)]=\"active\"\n                                            required\n                                            [compareWith]=\"entityCompare\"\n                                            #fac=\"ngModel\"\n                                            name=\"facility\">\n                                    <mat-option></mat-option>\n                                    <mat-option *ngFor=\"let facility of facilities\"\n                                                [value]=\"facility\">{{facility.name}}</mat-option>\n                                </mat-select>\n                                <mat-error *ngIf=\"fac.errors\">\n                                    Facility is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <mat-divider></mat-divider>\n                </mat-card-content>\n                <mat-card-actions class=\"lamis-edit-form-actions\">\n                    <button mat-raised-button color=\"primary\" [disabled]=\"facilityForm.invalid\">Switch Facility</button>\n                </mat-card-actions>\n            </form>\n        </mat-card>\n    </div>\n</div>\n","styles":[".bold{font-weight:700}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"FacilityService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":19,"character":80}]}],"ngOnInit":[{"__symbolic":"method"}],"entityCompare":[{"__symbolic":"method"}],"stateChanged":[{"__symbolic":"method"}],"lgaChanged":[{"__symbolic":"method"}],"setActive":[{"__symbolic":"method"}]}},"ɵb":[{"path":"","data":{"title":"Facility Switch","breadcrumb":"FACILITY SWITCH"},"children":[{"path":"","component":{"__symbolic":"reference","name":"ɵa"},"data":{"authorities":["ROLE_USER"],"title":"Facility Switch","breadcrumb":"FACILITY SWITCH"}}]}],"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"community-pharmacy-details","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <mat-card>\n            <mat-card-header>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-card-view [properties]=\"properties\" editable=\"false\"></adf-card-view>\n            </mat-card-content>\n            <mat-card-actions class=\"lamis-edit-form-actions\">\n                <button mat-button (click)=\"previousState()\">Back</button>\n                <button mat-raised-button color=\"primary\" (click)=\"edit()\">Edit</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":15,"character":32},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":15,"character":55},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","module":"@covalent/core","name":"TdDialogService","line":16,"character":40},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":17,"character":45}]}],"ngOnInit":[{"__symbolic":"method"}],"edit":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"buildProperties":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":6,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":12,"character":45},"arguments":[{"__symbolic":"reference","module":"@lamis/web-core","name":"SERVER_API_URL_CONFIG","line":12,"character":52}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":12,"character":32},{"__symbolic":"reference","module":"@lamis/web-core","name":"ServerApiUrlConfig","line":12,"character":94}]}],"create":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"find":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"query":[{"__symbolic":"method"}],"getLgasByState":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"community-pharmacy-edit","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #cpForm=\"ngForm\">\n            <mat-card class=\"default\">\n                <mat-card-content>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Name</mat-label>\n                                <input matInput name=\"name\" #name=\"ngModel\"\n                                       required\n                                       [(ngModel)]=\"entity.name\"/>\n                                <mat-error\n                                        *ngIf=\"name.errors && (name.dirty || name.touched) && (name.errors.required)\">\n                                    Community Pharmacy name is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>PIN</mat-label>\n                                <input matInput name=\"pin\" #pin=\"ngModel\"\n                                       required\n                                       [(ngModel)]=\"entity.pin\"/>\n                                <mat-error\n                                        *ngIf=\"pin.errors && (pin.dirty || pin.touched) && (pin.errors.required)\">\n                                    PIN is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>State</mat-label>\n                                <mat-select name=\"state\" [(ngModel)]=\"entity.state\"\n                                            [compareWith]=\"entityCompare\"\n                                            required\n                                            #s=\"ngModel\"\n                                            (selectionChange)=\"stateChange($event.value.id)\">\n                                    <mat-option></mat-option>\n                                    <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state.name}}</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"s.errors && (s.dirty || s.touched || !!entity.id) && (s.errors.required)\">\n                                    State is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>LGA</mat-label>\n                                <mat-select name=\"lga\" [(ngModel)]=\"entity.lga\" required #l=\"ngModel\"\n                                            [compareWith]=\"entityCompare\">\n                                    <mat-option></mat-option>\n                                    <mat-option *ngFor=\"let lga of lgas\" [value]=\"lga\">{{lga.name}}</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"l.errors && (l.dirty || l.touched || !!entity.id) && (l.errors.required)\">\n                                    LGA is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Address</mat-label>\n                                <textarea matInput name=\"address\" [(ngModel)]=\"entity.address\" #address=\"ngModel\"\n                                          rows=\"2\" >\n                                </textarea>\n                                <mat-error\n                                        *ngIf=\"address.errors && (address.dirty || address.touched) && (address.errors.required)\">\n                                    Community Pharmacy address is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Email</mat-label>\n                                <input matInput name=\"email\" type=\"email\" #email=\"ngModel\"\n                                       [(ngModel)]=\"entity.email\"/>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Telephone</mat-label>\n                                <input matInput name=\"phone\" phoneNumber [(ngModel)]=\"entity.phone\"\n                                       #phone=\"ngModel\"/>\n                                <mat-error\n                                        *ngIf=\"phone.errors && (phone.dirty || phone.touched) && (phone.errors.invalidPhone)\">\n                                    Invalid phone number\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-checkbox name=\"active\" [(ngModel)]=\"entity.active\">Active</mat-checkbox>\n                        </div>\n                    </div>\n                </mat-card-content>\n                <mat-card-actions class=\"lamis-edit-form-actions\">\n                    <button mat-raised-button type=\"button\" (click)=\"previousState()\">Back</button>\n                    <button mat-raised-button color='primary'\n                            [disabled]=\"cpForm.invalid || isSaving\"\n                            type=\"submit\">\n                        {{entity.id !== undefined ? 'Update' : 'Save'}}\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </form>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":23,"character":40},{"__symbolic":"reference","name":"FacilityService"},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":25,"character":42},{"__symbolic":"reference","module":"@lamis/web-core","name":"AppLoaderService","line":26,"character":42}]}],"createEntity":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}],"subscribeToSaveResponse":[{"__symbolic":"method"}],"onSaveSuccess":[{"__symbolic":"method"}],"onSaveError":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}],"stateChange":[{"__symbolic":"method"}],"entityCompare":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"community-pharmacies","template":"<div class=\"layout\">\n    <div class=\"list-container\">\n        <adf-datatable *ngIf=\"communityPharmacies\"\n                       [rows]=\"communityPharmacies\"\n                       [loading]=\"loading\"\n                       [display]=\"display\"\n                       (rowClick)=\"select($event.value)\">\n            <data-columns>\n                <data-column key=\"name\" title=\"Name\" sortable=\"true\"></data-column>\n                <data-column key=\"pin\" title=\"PIN\" sortable=\"true\"></data-column>\n                <data-column key=\"phone\" title=\"Telephone Number\" sortable=\"true\"></data-column>\n                <data-column key=\"address\" title=\"Address\" class=\"full-width ellipsis-cell\"></data-column>\n                <data-column key=\"active\" title=\"Active\" sortable=\"true\">\n                    <ng-template let-context=\"$implicit\">\n                        <mat-checkbox [checked]=\"context.row.getValue('active')\"></mat-checkbox>\n                    </ng-template>\n                </data-column>\n            </data-columns>\n            <adf-loading-content-template>\n                <ng-template>\n                    <mat-progress-spinner\n                            class=\"adf-document-list-loading-margin\"\n                            [color]=\"'primary'\"\n                            [mode]=\"'indeterminate'\">\n                    </mat-progress-spinner>\n                </ng-template>\n            </adf-loading-content-template>\n        </adf-datatable>\n    </div>\n    <adf-empty-content\n            *ngIf=\"!communityPharmacies\"\n            icon=\"blur_on\"\n            [title]=\"'No Community Pharmacies found'\"\n            [subtitle]=\"'No Community Pharmacies matching search criteria or no Community Pharmacies available'\">\n    </adf-empty-content>\n    <ngb-pagination [collectionSize]=\"totalItems\"\n                    [(page)]=\"page\"\n                    [pageSize]=\"itemsPerPage\"\n                    [maxSize]=\"5\"\n                    size=\"sm\"\n                    [rotate]=\"true\"\n                    [boundaryLinks]=\"true\"\n                    (pageChange)=\"loadPage(page)\">\n    </ngb-pagination>\n\n</div>\n<div class=\"fab-container\">\n    <button mat-fab\n            [matTooltip]=\"'Add New Community Pharmacy'\"\n            [routerLink]=\"['new']\">\n        <mat-icon>add</mat-icon>\n    </button>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"FacilityService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":24,"character":40},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":25,"character":34},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":26,"character":42}]}],"ngOnInit":[{"__symbolic":"method"}],"select":[{"__symbolic":"method"}],"onPageChange":[{"__symbolic":"method"}],"loadPage":[{"__symbolic":"method"}],"loadAll":[{"__symbolic":"method"}],"onSuccess":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":11,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"}]}],"resolve":[{"__symbolic":"method"}]}},"ɵh":[{"path":"","data":{"title":"Community Pharmacies","breadcrumb":"COMMUNITY PHARMACIES"},"children":[{"path":"","component":{"__symbolic":"reference","name":"ɵf"},"data":{"authorities":["ROLE_USER"],"title":"Community Pharmacies","breadcrumb":"COMMUNITY PHARMACIES"}},{"path":":id/view","component":{"__symbolic":"reference","name":"ɵc"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵg"}},"data":{"authorities":["ROLE_USER"],"title":"Community Pharmacy","breadcrumb":"COMMUNITY PHARMACY"}},{"path":"new","component":{"__symbolic":"reference","name":"ɵe"},"data":{"authorities":["ROLE_DEC"],"title":"Add Community Pharmacy","breadcrumb":"ADD COMMUNITY PHARMACY"}},{"path":":id/edit","component":{"__symbolic":"reference","name":"ɵe"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵg"}},"data":{"authorities":["ROLE_DEC"],"title":"Community Pharmacy Edit","breadcrumb":"COMMUNITY PHARMACY EDIT"}}]}]},"origins":{"FacilityService":"./lib/services/facility.service","FacilityModule":"./lib/facility.module","CommunityPharmacyModule":"./lib/community-pharmacy.module","ɵa":"./lib/components/facility/facility.component","ɵb":"./lib/services/facility.routes","ɵc":"./lib/components/community-pharmacy/community-pharmacy.details.component","ɵd":"./lib/services/community-pharmacy.service","ɵe":"./lib/components/community-pharmacy/community-pharmacy.edit.component","ɵf":"./lib/components/community-pharmacy/community-pharmacy-list.component","ɵg":"./lib/services/cp.routes","ɵh":"./lib/services/cp.routes"},"importAs":"lamis-facility-1.2.0"}
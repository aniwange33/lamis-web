import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { NotificationService } from '@alfresco/adf-core';
import { ActivatedRoute } from '@angular/router';
import { AppLoaderService, entityCompare } from '@lamis/web-core';
import { CommunityPharmacyService } from '../../services/community-pharmacy.service';
import { FacilityService } from '../../services/facility.service';
var CommunityPharmacyEditComponent = /** @class */ (function () {
    function CommunityPharmacyEditComponent(service, notification, facilityService, activatedRoute, appLoaderService) {
        this.service = service;
        this.notification = notification;
        this.facilityService = facilityService;
        this.activatedRoute = activatedRoute;
        this.appLoaderService = appLoaderService;
        this.states = [];
        this.lgas = [];
    }
    CommunityPharmacyEditComponent.prototype.createEntity = function () {
        return {};
    };
    CommunityPharmacyEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.activatedRoute.data.subscribe(function (_a) {
            var entity = _a.entity;
            _this.entity = !!entity && entity.body ? entity.body : entity;
            if (_this.entity === undefined) {
                _this.entity = _this.createEntity();
                _this.entity.active = true;
            }
        });
        this.facilityService.getActive().subscribe(function (res) {
            var facility = res.body;
            _this.entity.state = facility.state;
            _this.states.push(_this.entity.state);
            _this.stateChange(facility.state.id);
        });
    };
    CommunityPharmacyEditComponent.prototype.save = function () {
        this.isSaving = true;
        this.appLoaderService.open('Saving Community Pharmacy..');
        if (this.entity.id !== undefined) {
            this.subscribeToSaveResponse(this.service.update(this.entity));
        }
        else {
            this.subscribeToSaveResponse(this.service.create(this.entity));
        }
    };
    CommunityPharmacyEditComponent.prototype.previousState = function () {
        window.history.back();
    };
    CommunityPharmacyEditComponent.prototype.subscribeToSaveResponse = function (result) {
        var _this = this;
        result.subscribe(function (res) { return _this.onSaveSuccess(res.body); }, function (res) {
            _this.onSaveError();
            _this.onError(res.message);
        });
    };
    CommunityPharmacyEditComponent.prototype.onSaveSuccess = function (result) {
        this.appLoaderService.close();
        this.isSaving = false;
        this.notification.openSnackMessage('Community Pharmacy successfully saved');
        this.previousState();
    };
    CommunityPharmacyEditComponent.prototype.onSaveError = function () {
        this.isSaving = false;
        this.appLoaderService.close();
        //this.submitButton.disabled = true;
        this.notification.showError('Error occurred saving Community Pharmacy; try again');
        //this.progressBar.mode = 'determinate';
    };
    CommunityPharmacyEditComponent.prototype.onError = function (errorMessage) {
        this.appLoaderService.close();
        this.notification.showError(errorMessage);
    };
    CommunityPharmacyEditComponent.prototype.stateChange = function (id) {
        var _this = this;
        this.service.getLgasByState(id).subscribe(function (res) { return _this.lgas = res; });
    };
    CommunityPharmacyEditComponent.prototype.entityCompare = function (e1, e2) {
        return entityCompare(e1, e2);
    };
    CommunityPharmacyEditComponent.ctorParameters = function () { return [
        { type: CommunityPharmacyService },
        { type: NotificationService },
        { type: FacilityService },
        { type: ActivatedRoute },
        { type: AppLoaderService }
    ]; };
    CommunityPharmacyEditComponent = tslib_1.__decorate([
        Component({
            selector: 'community-pharmacy-edit',
            template: "<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #cpForm=\"ngForm\">\n            <mat-card class=\"default\">\n                <mat-card-content>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Name</mat-label>\n                                <input matInput name=\"name\" #name=\"ngModel\"\n                                       required\n                                       [(ngModel)]=\"entity.name\"/>\n                                <mat-error\n                                        *ngIf=\"name.errors && (name.dirty || name.touched) && (name.errors.required)\">\n                                    Community Pharmacy name is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>PIN</mat-label>\n                                <input matInput name=\"pin\" #pin=\"ngModel\"\n                                       required\n                                       [(ngModel)]=\"entity.pin\"/>\n                                <mat-error\n                                        *ngIf=\"pin.errors && (pin.dirty || pin.touched) && (pin.errors.required)\">\n                                    PIN is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>State</mat-label>\n                                <mat-select name=\"state\" [(ngModel)]=\"entity.state\"\n                                            [compareWith]=\"entityCompare\"\n                                            required\n                                            #s=\"ngModel\"\n                                            (selectionChange)=\"stateChange($event.value.id)\">\n                                    <mat-option></mat-option>\n                                    <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state.name}}</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"s.errors && (s.dirty || s.touched || !!entity.id) && (s.errors.required)\">\n                                    State is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>LGA</mat-label>\n                                <mat-select name=\"lga\" [(ngModel)]=\"entity.lga\" required #l=\"ngModel\"\n                                            [compareWith]=\"entityCompare\">\n                                    <mat-option></mat-option>\n                                    <mat-option *ngFor=\"let lga of lgas\" [value]=\"lga\">{{lga.name}}</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"l.errors && (l.dirty || l.touched || !!entity.id) && (l.errors.required)\">\n                                    LGA is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Address</mat-label>\n                                <textarea matInput name=\"address\" [(ngModel)]=\"entity.address\" #address=\"ngModel\"\n                                          rows=\"2\" >\n                                </textarea>\n                                <mat-error\n                                        *ngIf=\"address.errors && (address.dirty || address.touched) && (address.errors.required)\">\n                                    Community Pharmacy address is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Email</mat-label>\n                                <input matInput name=\"email\" type=\"email\" #email=\"ngModel\"\n                                       [(ngModel)]=\"entity.email\"/>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Telephone</mat-label>\n                                <input matInput name=\"phone\" phoneNumber [(ngModel)]=\"entity.phone\"\n                                       #phone=\"ngModel\"/>\n                                <mat-error\n                                        *ngIf=\"phone.errors && (phone.dirty || phone.touched) && (phone.errors.invalidPhone)\">\n                                    Invalid phone number\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-checkbox name=\"active\" [(ngModel)]=\"entity.active\">Active</mat-checkbox>\n                        </div>\n                    </div>\n                </mat-card-content>\n                <mat-card-actions class=\"lamis-edit-form-actions\">\n                    <button mat-raised-button type=\"button\" (click)=\"previousState()\">Back</button>\n                    <button mat-raised-button color='primary'\n                            [disabled]=\"cpForm.invalid || isSaving\"\n                            type=\"submit\">\n                        {{entity.id !== undefined ? 'Update' : 'Save'}}\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </form>\n    </div>\n</div>\n"
        })
    ], CommunityPharmacyEditComponent);
    return CommunityPharmacyEditComponent;
}());
export { CommunityPharmacyEditComponent };
//# sourceMappingURL=data:application/json;base64,
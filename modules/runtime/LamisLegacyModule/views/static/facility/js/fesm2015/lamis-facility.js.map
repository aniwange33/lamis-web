{
    "version": 3,
    "file": "lamis-facility.js",
    "sources": [
        "ng://lamis-facility/lib/services/facility.service.ts",
        "ng://lamis-facility/lib/components/facility.component.ts",
        "ng://lamis-facility/lib/services/facility.routes.ts",
        "ng://lamis-facility/lib/facility.module.ts",
        "ng://lamis-facility/public_api.ts",
        "ng://lamis-facility/lamis-facility.ts"
    ],
    "sourcesContent": [
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\n\n@Injectable({providedIn: 'root'})\nexport class FacilityService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/facilities';\n    }\n\n    update(facility): Observable<any> {\n        return this.http\n            .post(`${this.resourceUrl}/switch`, facility, {observe: 'response'});\n    }\n\n    getFacilitiesByLga(id: number): Observable<any> {\n        return this.http\n            .get<any[]>(`${this.resourceUrl}/lga/${id}`, {observe: 'body'})\n    }\n\n    getStates() {\n        return this.http.get<any[]>('/api/states')\n    }\n\n    getLgaByState(id) {\n        return this.http.get<any[]>(`/api/provinces/state/${id}`)\n    }\n\n    getActive() {\n        return this.http\n            .get(`${this.resourceUrl}/active`, {observe: 'response'})\n    }\n}\n",
        "import { Component, OnInit } from '@angular/core';\r\nimport { FacilityService } from '../services/facility.service';\r\nimport { NotificationService } from '@alfresco/adf-core';\r\nimport { entityCompare } from '@lamis/web-core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'lamis-facility',\r\n    templateUrl: './facility.component.html',\r\n    styleUrls: ['./facility.component.scss']\r\n})\r\nexport class FacilityComponent implements OnInit {\r\n    states: any[];\r\n    lgas: any[];\r\n    facilities: any[];\r\n    active: any;\r\n\r\n    facility: any;\r\n\r\n    constructor(private facilityService: FacilityService, private notification: NotificationService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.facilityService.getStates().subscribe(res => this.states = res);\r\n        this.facility = this.facilityService.getActive().subscribe(res => {\r\n            if (res.body) {\r\n                this.facility = res.body\r\n            }\r\n        })\r\n    }\r\n\r\n    entityCompare(e1, e2) {\r\n        return entityCompare(e1, e2);\r\n    }\r\n\r\n    stateChanged(id) {\r\n        this.facilityService.getLgaByState(id).subscribe(res => this.lgas = res)\r\n    }\r\n\r\n    lgaChanged(id) {\r\n        this.facilityService.getFacilitiesByLga(id).subscribe(res => this.facilities = res)\r\n    }\r\n\r\n    setActive() {\r\n        this.facilityService.update(this.active).subscribe(res => {\r\n            if (res.ok && res.body) {\r\n                this.notification.showInfo(`Facility switched to ${res.body.name}`)\r\n            }\r\n        });\r\n    }\r\n}\r\n",
        "import { Routes } from '@angular/router';\nimport { FacilityComponent } from '../components/facility.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Facility Switch',\n            breadcrumb: 'FACILITY SWITCH'\n        },\n        children: [\n            {\n                path: '',\n                component: FacilityComponent,\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Facility Switch',\n                    breadcrumb: 'FACILITY SWITCH'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n        ]\n    }\n];\n",
        "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule\r\n} from '@angular/material';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FacilityComponent } from './components/facility.component';\r\nimport { ROUTES } from './services/facility.routes';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        FacilityComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatDividerModule,\r\n        MatCardModule,\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        FormsModule,\r\n        RouterModule.forChild(ROUTES)\r\n    ],\r\n    exports: [\r\n        FacilityComponent\r\n    ],\r\n    entryComponents: [\r\n    ],\r\n    providers: [\r\n    ]\r\n})\r\nexport class FacilityModule {\r\n}\r\n",
        "/*\r\n * Public API Surface of Patient\r\n */\r\nexport * from './lib/services/facility.service';\r\nexport * from './lib/facility.module';\r\n",
        "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {FacilityComponent as Éµa} from './lib/components/facility.component';\nexport {ROUTES as Éµb} from './lib/services/facility.routes';"
    ],
    "names": [
        "tslib_1.__param"
    ],
    "mappings": "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"
}

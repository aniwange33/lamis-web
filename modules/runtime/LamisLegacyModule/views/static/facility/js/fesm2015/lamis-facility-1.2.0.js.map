{"version":3,"file":"lamis-facility-1.2.0.js","sources":["ng://lamis-facility-1.2.0/lib/services/facility.service.ts","ng://lamis-facility-1.2.0/lib/components/facility/facility.component.ts","ng://lamis-facility-1.2.0/lib/services/facility.routes.ts","ng://lamis-facility-1.2.0/lib/facility.module.ts","ng://lamis-facility-1.2.0/lib/services/community-pharmacy.service.ts","ng://lamis-facility-1.2.0/lib/components/community-pharmacy/community-pharmacy-list.component.ts","ng://lamis-facility-1.2.0/lib/components/community-pharmacy/community-pharmacy.details.component.ts","ng://lamis-facility-1.2.0/lib/components/community-pharmacy/community-pharmacy.edit.component.ts","ng://lamis-facility-1.2.0/lib/services/cp.routes.ts","ng://lamis-facility-1.2.0/lib/community-pharmacy.module.ts","ng://lamis-facility-1.2.0/public_api.ts","ng://lamis-facility-1.2.0/lamis-facility-1.2.0.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { Facility } from '../model/facility.model';\n\n@Injectable({providedIn: 'root'})\nexport class FacilityService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/facilities';\n    }\n\n    update(facility): Observable<any> {\n        return this.http\n            .post(`${this.resourceUrl}/switch`, facility, {observe: 'response'});\n    }\n\n    getFacilitiesByLga(id: number): Observable<any> {\n        return this.http\n            .get<any[]>(`${this.resourceUrl}/lga/${id}`, {observe: 'body'})\n    }\n\n    getStates() {\n        return this.http.get<any[]>('/api/states')\n    }\n\n    getLgaByState(id) {\n        return this.http.get<any[]>(`/api/provinces/state/${id}`)\n    }\n\n    getActive() {\n        return this.http\n            .get<Facility>(`${this.resourceUrl}/active`, {observe: 'response'})\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FacilityService } from '../../services/facility.service';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { entityCompare } from '@lamis/web-core';\nimport { Observable } from 'rxjs';\n\n@Component({\n    selector: 'lamis-facility',\n    templateUrl: './facility.component.html',\n    styleUrls: ['./facility.component.scss']\n})\nexport class FacilityComponent implements OnInit {\n    states: any[];\n    lgas: any[];\n    facilities: any[];\n    active: any;\n\n    facility: any;\n\n    constructor(private facilityService: FacilityService, private notification: NotificationService) {\n    }\n\n    ngOnInit() {\n        this.facilityService.getStates().subscribe(res => this.states = res);\n        this.facility = this.facilityService.getActive().subscribe(res => {\n            if (res.body) {\n                this.facility = res.body\n            }\n        })\n    }\n\n    entityCompare(e1, e2) {\n        return entityCompare(e1, e2);\n    }\n\n    stateChanged(id) {\n        this.facilityService.getLgaByState(id).subscribe(res => this.lgas = res)\n    }\n\n    lgaChanged(id) {\n        this.facilityService.getFacilitiesByLga(id).subscribe(res => this.facilities = res)\n    }\n\n    setActive() {\n        this.facilityService.update(this.active).subscribe(res => {\n            if (res.ok && res.body) {\n                this.facilityService.getActive().subscribe(r => {\n                    if (r.body) {\n                        this.facility = r.body\n                    }\n                });\n                this.notification.showInfo(`Facility switched to ${res.body.name}`)\n            }\n        });\n    }\n}\n","import { Routes } from '@angular/router';\nimport { FacilityComponent } from '../components/facility/facility.component';\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Facility Switch',\n            breadcrumb: 'FACILITY SWITCH'\n        },\n        children: [\n            {\n                path: '',\n                component: FacilityComponent,\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Facility Switch',\n                    breadcrumb: 'FACILITY SWITCH'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n        ]\n    }\n];\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatInputModule,\n    MatSelectModule\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { FacilityComponent } from './components/facility/facility.component';\nimport { ROUTES } from './services/facility.routes';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n    declarations: [\n        FacilityComponent\n    ],\n    imports: [\n        CommonModule,\n        MatInputModule,\n        MatIconModule,\n        MatDividerModule,\n        MatCardModule,\n        MatSelectModule,\n        MatButtonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES)\n    ],\n    exports: [\n        FacilityComponent\n    ],\n    entryComponents: [\n    ],\n    providers: [\n    ]\n})\nexport class FacilityModule {\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { createRequestOption, SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\nimport { Observable } from 'rxjs';\nimport { CommunityPharmacy } from '../model/community-pharmacy.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommunityPharmacyService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/community-pharmacies';\n    }\n\n    create(caseManager: CommunityPharmacy): Observable<HttpResponse<CommunityPharmacy>> {\n        return this.http\n            .post<CommunityPharmacy>(this.resourceUrl, caseManager, {observe: 'response'});\n    }\n\n    update(caseManager: CommunityPharmacy): Observable<HttpResponse<CommunityPharmacy>> {\n        return this.http\n            .put<CommunityPharmacy>(this.resourceUrl, caseManager, {observe: 'response'})\n    }\n\n    find(id: number): Observable<HttpResponse<CommunityPharmacy>> {\n        return this.http\n            .get<CommunityPharmacy>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    query(req?: any): Observable<HttpResponse<CommunityPharmacy[]>> {\n        const options = createRequestOption(req);\n        return this.http\n            .get<CommunityPharmacy[]>(this.resourceUrl, {params: options, observe: 'response'});\n    }\n\n    getLgasByState(id) {\n        return this.http.get<any[]>(`/api/provinces/state/${id}`)\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Facility } from '../../model/facility.model';\nimport { CommunityPharmacy } from '../../model/community-pharmacy.model';\nimport { CommunityPharmacyService } from '../../services/community-pharmacy.service';\nimport { FacilityService } from '../../services/facility.service';\n\n@Component({\n    selector: 'community-pharmacies',\n    templateUrl: './community-pharmacy-list.component.html'\n})\nexport class CommunityPharmacyListComponent implements OnInit {\n    page = 0;\n    communityPharmacies: CommunityPharmacy[];\n    loading = false;\n    public itemsPerPage: number = 10;\n    public currentSearch: string = '';\n    totalItems = 0;\n    display = 'list';\n    facility: Facility;\n\n    constructor(private service: CommunityPharmacyService,\n                private facilityService: FacilityService,\n                protected notification: NotificationService,\n                protected router: Router,\n                protected activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.facilityService.getActive().subscribe((res: any) => {\n            this.facility = res.body;\n            this.onPageChange(0);\n        })\n    }\n\n    public select(data: any): any {\n        this.router.navigate(['..', 'community-pharmacies', data.obj.id, 'view'], {relativeTo: this.activatedRoute});\n    }\n\n    onPageChange(pageInfo) {\n        this.page = pageInfo;\n        this.loadAll(pageInfo - 1);\n    }\n\n    loadPage(page: number) {\n        this.page = page;\n        this.loadAll(page - 1);\n    }\n\n    loadAll(page: number) {\n        this.loading = true;\n        this.service.query({\n            keyword: this.currentSearch,\n            page: page < 0 ? 0 : page,\n            stateId: this.facility && this.facility.state && this.facility.state.id || 0,\n            size: this.itemsPerPage,\n            sort: ['id', 'asc']\n        }).subscribe(\n            (res: any) => {\n                this.onSuccess(res.body, res.headers)\n            },\n            (res: any) => this.onError(res)\n        );\n    }\n\n    protected onSuccess(data: any, headers: any) {\n        this.communityPharmacies = data;\n        this.totalItems = headers.get('X-Total-Count');\n        this.loading = false;\n    }\n\n    private onError(error: any) {\n        this.notification.openSnackMessage(error.message);\n        this.loading = false;\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CardViewBoolItemModel, CardViewItem, CardViewTextItemModel, NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { TdDialogService } from '@covalent/core';\nimport { CommunityPharmacy } from '../../model/community-pharmacy.model';\nimport { CommunityPharmacyService } from '../../services/community-pharmacy.service';\n\n@Component({\n    selector: 'community-pharmacy-details',\n    templateUrl: './community-pharmacy.details.component.html'\n})\nexport class CommunityPharmacyDetailsComponent implements OnInit{\n    properties: CardViewItem[] = [];\n    entity: CommunityPharmacy;\n\n    constructor(private router: Router, private route: ActivatedRoute, private service: CommunityPharmacyService,\n                private _dialogService: TdDialogService,\n                private notificationService: NotificationService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'admin', 'config', 'community-pharmacies', this.entity.id, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this Community Pharmacy, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.service.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['admin', 'config', 'community-pharmacies'])\n                    } else {\n                        this.notificationService.showError('Error deleting Community Pharmacy, please try again')\n                    }\n                })\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Name',\n            key: 'cs',\n            value: this.entity.name\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Address',\n            key: 'fs',\n            value: this.entity.address\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'PIN',\n            key: 'fs',\n            value: this.entity.pin\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Phone',\n            key: 'ts',\n            value: this.entity.phone\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'Email',\n            key: 'cd4p',\n            value: this.entity.email\n        }));\n        this.properties.push(new CardViewBoolItemModel({\n            label: 'Active',\n            key: 'cd4p',\n            value: this.entity.active\n        }));\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppLoaderService, entityCompare } from '@lamis/web-core';\nimport { Observable } from 'rxjs';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { CommunityPharmacyService } from '../../services/community-pharmacy.service';\nimport { CommunityPharmacy } from '../../model/community-pharmacy.model';\nimport { FacilityService } from '../../services/facility.service';\nimport { Facility } from '../../model/facility.model';\n\n@Component({\n    selector: 'community-pharmacy-edit',\n    templateUrl: './community-pharmacy.edit.component.html'\n})\nexport class CommunityPharmacyEditComponent implements OnInit {\n    entity: CommunityPharmacy;\n    state: any;\n    states: any[] = [];\n    lgas: any[] = [];\n    isSaving: boolean;\n\n    constructor(private service: CommunityPharmacyService,\n                protected notification: NotificationService,\n                private facilityService: FacilityService,\n                protected activatedRoute: ActivatedRoute,\n                private appLoaderService: AppLoaderService) {\n    }\n\n    createEntity(): CommunityPharmacy {\n        return <CommunityPharmacy>{};\n    }\n\n    ngOnInit(): void {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n                this.entity.active = true;\n            }\n        });\n\n        this.facilityService.getActive().subscribe((res: any)=> {\n            const  facility: Facility = res.body;\n            this.entity.state = facility.state;\n            this.states.push(this.entity.state);\n            this.stateChange(facility.state.id);\n        })\n    }\n\n    save() {\n        this.isSaving = true;\n        this.appLoaderService.open('Saving Community Pharmacy..');\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.service.update(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.service.create(this.entity));\n        }\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.onSaveError();\n                this.onError(res.message)\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.openSnackMessage('Community Pharmacy successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.appLoaderService.close();\n        //this.submitButton.disabled = true;\n        this.notification.showError('Error occurred saving Community Pharmacy; try again');\n        //this.progressBar.mode = 'determinate';\n    }\n\n    protected onError(errorMessage: string) {\n        this.appLoaderService.close();\n        this.notification.showError(errorMessage);\n    }\n\n    stateChange(id) {\n        this.service.getLgasByState(id).subscribe(res => this.lgas = res)\n    }\n\n    entityCompare(e1, e2) {\n        return entityCompare(e1, e2);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\nimport { CommunityPharmacy } from '../model/community-pharmacy.model';\nimport { CommunityPharmacyService } from './community-pharmacy.service';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { HttpResponse } from '@angular/common/http';\nimport { CommunityPharmacyListComponent } from '../components/community-pharmacy/community-pharmacy-list.component';\nimport { CommunityPharmacyDetailsComponent } from '../components/community-pharmacy/community-pharmacy.details.component';\nimport { CommunityPharmacyEditComponent } from '../components/community-pharmacy/community-pharmacy.edit.component';\n\n@Injectable()\nexport class CommunityPharmacyResolve implements Resolve<CommunityPharmacy> {\n    constructor(private service: CommunityPharmacyService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<CommunityPharmacy> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(\n                filter((response: HttpResponse<CommunityPharmacy>) => response.ok),\n                map((patient: HttpResponse<CommunityPharmacy>) => patient.body)\n            );\n        }\n        return of(<CommunityPharmacy>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Community Pharmacies',\n            breadcrumb: 'COMMUNITY PHARMACIES'\n        },\n        children: [\n            {\n                path: '',\n                component: CommunityPharmacyListComponent,\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Community Pharmacies',\n                    breadcrumb: 'COMMUNITY PHARMACIES'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/view',\n                component: CommunityPharmacyDetailsComponent,\n                resolve: {\n                    entity: CommunityPharmacyResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Community Pharmacy',\n                    breadcrumb: 'COMMUNITY PHARMACY'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'new',\n                component: CommunityPharmacyEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Add Community Pharmacy',\n                    breadcrumb: 'ADD COMMUNITY PHARMACY'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/edit',\n                component: CommunityPharmacyEditComponent,\n                resolve: {\n                    entity: CommunityPharmacyResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Community Pharmacy Edit',\n                    breadcrumb: 'COMMUNITY PHARMACY EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { CommunityPharmacyResolve, ROUTES } from './services/cp.routes';\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatDividerModule,\n    MatIconModule,\n    MatInputModule,\n    MatSelectModule\n} from '@angular/material';\nimport { CommunityPharmacyDetailsComponent } from './components/community-pharmacy/community-pharmacy.details.component';\nimport { CommunityPharmacyEditComponent } from './components/community-pharmacy/community-pharmacy.edit.component';\nimport { CommunityPharmacyListComponent } from './components/community-pharmacy/community-pharmacy-list.component';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LamisCoreModule } from '@lamis/web-core';\nimport { CovalentCommonModule, CovalentDialogsModule } from '@covalent/core';\n\n@NgModule({\n    declarations: [\n        CommunityPharmacyDetailsComponent,\n        CommunityPharmacyEditComponent,\n        CommunityPharmacyListComponent\n    ],\n    imports: [\n        CommonModule,\n        MatInputModule,\n        MatIconModule,\n        MatDividerModule,\n        MatCardModule,\n        MatSelectModule,\n        MatButtonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        CoreModule,\n        CovalentCommonModule,\n        CovalentDialogsModule,\n        NgbModule,\n        LamisCoreModule\n    ],\n    exports: [\n    ],\n    providers: [\n        CommunityPharmacyResolve\n    ]\n})\nexport class CommunityPharmacyModule {\n\n}\n","/*\n * Public API Surface of Patient\n */\nexport * from './lib/services/facility.service';\nexport * from './lib/facility.module';\nexport * from './lib/community-pharmacy.module'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {CommunityPharmacyListComponent as ɵf} from './lib/components/community-pharmacy/community-pharmacy-list.component';\nexport {CommunityPharmacyDetailsComponent as ɵc} from './lib/components/community-pharmacy/community-pharmacy.details.component';\nexport {CommunityPharmacyEditComponent as ɵe} from './lib/components/community-pharmacy/community-pharmacy.edit.component';\nexport {FacilityComponent as ɵa} from './lib/components/facility/facility.component';\nexport {CommunityPharmacyService as ɵd} from './lib/services/community-pharmacy.service';\nexport {CommunityPharmacyResolve as ɵg,ROUTES as ɵh} from './lib/services/cp.routes';\nexport {ROUTES as ɵb} from './lib/services/facility.routes';"],"names":["tslib_1.__param","ROUTES"],"mappings":"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"}
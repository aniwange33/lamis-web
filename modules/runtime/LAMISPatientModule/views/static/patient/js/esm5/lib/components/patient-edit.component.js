import * as tslib_1 from "tslib";
import {Component} from '@angular/core';
import {PatientService} from '../services/patient.service';
import {NotificationService} from '@alfresco/adf-core';
import {ActivatedRoute} from '@angular/router';
import * as moment_ from 'moment';
import {AppLoaderService, entityCompare} from '@lamis/web-core';
import {FormBuilder} from '@angular/forms';

var moment = moment_;
var PatientEditComponent = /** @class */ (function () {
    function PatientEditComponent(patientService, notification, loaderService, activatedRoute, formBuilder) {
        this.patientService = patientService;
        this.notification = notification;
        this.loaderService = loaderService;
        this.activatedRoute = activatedRoute;
        this.formBuilder = formBuilder;
        this.template = 'patient-edit';
        this.error = false;
        this.today = moment();
        this.minDob = moment().subtract(75, 'years');
        this.minDateRegistration = moment('2008', 'YYYY');
        this.maxDateBirth = moment().subtract(2, 'months');
        this.maxDateConfirmed = moment();
        this.minDateConfirmed = moment('2008', 'YYYY');
    }

    PatientEditComponent.prototype.createEntity = function () {
        return {};
    };
    PatientEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.patientService.getActiveFacility().subscribe(function (res) {
            _this.entity.facility = res;
        });
        this.isSaving = false;
        this.activatedRoute.data.subscribe(function (_a) {
            var entity = _a.entity;
            _this.entity = !!entity && entity.body ? entity.body : entity;
            if (_this.entity === undefined) {
                _this.entity = _this.createEntity();
            }
            if (_this.entity.id && _this.entity.lga) {
                _this.minDateRegistration = _this.entity.dateBirth.clone().add(2, 'month');
                _this.minDateConfirmed = _this.entity.dateBirth.clone().add(1, 'month');
                _this.patientService.getStateByLga(_this.entity.lga.id).subscribe(function (res) {
                    _this.state = res;
                    _this.stateChange(_this.state.id);
                });
            }
        });
        this.patientService.getStates().subscribe(function (res) {
            return _this.states = res;
        });
    };
    PatientEditComponent.prototype.entityCompare = function (e1, e2) {
        return entityCompare(e1, e2);
    };
    PatientEditComponent.prototype.estimateDob = function () {
        if (this.age && this.ageUnit && this.entity.dateRegistration) {
            var dateRegistration = this.entity.dateRegistration;
            this.entity.dateBirth = dateRegistration.clone().subtract(this.age, this.ageUnit);
            this.minDateConfirmed = this.entity.dateBirth.clone().add(1, 'months');
        }
    };
    PatientEditComponent.prototype.stateChange = function (id) {
        var _this = this;
        this.patientService.getLgasByState(id).subscribe(function (res) {
            return _this.lgas = res;
        });
    };
    PatientEditComponent.prototype.previousState = function () {
        window.history.back();
    };
    PatientEditComponent.prototype.dateBirthChanged = function (date) {
        this.minDateRegistration = date.clone().add(2, 'months');
        this.minDateConfirmed = date.clone().add(1, 'months');
        if (this.minDateRegistration.isBefore(moment('2008', 'YYYY'), 'day')) {
            this.minDateRegistration = moment('2008', 'YYYY');
            this.minDateConfirmed = moment('2008', 'YYYY');
        }
    };
    PatientEditComponent.prototype.dateRegistrationChanged = function (date) {
        this.maxDateBirth = date.clone().subtract(2, 'months');
        this.maxDateConfirmed = date.clone();
    };
    PatientEditComponent.prototype.save = function () {
        //this.progressBar.mode = 'indeterminate';
        this.loaderService.open('Saving patient...');
        this.isSaving = true;
        if (!this.entity.id) {
            if (this.entity.dobEstimated) {
                this.entity.dateBirth = this.entity.dateRegistration.clone().subtract(this.age, this.ageUnit);
            }
            this.subscribeToSaveResponse(this.patientService.create(this.entity));
        } else {
            this.subscribeToSaveResponse(this.patientService.update(this.entity));
        }
    };
    PatientEditComponent.prototype.subscribeToSaveResponse = function (result) {
        var _this = this;
        this.loaderService.close();
        result.subscribe(function (res) {
            return _this.onSaveSuccess(res.body);
        }, function (res) {
            _this.onSaveError();
            _this.onError(res.message);
        });
    };
    PatientEditComponent.prototype.onSaveSuccess = function (result) {
        this.isSaving = false;
        this.notification.openSnackMessage('Patient successfully saved');
        this.previousState();
    };
    PatientEditComponent.prototype.onSaveError = function () {
        this.isSaving = false;
        this.error = true;
        //this.progressBar.mode = 'determinate';
    };
    PatientEditComponent.prototype.onError = function (errorMessage) {
        this.notification.showError(errorMessage);
    };
    PatientEditComponent.ctorParameters = function () {
        return [
            {type: PatientService},
            {type: NotificationService},
            {type: AppLoaderService},
            {type: ActivatedRoute},
            {type: FormBuilder}
        ];
    };
    PatientEditComponent = tslib_1.__decorate([
        Component({
            selector: 'lamis-patient-edit',
            template: "<div class=\"lamis-edit-form\">\r\n    <div class=\"lamis-edit-form-container\">\r\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #patientForm=\"ngForm\">\r\n            <mat-card class=\"default\">\r\n                <mat-card-content>\r\n                    <mat-divider></mat-divider>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Hospital Number</mat-label>\r\n                                <input matInput [(ngModel)]=\"entity.hospitalNum\" #hospitalNum=\"ngModel\"\r\n                                       [required]=\"!entity.id\"\r\n                                       uniqueHospitalNum\r\n                                       [disabled]=\"!!entity.id\"\r\n                                       name=\"hospitalNum\"/>\r\n                                <mat-error\r\n                                        *ngIf=\"hospitalNum.errors && (hospitalNum.dirty || hospitalNum.touched) && (hospitalNum.errors.required)\">\r\n                                    Hospital Number is required\r\n                                </mat-error>\r\n                                <mat-error\r\n                                        *ngIf=\"hospitalNum.errors && (hospitalNum.dirty || hospitalNum.touched) && (hospitalNum.errors.numberExists)\">\r\n                                    Hospital Number is used by another patient\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Unique ID</mat-label>\r\n                                <input matInput [(ngModel)]=\"entity.uniqueId\" name=\"uniqueId\"/>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\" *ngIf=\"!!minDateRegistration\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <input matInput [matDatepicker]=\"picker\"\r\n                                       placeholder=\"Date of Registration/Transfer-In\"\r\n                                       [(ngModel)]=\"entity.dateRegistration\"\r\n                                       #registration=\"ngModel\"\r\n                                       [max]=\"today\"\r\n                                       [min]=\"minDateRegistration\"\r\n                                       (dateChange)=\"dateRegistrationChanged($event.value)\"\r\n                                       name=\"registration\"\r\n                                       required>\r\n                                <mat-datepicker-toggle\r\n                                        matSuffix\r\n                                        [for]=\"picker\">\r\n                                </mat-datepicker-toggle>\r\n                                <mat-datepicker #picker></mat-datepicker>\r\n                                <mat-error\r\n                                        *ngIf=\"registration.errors && (registration.dirty || registration.touched) && (registration.errors.required)\">\r\n                                    Date of Registration is required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Surname</mat-label>\r\n                                <input matInput [(ngModel)]=\"entity.surname\" #sn=\"ngModel\"\r\n                                       required\r\n                                       [minLength]=\"2\"\r\n                                       name=\"sn\"/>\r\n                                <mat-error\r\n                                        *ngIf=\"sn.errors && (sn.dirty || sn.touched) && (sn.errors.required)\">\r\n                                    Surname is required\r\n                                </mat-error>\r\n                                <mat-error\r\n                                        *ngIf=\"sn.errors && (sn.dirty || sn.touched) && (sn.errors.minLength)\">\r\n                                    Minimum length for Surname is 2 characters\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Other Names</mat-label>\r\n                                <input matInput [(ngModel)]=\"entity.otherNames\" #on=\"ngModel\"\r\n                                       required\r\n                                       [minLength]=\"5\"\r\n                                       name=\"on\"/>\r\n                                <mat-error\r\n                                        *ngIf=\"on.errors && (on.dirty || on.touched) && (on.errors.required)\">\r\n                                    Other Names required\r\n                                </mat-error>\r\n                                <mat-error\r\n                                        *ngIf=\"on.errors && (on.dirty || on.touched) && (on.errors.minLength)\">\r\n                                    Minimum length for Other Names is 5 characters\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div *ngIf=\"!entity.id\">\r\n                        <fieldset>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-md-6\">\r\n                                    <mat-checkbox [(ngModel)]=\"entity.dobEstimated\" name=\"est\">Age Estimated?\r\n                                    </mat-checkbox>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div *ngIf=\"entity.dobEstimated\" class=\"row\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <mat-form-field class=\"full-width\">\r\n                                                <mat-label>Age at Registration</mat-label>\r\n                                                <input matInput [(ngModel)]=\"age\" required\r\n                                                       [min]=\"2\"\r\n                                                       [max]=\"70\"\r\n                                                       (change)=\"estimateDob()\"\r\n                                                       name=\"age\" #age1=\"ngModel\">\r\n                                                <mat-error\r\n                                                        *ngIf=\"age1.errors && (age1.dirty || age1.touched) && (age1.errors.min)\">\r\n                                                    Minimum age is 2\r\n                                                </mat-error>\r\n                                                <mat-error\r\n                                                        *ngIf=\"age1.errors && (age1.dirty || age1.touched) && (age1.errors.max)\">\r\n                                                    Maximum age is 70\r\n                                                </mat-error>\r\n                                                <mat-error\r\n                                                        *ngIf=\"age1.errors && (age1.dirty || age1.touched) && (age1.errors.required)\">\r\n                                                    Estimated age is required\r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                        <div class=\"col-md-6\">\r\n                                            <mat-form-field class=\"full-width\">\r\n                                                <mat-label>Age Units</mat-label>\r\n                                                <mat-select [(ngModel)]=\"ageUnit\"\r\n                                                            (selectionChange)=\"estimateDob()\"\r\n                                                            required name=\"units\" #units=\"ngModel\">\r\n                                                    <mat-option></mat-option>\r\n                                                    <mat-option [value]=\"'years'\">Year(s)</mat-option>\r\n                                                    <mat-option [value]=\"'months'\">Month(s)</mat-option>\r\n                                                </mat-select>\r\n                                                <mat-error\r\n                                                        *ngIf=\"units.errors && (units.dirty || units.touched) && (units.errors.required)\">\r\n                                                    Age units is required\r\n                                                </mat-error>\r\n                                            </mat-form-field>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <mat-form-field class=\"full-width\" *ngIf=\"!entity.dobEstimated\">\r\n                                            <input matInput [matDatepicker]=\"picker1\"\r\n                                                   placeholder=\"Date of Birth\"\r\n                                                   [(ngModel)]=\"entity.dateBirth\"\r\n                                                   [min]=\"minDob\"\r\n                                                   (dateChange)=\"dateBirthChanged($event.value)\"\r\n                                                   required\r\n                                                   [max]=\"maxDateBirth\"\r\n                                                   #dob1=\"ngModel\"\r\n                                                   name=\"dob\">\r\n                                            <mat-datepicker-toggle\r\n                                                    matSuffix\r\n                                                    [for]=\"picker1\">\r\n                                            </mat-datepicker-toggle>\r\n                                            <mat-datepicker #picker1></mat-datepicker>\r\n                                            <mat-error\r\n                                                    *ngIf=\"dob1.errors && (dob1.dirty || dob1.touched) && (dob1.errors.required)\">\r\n                                                Date of Birth is required\r\n                                            </mat-error>\r\n                                        </mat-form-field>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                    </div>\r\n                    <div *ngIf=\"entity.id\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field class=\"full-width\" *ngIf=\"minDob\">\r\n                                    <input matInput [matDatepicker]=\"picker2\"\r\n                                           placeholder=\"Date of Birth\"\r\n                                           [(ngModel)]=\"entity.dateBirth\"\r\n                                           #birth=\"ngModel\"\r\n                                           (dateChange)=\"dateBirthChanged($event.value)\"\r\n                                           [max]=\"maxDateBirth\"\r\n                                           [min]=\"minDob\"\r\n                                           name=\"dob\"\r\n                                           required>\r\n                                    <mat-datepicker-toggle\r\n                                            matSuffix\r\n                                            [for]=\"picker2\">\r\n                                    </mat-datepicker-toggle>\r\n                                    <mat-datepicker #picker2></mat-datepicker>\r\n                                    <mat-error\r\n                                            *ngIf=\"birth.errors && (birth.dirty || birth.touched) && (birth.errors.required)\">\r\n                                        Date of Birth is required\r\n                                    </mat-error>\r\n                                    <mat-error\r\n                                            *ngIf=\"birth.errors && (birth.dirty || birth.touched) && (birth.errors.max)\">\r\n                                        Date of Birth cannot be after Date of Registration\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Gender</mat-label>\r\n                                <mat-select [(ngModel)]=\"entity.gender\"\r\n                                            required name=\"gender\" #gender=\"ngModel\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option [value]=\"'FEMALE'\">Female</mat-option>\r\n                                    <mat-option [value]=\"'MALE'\">Male</mat-option>\r\n                                </mat-select>\r\n                                <mat-error\r\n                                        *ngIf=\"gender.errors && (gender.dirty || gender.touched) && (gender.errors.required)\">\r\n                                    Gender is required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Marital Status</mat-label>\r\n                                <mat-select [(ngModel)]=\"entity.maritalStatus\"\r\n                                            required name=\"status\" #status=\"ngModel\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option [value]=\"'Single'\">Single</mat-option>\r\n                                    <mat-option [value]=\"'Married'\">Married</mat-option>\r\n                                    <mat-option [value]=\"'Widowed'\">Widowed</mat-option>\r\n                                    <mat-option [value]=\"'Separated'\">Separated</mat-option>\r\n                                    <mat-option [value]=\"'Divorced'\">Divorced</mat-option>\r\n                                </mat-select>\r\n                                <mat-error\r\n                                        *ngIf=\"status.errors && (status.dirty || status.touched) && (status.errors.required)\">\r\n                                    Marital Status is required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Job /Occupation Status</mat-label>\r\n                                <mat-select name=\"occupation\" [(ngModel)]=\"entity.occupation\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option [value]=\"'Unemployed'\">Unemployed</mat-option>\r\n                                    <mat-option [value]=\"'Employed'\">Employed</mat-option>\r\n                                    <mat-option [value]=\"'Student'\">Student</mat-option>\r\n                                    <mat-option [value]=\"'Retired'\">Retired</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Educational Level</mat-label>\r\n                                <mat-select name=\"education\" [(ngModel)]=\"entity.education\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option [value]=\"'None'\">None</mat-option>\r\n                                    <mat-option [value]=\"'Primary'\">Primary</mat-option>\r\n                                    <mat-option [value]=\"'Senior Secondary'\">Senior Secondary</mat-option>\r\n                                    <mat-option [value]=\"'Quranic'\">Quranic</mat-option>\r\n                                    <mat-option [value]=\"'Junior Secondary'\">Junior Secondary</mat-option>\r\n                                    <mat-option [value]=\"'Post Secondary'\">Post Secondary</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>State of Residence</mat-label>\r\n                                <mat-select name=\"state\" [(ngModel)]=\"state\"\r\n                                            [compareWith]=\"entityCompare\"\r\n                                            (selectionChange)=\"stateChange($event.value.id)\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state.name}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>LGA of Residence</mat-label>\r\n                                <mat-select name=\"lga\" [(ngModel)]=\"entity.lga\" required #lga=\"ngModel\"\r\n                                            [compareWith]=\"entityCompare\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option *ngFor=\"let lga of lgas\" [value]=\"lga\">{{lga.name}}</mat-option>\r\n                                </mat-select>\r\n                                <mat-error\r\n                                        *ngIf=\"lga.errors && (lga.dirty || lga.touched) && (lga.errors.required)\">\r\n                                    LGA of Residence is required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label class=\"form-label\">Address</mat-label>\r\n                                <textarea name=\"address\" matInput [(ngModel)]=\"entity.address\"\r\n                                          rows=\"3\"\r\n                                          required #address=\"ngModel\"></textarea>\r\n                                <mat-error\r\n                                        *ngIf=\"address.errors && (address.dirty || address.touched) && (address.errors.required)\">\r\n                                    Address is required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Telephone Number</mat-label>\r\n                                <input matInput name=\"phone\" phoneNumber [(ngModel)]=\"entity.phone\" #phone=\"ngModel\"/>\r\n                                <mat-error\r\n                                        *ngIf=\"phone.errors && (phone.dirty || phone.touched) && (phone.errors.invalidPhone)\">\r\n                                    Invalid phone number\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Care Entry Point</mat-label>\r\n                                <mat-select name=\"entryPoint\" [(ngModel)]=\"entity.entryPoint\"\r\n                                            #entryPoint=\"ngModel\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option [value]=\"'OPD'\">OPD</mat-option>\r\n                                    <mat-option [value]=\"'In-patient'\">In-patient</mat-option>\r\n                                    <mat-option [value]=\"'HCT'\">HCT</mat-option>\r\n                                    <mat-option [value]=\"'TB DOTS'\">TB DOTS</mat-option>\r\n                                    <mat-option [value]=\"'STI Clinic'\">STI Clinic</mat-option>\r\n                                    <mat-option [value]=\"'PMTCT'\">PMTCT</mat-option>\r\n                                    <mat-option [value]=\"'Transfer-in'\">Transfer-in</mat-option>\r\n                                    <mat-option [value]=\"'Outreach'\">Outreach</mat-option>\r\n                                    <mat-option [value]=\"'CBO'\">CBO</mat-option>\r\n                                    <mat-option [value]=\"'Others'\">Others</mat-option>\r\n                                </mat-select>\r\n                                <mat-error\r\n                                        *ngIf=\"entryPoint.errors && (entryPoint.dirty || entryPoint.touched) && (entryPoint.errors.required)\">\r\n                                    Care Entry Point is required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\" *ngIf=\"minDateConfirmed\">\r\n                                <mat-label>Date of Confirmed HIV Test</mat-label>\r\n                                <input matInput [matDatepicker]=\"picker2\"\r\n                                       [(ngModel)]=\"entity.dateConfirmedHiv\"\r\n                                       #time=\"ngModel\"\r\n                                       [max]=\"maxDateConfirmed\"\r\n                                       [min]=\"minDateConfirmed\"\r\n                                       required\r\n                                       name=\"time\">\r\n                                <mat-datepicker-toggle\r\n                                        matSuffix\r\n                                        [for]=\"picker2\">\r\n                                </mat-datepicker-toggle>\r\n                                <mat-datepicker #picker2></mat-datepicker>\r\n                                <mat-error\r\n                                        *ngIf=\"time.errors && (time.dirty || time.touched) && (time.errors.required)\">\r\n                                    Date of Confirmed HIV Test is required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\" *ngIf=\"entity.gender === 'FEMALE'\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Time of HIV Diagnosis</mat-label>\r\n                                <mat-select name=\"timeHivDiagnosis\" [(ngModel)]=\"entity.timeHivDiagnosis\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option [value]=\"'Previous - Non pregnant'\">Previous - Non pregnant</mat-option>\r\n                                    <mat-option [value]=\"'Previous pregnancy (ANC)'\">Previous pregnancy (ANC)\r\n                                    </mat-option>\r\n                                    <mat-option [value]=\"'Previous pregnancy (L&amp;D)'\">Previous pregnancy (L&amp;D)\r\n                                    </mat-option>\r\n                                    <mat-option [value]=\"'Previous pregnancy (PP &lt;72hrs)'\">Previous pregnancy (PP\r\n                                        &lt;72hrs)\r\n                                    </mat-option>\r\n                                    <mat-option [value]=\"'ANC'\">ANC</mat-option>\r\n                                    <mat-option [value]=\"'Labour'\">Labour</mat-option>\r\n                                    <mat-option [value]=\"'Post Partum &lt;=72hrs'\">Post Partum &lt;=72hrs</mat-option>\r\n                                    <mat-option [value]=\"'Post Partum &gt;72hrs'\">Post Partum &gt;72hrs</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Date enrolled into PMTCT</mat-label>\r\n                                <input matInput [matDatepicker]=\"picker3\"\r\n                                       [(ngModel)]=\"entity.dateEnrolledPMTCT\"\r\n                                       #pmtct=\"ngModel\"\r\n                                       [max]=\"entity.dateRegistration\"\r\n                                       [min]=\"entity.dateBirth\"\r\n                                       name=\"pmtct\">\r\n                                <mat-datepicker-toggle\r\n                                        matSuffix\r\n                                        [for]=\"picker3\">\r\n                                </mat-datepicker-toggle>\r\n                                <mat-datepicker #picker3></mat-datepicker>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\" *ngIf=\"entity.gender === 'FEMALE'\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Pregnancy Status</mat-label>\r\n                                <mat-select name=\"pregnancyStatus\" [(ngModel)]=\"entity.pregnancyStatus\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option value=\"1\">Not Pregnant</mat-option>\r\n                                    <mat-option value=\"2\">Pregnant</mat-option>\r\n                                    <mat-option value=\"3\">Breastfeeding</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Source of Referral</mat-label>\r\n                                <mat-select name=\"sourceReferral\" [(ngModel)]=\"entity.sourceReferral\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option [value]=\"'PMTCT outreach'\">PMTCT outreach</mat-option>\r\n                                    <mat-option [value]=\"'Sex worker outreach'\">Sex worker outreach</mat-option>\r\n                                    <mat-option [value]=\"'Medical outpatient'\">Medical outpatient</mat-option>\r\n                                    <mat-option [value]=\"'Youth/Adolescent outreach'\">Youth/Adolescent outreach\r\n                                    </mat-option>\r\n                                    <mat-option [value]=\"'Private/Commercial Health facility'\">Private/Commercial Health\r\n                                        facility\r\n                                    </mat-option>\r\n                                    <mat-option [value]=\"'Under-fives/Immunization clinic'\">Under-fives/Immunization\r\n                                        clinic\r\n                                    </mat-option>\r\n                                    <mat-option [value]=\"'External HCT centre'\">External HCT centre</mat-option>\r\n                                    <mat-option [value]=\"'CBO'\">CBO</mat-option>\r\n                                    <mat-option [value]=\"'In-patients'\">In-patients</mat-option>\r\n                                    <mat-option [value]=\"'Self-referral'\">Self-referral</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Enrollment Setting</mat-label>\r\n                                <mat-select name=\"enrollmentSetting\" [(ngModel)]=\"entity.enrollmentSetting\"\r\n                                            required #setting=\"ngModel\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option [value]=\"'Facility'\">Facility</mat-option>\r\n                                    <mat-option [value]=\"'Community'\">Community</mat-option>\r\n                                </mat-select>\r\n                                <mat-error\r\n                                        *ngIf=\"setting.errors && (setting.dirty || setting.touched) && (setting.errors.required)\">\r\n                                    Enrollment Setting is required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>HIV Status at Registration</mat-label>\r\n                                <mat-select name=\"statusRegistration\" [(ngModel)]=\"entity.statusAtRegistration\"\r\n                                            required #status=\"ngModel\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option [value]=\"'HIV_EXPOSED_STATUS_UNKNOWN'\">HIV Exposed Status Unknown\r\n                                    </mat-option>\r\n                                    <mat-option [value]=\"'HIV_PLUS_NON_ART'\">HIV+ non ART</mat-option>\r\n                                    <mat-option [value]=\"'ART_TRANSFER_IN'\">ART Transfer In</mat-option>\r\n                                    <mat-option [value]=\"'PRE_ART_TRANSFER_IN'\">Pre-ART Transfer In</mat-option>\r\n                                </mat-select>\r\n                                <mat-error\r\n                                        *ngIf=\"status.errors && (status.dirty || status.touched) && (status.errors.required)\">\r\n                                    HIV Status at Registration is required\r\n                                </mat-error>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>TB Status</mat-label>\r\n                                <mat-select name=\"tbStatus\" [(ngModel)]=\"entity.tbStatus\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option [value]=\"'No sign or symptoms of TB'\">No sign or symptoms of TB\r\n                                    </mat-option>\r\n                                    <mat-option [value]=\"'TB suspected and referred for evaluation'\">TB suspected and\r\n                                        referred for evaluation\r\n                                    </mat-option>\r\n                                    <mat-option [value]=\"'Currently on INH prophylaxis'\">Currently on INH prophylaxis\r\n                                    </mat-option>\r\n                                    <mat-option [value]=\"'Currently on TB treatment'\">Currently on TB treatment\r\n                                    </mat-option>\r\n                                    <mat-option [value]=\"'TB positive not on TB drugs'\">TB positive not on TB drugs\r\n                                    </mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <fieldset>\r\n                        <legend>Next of kin/Treatment Supporter</legend>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field class=\"full-width\">\r\n                                    <mat-label>Name</mat-label>\r\n                                    <input matInput name=\"nextKin\" [(ngModel)]=\"entity.nextOfKin\"/>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field class=\"full-width\">\r\n                                    <mat-label>Relationship</mat-label>\r\n                                    <mat-select name=\"relationKin\" [(ngModel)]=\"entity.nextOfKinRelationship\">\r\n                                        <mat-option></mat-option>\r\n                                        <mat-option [value]=\"'Aunt'\">Aunt</mat-option>\r\n                                        <mat-option [value]=\"'Brother'\">Brother</mat-option>\r\n                                        <mat-option [value]=\"'Cousin'\">Cousin</mat-option>\r\n                                        <mat-option [value]=\"'Daughter'\">Daughter</mat-option>\r\n                                        <mat-option [value]=\"'Father'\">Father</mat-option>\r\n                                        <mat-option [value]=\"'Friend'\">Friend</mat-option>\r\n                                        <mat-option [value]=\"'Grand parent'\">Grand parent</mat-option>\r\n                                        <mat-option [value]=\"'Mother'\">Mother</mat-option>\r\n                                        <mat-option [value]=\"'Sister'\">Sister</mat-option>\r\n                                        <mat-option [value]=\"'Son'\">Son</mat-option>\r\n                                        <mat-option [value]=\"'Spouse'\">Spouse</mat-option>\r\n                                        <mat-option [value]=\"'Treatment Supporter'\">Treatment Supporter</mat-option>\r\n                                        <mat-option [value]=\"'Uncle'\">Uncle</mat-option>\r\n                                    </mat-select>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field class=\"full-width\">\r\n                                    <mat-label>Address</mat-label>\r\n                                    <input matInput name=\"addressKin\" [(ngModel)]=\"entity.nextOfKinAddress\"/>\r\n                                </mat-form-field>\r\n                            </div>\r\n                            <div class=\"col-md-6\">\r\n                                <mat-form-field class=\"full-width\">\r\n                                    <mat-label>Telephone Number</mat-label>\r\n                                    <input matInput name=\"phoneKin\" phoneNumber [(ngModel)]=\"entity.nextOfKinPhone\" #phone1=\"ngModel\"/>\r\n                                    <mat-error\r\n                                            *ngIf=\"phone1.errors && (phone1.dirty || phone1.touched) && (phone1.errors.invalidPhone)\">\r\n                                        Invalid phone number\r\n                                    </mat-error>\r\n                                </mat-form-field>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </mat-card-content>\r\n                <mat-card-actions class=\"lamis-edit-form-actions\">\r\n                    <button mat-button type=\"button\" (click)=\"previousState()\">Back</button>\r\n                    <button mat-raised-button color=\"primary\" (click)=\"save()\"\r\n                            [disabled]=\"patientForm.invalid || isSaving\">{{entity.id ? 'Update' : 'Save'}}\r\n                    </button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </form>\r\n    </div>\r\n</div>\r\n"
        }),
        tslib_1.__metadata("design:paramtypes", [PatientService,
            NotificationService,
            AppLoaderService,
            ActivatedRoute,
            FormBuilder])
    ], PatientEditComponent);
    return PatientEditComponent;
}());
export {PatientEditComponent};
//# sourceMappingURL=data:application/json;base64,

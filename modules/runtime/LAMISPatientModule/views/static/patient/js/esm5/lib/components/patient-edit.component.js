import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { PatientService } from '../services/patient.service';
import { NotificationService } from '@alfresco/adf-core';
import { ActivatedRoute } from '@angular/router';
import * as moment_ from 'moment';
import { AppLoaderService, DATE_FORMAT, entityCompare } from '@lamis/web-core';
import { TdDialogService } from '@covalent/core';
import { NgForm } from '@angular/forms';
var moment = moment_;
var PatientEditComponent = /** @class */ (function () {
    function PatientEditComponent(patientService, notification, loaderService, _dialogService, activatedRoute) {
        this.patientService = patientService;
        this.notification = notification;
        this.loaderService = loaderService;
        this._dialogService = _dialogService;
        this.activatedRoute = activatedRoute;
        this.template = 'patient-edit';
        this.ovc = {};
        this.error = false;
        this.today = moment();
        this.minDob = moment().subtract(75, 'years');
        this.minDateRegistration = moment('1998', 'YYYY');
        this.maxDateBirth = moment().subtract(2, 'months');
        this.maxDateConfirmed = moment();
        this.minDateConfirmed = moment('1998', 'YYYY');
        this.ovcApplicable = false;
        this.prep = false;
    }
    PatientEditComponent.prototype.createEntity = function () {
        return {};
    };
    PatientEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.patientService.getActiveFacility().subscribe(function (res) {
            _this.entity.facility = res;
        });
        this.isSaving = false;
        this.activatedRoute.data.subscribe(function (_a) {
            var entity = _a.entity;
            _this.entity = !!entity && entity.body ? entity.body : entity;
            if (_this.entity === undefined) {
                _this.entity = _this.createEntity();
                _this.entity.extra = {
                    art: true
                };
            }
            if (_this.entity.id) {
                _this.ovcMin = _this.entity.dateBirth.clone();
            }
            if (_this.entity.id && _this.entity.lga) {
                _this.minDateRegistration = _this.entity.dateBirth.clone().add(2, 'month');
                _this.minDateConfirmed = _this.entity.dateBirth.clone().add(1, 'month');
                _this.patientService.getStateByLga(_this.entity.lga.id).subscribe(function (res) {
                    _this.state = res;
                    _this.stateChange(_this.state.id);
                });
            }
            if (_this.entity.extra) {
                _this.targetGroup = _this.entity.extra.targetGroup;
            }
            if (_this.entity.extra && _this.entity.extra.prep) {
                _this.prep = true;
                _this.indicationForPrep = _this.entity.extra.prep.indicationForPrep;
                _this.prepId = _this.entity.extra.prep.prepId;
                _this.onDemandIndication = _this.entity.extra.prep.onDemandIndication;
            }
            if (_this.entity.extra && _this.entity.extra.ovc) {
                _this.ovc.householdUniqueNo = _this.entity.extra.ovc.householdUniqueNo;
                _this.ovc.referredTo = _this.entity.extra.ovc.referredTo;
                _this.ovc.referredFrom = _this.entity.extra.ovc.referredFrom;
                if (!!_this.entity.extra.ovc.dateReferredTo) {
                    _this.ovc.dateReferredTo = moment(_this.entity.extra.ovc.dateReferredTo);
                }
                if (!!_this.entity.extra.ovc.dateReferredFrom) {
                    _this.ovc.dateReferredFrom = moment(_this.entity.extra.ovc.dateReferredFrom);
                }
                if (!_this.entity.extra.ovc.servicesProvided) {
                    _this.ovc.servicesProvided = [];
                }
            }
            var date = _this.entity.dateBirth && _this.entity.dateBirth.clone() || moment('1998-01-01', 'YYYY-MM-DD');
            if (!moment().subtract(17, 'years').isAfter(date)) {
                _this.ovcApplicable = true;
            }
            _this.patientForm.form.setErrors({ 'invalid': true });
            _this.patientForm.form.markAllAsTouched();
        });
        this.patientService.getStates().subscribe(function (res) { return _this.states = res; });
    };
    PatientEditComponent.prototype.entityCompare = function (e1, e2) {
        return entityCompare(e1, e2);
    };
    PatientEditComponent.prototype.estimateDob = function () {
        if (this.age && this.ageUnit && this.entity.dateRegistration) {
            var dateRegistration = this.entity.dateRegistration;
            this.entity.dateBirth = dateRegistration.clone().subtract(this.age, this.ageUnit);
            this.ovcMin = this.entity.dateBirth.clone();
            this.minDateConfirmed = this.entity.dateBirth.clone().add(1, 'months');
            this.ovcApplicable = !this.entity.dateRegistration.clone().subtract(17, 'years').isAfter(this.entity.dateBirth);
        }
    };
    PatientEditComponent.prototype.stateChange = function (id) {
        var _this = this;
        this.patientService.getLgasByState(id).subscribe(function (res) { return _this.lgas = res; });
    };
    PatientEditComponent.prototype.statusChanged = function () {
        this.prep = this.entity.statusAtRegistration === 'HIV_NEGATIVE';
        if (this.prep) {
            this.entity.extra['art'] = false;
            this.entity.extra.prep = {
                registered: true
            };
        }
        else {
            this.entity.extra['art'] = true;
            this.entity.extra.prep = {
                registered: false
            };
        }
    };
    PatientEditComponent.prototype.previousState = function () {
        window.history.back();
    };
    PatientEditComponent.prototype.dateBirthChanged = function (date) {
        this.minDateRegistration = date.clone().add(2, 'months');
        this.minDateConfirmed = date.clone().add(1, 'months');
        if (this.minDateRegistration.isBefore(moment('1998', 'YYYY'), 'day')) {
            this.minDateRegistration = moment('1998', 'YYYY');
            this.minDateConfirmed = moment('1998', 'YYYY');
        }
        this.ovcMin = date.clone();
        if (!!this.entity.dateRegistration) {
            this.ovcApplicable = !this.entity.dateRegistration.clone().subtract(17, 'years').isAfter(this.entity.dateBirth);
        }
    };
    PatientEditComponent.prototype.dateRegistrationChanged = function (date) {
        this.maxDateBirth = date.clone().subtract(2, 'months');
        this.maxDateConfirmed = date.clone();
        if (!!this.entity.dateBirth) {
            this.ovcApplicable = !this.entity.dateRegistration.clone().subtract(17, 'years').isAfter(this.entity.dateBirth);
        }
    };
    PatientEditComponent.prototype.save = function () {
        //this.progressBar.mode = 'indeterminate';
        this.isSaving = true;
        if (this.prep) {
            if (!this.entity.extra) {
                this.entity.extra = {};
            }
            this.entity.extra.prep = {
                registered: true,
                prepId: this.prepId,
                indicationForPrep: this.indicationForPrep,
                onDemandIndication: this.onDemandIndication
            };
        }
        else {
            this.entity.extra.prep = {
                registered: false
            };
        }
        if (this.ovcApplicable) {
            if (!this.entity.extra) {
                this.entity.extra = {};
            }
            this.entity.extra.ovc = {};
            this.entity.extra.ovc = this.ovc;
            this.entity.extra.ovc.dateReferredFrom = this.ovc.dateReferredFrom != null && this.ovc.dateReferredFrom.isValid() ?
                this.ovc.dateReferredFrom.format(DATE_FORMAT) : null;
            this.entity.extra.ovc.dateReferredTo = this.ovc.dateReferredTo != null && this.ovc.dateReferredTo.isValid() ?
                this.ovc.dateReferredTo.format(DATE_FORMAT) : null;
            if (!!this.ovc.householdUniqueNo && !(!!this.ovc.referredFrom || !!this.ovc.referredTo)) {
                this._dialogService.openAlert({
                    title: 'OVC Partner is required',
                    message: 'Please indicate either OVC Partner transferred to or from',
                    disableClose: true
                });
                return;
            }
            if ((!!this.ovc.referredTo || !!this.ovc.referredFrom) && !this.ovc.householdUniqueNo) {
                this._dialogService.openAlert({
                    title: 'Household number is required',
                    message: 'Please indicate Household Unique No',
                    disableClose: true
                });
                return;
            }
            if (!!this.ovc.referredFrom && !!this.ovc.referredTo) {
                this._dialogService.openAlert({
                    title: 'OVC Partner mismatch',
                    message: 'Please provide either OVC Partner transfer to or from, not both',
                    disableClose: true
                });
                return;
            }
        }
        if (this.targetGroup) {
            this.entity.extra.targetGroup = this.targetGroup;
        }
        this.loaderService.open('Saving patient...');
        if (!this.entity.id) {
            if (this.entity.dobEstimated) {
                this.entity.dateBirth = this.entity.dateRegistration.clone().subtract(this.age, this.ageUnit);
            }
            this.subscribeToSaveResponse(this.patientService.create(this.entity));
        }
        else {
            this.subscribeToSaveResponse(this.patientService.update(this.entity));
        }
    };
    PatientEditComponent.prototype.subscribeToSaveResponse = function (result) {
        var _this = this;
        this.loaderService.close();
        result.subscribe(function (res) { return _this.onSaveSuccess(res.body); }, function (res) {
            _this.onSaveError();
            _this.onError(res.message);
        });
    };
    PatientEditComponent.prototype.onSaveSuccess = function (result) {
        this.isSaving = false;
        this.notification.showInfo('Patient successfully saved');
        this.previousState();
    };
    PatientEditComponent.prototype.onSaveError = function () {
        this.isSaving = false;
        this.error = true;
        //this.progressBar.mode = 'determinate';
    };
    PatientEditComponent.prototype.onError = function (errorMessage) {
        this.notification.showError(errorMessage);
    };
    PatientEditComponent.prototype.isOVCAge = function () {
        if (this.age && this.ageUnit === 'years') {
            if (this.age >= 10 && this.age <= 24) {
                return true;
            }
        }
        var dob = this.entity.dateBirth.clone();
        var diff = this.entity.dateRegistration.clone().diff(dob);
        return diff >= 10 && diff <= 24;
    };
    PatientEditComponent.ctorParameters = function () { return [
        { type: PatientService },
        { type: NotificationService },
        { type: AppLoaderService },
        { type: TdDialogService },
        { type: ActivatedRoute }
    ]; };
    tslib_1.__decorate([
        ViewChild('patientForm', { static: true }),
        tslib_1.__metadata("design:type", NgForm)
    ], PatientEditComponent.prototype, "patientForm", void 0);
    PatientEditComponent = tslib_1.__decorate([
        Component({
            selector: 'lamis-patient-edit',
            template: "<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #patientForm=\"ngForm\">\n            <mat-card class=\"default\">\n                <mat-card-content>\n                    <mat-divider></mat-divider>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Hospital Number</mat-label>\n                                <input matInput [(ngModel)]=\"entity.hospitalNum\" #hospitalNum=\"ngModel\"\n                                       [required]=\"!entity.id\"\n                                       uniqueHospitalNum\n                                       [disabled]=\"!!entity.id\"\n                                       name=\"hospitalNum\"/>\n                                <mat-error\n                                        *ngIf=\"hospitalNum.errors && (hospitalNum.dirty || hospitalNum.touched) && (hospitalNum.errors.required)\">\n                                    Hospital Number is required\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"hospitalNum.errors && (hospitalNum.dirty || hospitalNum.touched) && (hospitalNum.errors.numberExists)\">\n                                    Hospital Number is used by another patient\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Unique ID</mat-label>\n                                <input matInput [(ngModel)]=\"entity.uniqueId\" name=\"uniqueId\"/>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\" *ngIf=\"!!minDateRegistration\">\n                            <mat-form-field class=\"full-width\">\n                                <input matInput [matDatepicker]=\"picker\"\n                                       placeholder=\"Date of Registration/Transfer-In\"\n                                       [(ngModel)]=\"entity.dateRegistration\"\n                                       #registration=\"ngModel\"\n                                       [max]=\"today\"\n                                       [min]=\"minDateRegistration\"\n                                       (dateChange)=\"dateRegistrationChanged($event.value)\"\n                                       name=\"registration\"\n                                       required>\n                                <mat-datepicker-toggle\n                                        matSuffix\n                                        [for]=\"picker\">\n                                </mat-datepicker-toggle>\n                                <mat-datepicker #picker></mat-datepicker>\n                                <mat-error\n                                        *ngIf=\"registration.errors && (registration.dirty || registration.touched || !!entity.id) && (registration.errors.required)\">\n                                    Date of Registration is required\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"registration.errors && (registration.dirty || registration.touched || !!entity.id) && (registration.errors.min)\">\n                                    Date of Registration cannot be before {{minDateRegistration | date: 'dd MMM, yyyy'}}\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"registration.errors && (registration.dirty || registration.touched || !!entity.id) && (registration.errors.max)\">\n                                    Date of Registration cannot be in the future\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Surname</mat-label>\n                                <input matInput [(ngModel)]=\"entity.surname\" #sn=\"ngModel\"\n                                       required\n                                       [minLength]=\"2\"\n                                       name=\"sn\"/>\n                                <mat-error\n                                        *ngIf=\"sn.errors && (sn.dirty || sn.touched || !!entity.id) && (sn.errors.required)\">\n                                    Surname is required\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"sn.errors && (sn.dirty || sn.touched || !!entity.id) && (sn.errors.minLength)\">\n                                    Minimum length for Surname is 2 characters\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Other Names</mat-label>\n                                <input matInput [(ngModel)]=\"entity.otherNames\" #on=\"ngModel\"\n                                       required\n                                       [minLength]=\"5\"\n                                       name=\"on\"/>\n                                <mat-error\n                                        *ngIf=\"on.errors && (on.dirty || on.touched || !!entity.id) && (on.errors.required)\">\n                                    Other Names required\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"on.errors && (on.dirty || on.touched || !!entity.id) && (on.errors.minLength)\">\n                                    Minimum length for Other Names is 5 characters\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div *ngIf=\"!entity.id\">\n                        <fieldset>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-checkbox [(ngModel)]=\"entity.dobEstimated\" name=\"est\">Age Estimated?\n                                    </mat-checkbox>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <div *ngIf=\"entity.dobEstimated\" class=\"row\">\n                                        <div class=\"col-md-6\">\n                                            <mat-form-field class=\"full-width\">\n                                                <mat-label>Age at Registration</mat-label>\n                                                <input matInput [(ngModel)]=\"age\" required\n                                                       [min]=\"2\"\n                                                       [max]=\"70\"\n                                                       (change)=\"estimateDob()\"\n                                                       name=\"age\" #age1=\"ngModel\">\n                                                <mat-error\n                                                        *ngIf=\"age1.errors && (age1.dirty || age1.touched) && (age1.errors.min)\">\n                                                    Minimum age is 2\n                                                </mat-error>\n                                                <mat-error\n                                                        *ngIf=\"age1.errors && (age1.dirty || age1.touched) && (age1.errors.max)\">\n                                                    Maximum age is 70\n                                                </mat-error>\n                                                <mat-error\n                                                        *ngIf=\"age1.errors && (age1.dirty || age1.touched) && (age1.errors.required)\">\n                                                    Estimated age is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                        <div class=\"col-md-6\">\n                                            <mat-form-field class=\"full-width\">\n                                                <mat-label>Age Units</mat-label>\n                                                <mat-select [(ngModel)]=\"ageUnit\"\n                                                            (selectionChange)=\"estimateDob()\"\n                                                            required name=\"units\" #units=\"ngModel\">\n                                                    <mat-option></mat-option>\n                                                    <mat-option [value]=\"'years'\">Year(s)</mat-option>\n                                                    <mat-option [value]=\"'months'\">Month(s)</mat-option>\n                                                </mat-select>\n                                                <mat-error\n                                                        *ngIf=\"units.errors && (units.dirty || units.touched) && (units.errors.required)\">\n                                                    Age units is required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n                                    </div>\n                                    <div>\n                                        <mat-form-field class=\"full-width\" *ngIf=\"!entity.dobEstimated\">\n                                            <input matInput [matDatepicker]=\"picker1\"\n                                                   placeholder=\"Date of Birth\"\n                                                   [(ngModel)]=\"entity.dateBirth\"\n                                                   [min]=\"minDob\"\n                                                   (dateChange)=\"dateBirthChanged($event.value)\"\n                                                   required\n                                                   [max]=\"maxDateBirth\"\n                                                   #dob1=\"ngModel\"\n                                                   name=\"dob\">\n                                            <mat-datepicker-toggle\n                                                    matSuffix\n                                                    [for]=\"picker1\">\n                                            </mat-datepicker-toggle>\n                                            <mat-datepicker #picker1></mat-datepicker>\n                                            <mat-error\n                                                    *ngIf=\"dob1.errors && (dob1.dirty || dob1.touched) && (dob1.errors.required)\">\n                                                Date of Birth is required\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                            </div>\n                        </fieldset>\n                    </div>\n                    <div *ngIf=\"entity.id\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\" *ngIf=\"minDob\">\n                                    <input matInput [matDatepicker]=\"picker2\"\n                                           placeholder=\"Date of Birth\"\n                                           [(ngModel)]=\"entity.dateBirth\"\n                                           #birth=\"ngModel\"\n                                           (dateChange)=\"dateBirthChanged($event.value)\"\n                                           [max]=\"maxDateBirth\"\n                                           [min]=\"minDob\"\n                                           name=\"dob\"\n                                           required>\n                                    <mat-datepicker-toggle\n                                            matSuffix\n                                            [for]=\"picker2\">\n                                    </mat-datepicker-toggle>\n                                    <mat-datepicker #picker2></mat-datepicker>\n                                    <mat-error\n                                            *ngIf=\"birth.errors && (birth.dirty || birth.touched || !!entity.id) && (birth.errors.required)\">\n                                        Date of Birth is required\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"birth.errors && (birth.dirty || birth.touched || !!entity.id) && (birth.errors.max)\">\n                                        Date of Birth cannot be after Date of Registration\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Gender</mat-label>\n                                <mat-select [(ngModel)]=\"entity.gender\"\n                                            required name=\"gender\" #gender=\"ngModel\">\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'FEMALE'\">Female</mat-option>\n                                    <mat-option [value]=\"'MALE'\">Male</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"gender.errors && (gender.dirty || gender.touched || !!entity.id) && (gender.errors.required)\">\n                                    Gender is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Marital Status</mat-label>\n                                <mat-select [(ngModel)]=\"entity.maritalStatus\"\n                                            required name=\"status\" #status=\"ngModel\">\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'Single'\">Single</mat-option>\n                                    <mat-option [value]=\"'Married'\">Married</mat-option>\n                                    <mat-option [value]=\"'Widowed'\">Widowed</mat-option>\n                                    <mat-option [value]=\"'Separated'\">Separated</mat-option>\n                                    <mat-option [value]=\"'Divorced'\">Divorced</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"status.errors && (status.dirty || status.touched || !!entity.id) && (status.errors.required)\">\n                                    Marital Status is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Job /Occupation Status</mat-label>\n                                <mat-select name=\"occupation\" [(ngModel)]=\"entity.occupation\">\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'Unemployed'\">Unemployed</mat-option>\n                                    <mat-option [value]=\"'Employed'\">Employed</mat-option>\n                                    <mat-option [value]=\"'Student'\">Student</mat-option>\n                                    <mat-option [value]=\"'Retired'\">Retired</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Educational Level</mat-label>\n                                <mat-select name=\"education\" [(ngModel)]=\"entity.education\">\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'None'\">None</mat-option>\n                                    <mat-option [value]=\"'Primary'\">Primary</mat-option>\n                                    <mat-option [value]=\"'Senior Secondary'\">Senior Secondary</mat-option>\n                                    <mat-option [value]=\"'Quranic'\">Quranic</mat-option>\n                                    <mat-option [value]=\"'Junior Secondary'\">Junior Secondary</mat-option>\n                                    <mat-option [value]=\"'Post Secondary'\">Post Secondary</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>State of Residence</mat-label>\n                                <mat-select name=\"state\" [(ngModel)]=\"state\"\n                                            [compareWith]=\"entityCompare\"\n                                            (selectionChange)=\"stateChange($event.value.id)\">\n                                    <mat-option></mat-option>\n                                    <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>LGA of Residence</mat-label>\n                                <mat-select name=\"lga\" [(ngModel)]=\"entity.lga\" required #lga=\"ngModel\"\n                                            [compareWith]=\"entityCompare\">\n                                    <mat-option></mat-option>\n                                    <mat-option *ngFor=\"let lga of lgas\" [value]=\"lga\">{{lga.name}}</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"lga.errors && (lga.dirty || lga.touched || !!entity.id) && (lga.errors.required)\">\n                                    LGA of Residence is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label class=\"form-label\">Address</mat-label>\n                                <textarea name=\"address\" matInput [(ngModel)]=\"entity.address\"\n                                          rows=\"3\"\n                                          required #address=\"ngModel\"></textarea>\n                                <mat-error\n                                        *ngIf=\"address.errors && (address.dirty || address.touched || !!entity.id) && (address.errors.required)\">\n                                    Address is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Telephone Number</mat-label>\n                                <input matInput name=\"phone\" phoneNumber [(ngModel)]=\"entity.phone\" #phone=\"ngModel\"/>\n                                <mat-error\n                                        *ngIf=\"phone.errors && (phone.dirty || phone.touched || !!entity.id) && (phone.errors.invalidPhone)\">\n                                    Invalid phone number\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Target group</mat-label>\n                                <mat-select name=\"tg\" [(ngModel)]=\"targetGroup\"\n                                            required #tg=\"ngModel\">\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'CSW'\">CSW</mat-option>\n                                    <mat-option [value]=\"'FSW'\">FSW</mat-option>\n                                    <mat-option [value]=\"'TRANSGENDER'\">Transgender</mat-option>\n                                    <mat-option [value]=\"'MSM'\">MSM</mat-option>\n                                    <mat-option [value]=\"'PWID'\">PWID</mat-option>\n                                    <mat-option [value]=\"'PRISON'\">Prison</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"tg.errors && (tg.dirty || tg.touched || !!entity.id) && (tg.errors.required)\">\n                                    Target Group is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>HIV Status at Registration</mat-label>\n                                <mat-select name=\"statusRegistration\" [(ngModel)]=\"entity.statusAtRegistration\"\n                                            (selectionChange)=\"statusChanged()\"\n                                            required #status=\"ngModel\">\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'HIV_EXPOSED_STATUS_UNKNOWN'\">HIV Exposed Status Unknown\n                                    </mat-option>\n                                    <mat-option [value]=\"'HIV_PLUS_NON_ART'\">HIV+ non ART</mat-option>\n                                    <mat-option [value]=\"'ART_TRANSFER_IN'\">ART Transfer In</mat-option>\n                                    <mat-option [value]=\"'PRE_ART_TRANSFER_IN'\">Pre-ART Transfer In</mat-option>\n                                    <mat-option [value]=\"'HIV_NEGATIVE'\">HIV Negative</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"status.errors && (status.dirty || status.touched || !!entity.id) && (status.errors.required)\">\n                                    HIV Status at Registration is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Care Entry Point</mat-label>\n                                <mat-select name=\"entryPoint\" [(ngModel)]=\"entity.entryPoint\"\n                                            #entryPoint=\"ngModel\">\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'OPD'\">OPD</mat-option>\n                                    <mat-option [value]=\"'In-patient'\">In-patient</mat-option>\n                                    <mat-option [value]=\"'HCT'\">HCT</mat-option>\n                                    <mat-option [value]=\"'TB DOTS'\">TB DOTS</mat-option>\n                                    <mat-option [value]=\"'STI Clinic'\">STI Clinic</mat-option>\n                                    <mat-option [value]=\"'PMTCT'\">PMTCT</mat-option>\n                                    <mat-option [value]=\"'Transfer-in'\">Transfer-in</mat-option>\n                                    <mat-option [value]=\"'Outreach'\">Outreach</mat-option>\n                                    <mat-option [value]=\"'OVC Partner'\">OVC Partner</mat-option>\n                                    <mat-option [value]=\"'Others'\">Others</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"entryPoint.errors && (entryPoint.dirty || entryPoint.touched || !!entity.id) && (entryPoint.errors.required)\">\n                                    Care Entry Point is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"prep\">\n                        <fieldset>\n                            <legend>PrEP</legend>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label>PrEP ID</mat-label>\n                                        <input matInput name=\"prepId\" required [(ngModel)]=\"prepId\" #prepID=\"ngModel\"/>\n                                        <mat-error\n                                                *ngIf=\"prepID.errors && (prepID.dirty || prepID.touched || !!entity.id) && (prepID.errors.required)\">\n                                            PrEP ID is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label>Indication for PrEP</mat-label>\n                                        <mat-select name=\"indication\" required #indication=\"ngModel\"\n                                                    [(ngModel)]=\"indicationForPrep\">\n                                            <mat-option></mat-option>\n                                            <mat-option [value]=\"'Sero-Discordant Relationship'\">Sero-Discordant\n                                                Relationship\n                                            </mat-option>\n                                            <mat-option [value]=\"'On Demand'\">On Demand</mat-option>\n                                        </mat-select>\n                                        <mat-error\n                                                *ngIf=\"indication.errors && (indication.dirty || indication.touched || !!entity.id) && (indication.errors.required)\">\n                                            Indication for PrEP is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-6\" *ngIf=\"indicationForPrep === 'On Demand'\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label>On Demand Type</mat-label>\n                                        <mat-select name=\"type\" required #type=\"ngModel\"\n                                                    [(ngModel)]=\"onDemandIndication\">\n                                            <mat-option></mat-option>\n                                            <mat-option [value]=\"'Partner Non-disclosure'\">Partner Non-disclosure\n                                            </mat-option>\n                                            <mat-option [value]=\"'Partner unwilling to undergo HIV testing'\">Partner\n                                                unwilling to undergo HIV testing\n                                            </mat-option>\n                                            <mat-option [value]=\"'Client unable to negotiate condom use'\">Client unable\n                                                to negotiate condom use\n                                            </mat-option>\n                                            <mat-option [value]=\"'Individuals with high risk sexual behaviors'\">\n                                                Individuals with high risk sexual behaviors\n                                            </mat-option>\n                                            <mat-option [value]=\"'Others'\">Others</mat-option>\n                                        </mat-select>\n                                        <mat-error\n                                                *ngIf=\"type.errors && (type.dirty || type.touched || !!entity.id) && (type.errors.required)\">\n                                            On Demand is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </fieldset>\n                    </ng-container>\n                    <div class=\"row\" *ngIf=\"entity.gender === 'FEMALE'\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Time of HIV Diagnosis</mat-label>\n                                <mat-select name=\"timeHivDiagnosis\" [(ngModel)]=\"entity.timeHivDiagnosis\">\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'Previous - Non pregnant'\">Previous - Non pregnant</mat-option>\n                                    <mat-option [value]=\"'Previous pregnancy (ANC)'\">Previous pregnancy (ANC)\n                                    </mat-option>\n                                    <mat-option [value]=\"'Previous pregnancy (L&amp;D)'\">Previous pregnancy (L&amp;D)\n                                    </mat-option>\n                                    <mat-option [value]=\"'Previous pregnancy (PP &lt;72hrs)'\">Previous pregnancy (PP\n                                        &lt;72hrs)\n                                    </mat-option>\n                                    <mat-option [value]=\"'ANC'\">ANC</mat-option>\n                                    <mat-option [value]=\"'Labour'\">Labour</mat-option>\n                                    <mat-option [value]=\"'Post Partum &lt;=72hrs'\">Post Partum &lt;=72hrs</mat-option>\n                                    <mat-option [value]=\"'Post Partum &gt;72hrs'\">Post Partum &gt;72hrs</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Date enrolled into PMTCT</mat-label>\n                                <input matInput [matDatepicker]=\"picker3\"\n                                       [(ngModel)]=\"entity.dateEnrolledPMTCT\"\n                                       #pmtct=\"ngModel\"\n                                       [max]=\"entity.dateRegistration\"\n                                       [min]=\"entity.dateBirth\"\n                                       name=\"pmtct\">\n                                <mat-datepicker-toggle\n                                        matSuffix\n                                        [for]=\"picker3\">\n                                </mat-datepicker-toggle>\n                                <mat-datepicker #picker3></mat-datepicker>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\" *ngIf=\"entity.gender === 'FEMALE'\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Pregnancy Status</mat-label>\n                                <mat-select name=\"pregnancyStatus\" [(ngModel)]=\"entity.pregnancyStatus\">\n                                    <mat-option></mat-option>\n                                    <mat-option value=\"1\">Not Pregnant</mat-option>\n                                    <mat-option value=\"2\">Pregnant</mat-option>\n                                    <mat-option value=\"3\">Breastfeeding</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Source of Referral</mat-label>\n                                <mat-select name=\"sourceReferral\" [(ngModel)]=\"entity.sourceReferral\">\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'PMTCT outreach'\">PMTCT outreach</mat-option>\n                                    <mat-option [value]=\"'Sex worker outreach'\">Sex worker outreach</mat-option>\n                                    <mat-option [value]=\"'Medical outpatient'\">Medical outpatient</mat-option>\n                                    <mat-option [value]=\"'Youth/Adolescent outreach'\">Youth/Adolescent outreach\n                                    </mat-option>\n                                    <mat-option [value]=\"'Private/Commercial Health facility'\">Private/Commercial Health\n                                        facility\n                                    </mat-option>\n                                    <mat-option [value]=\"'Under-fives/Immunization clinic'\">Under-fives/Immunization\n                                        clinic\n                                    </mat-option>\n                                    <mat-option [value]=\"'External HCT centre'\">External HCT centre</mat-option>\n                                    <mat-option [value]=\"'OVC Partner'\">OVC Partner</mat-option>\n                                    <mat-option [value]=\"'In-patients'\">In-patients</mat-option>\n                                    <mat-option [value]=\"'Self-referral'\">Self-referral</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Enrollment Setting</mat-label>\n                                <mat-select name=\"enrollmentSetting\" [(ngModel)]=\"entity.enrollmentSetting\"\n                                            [required]=\"true\" #setting=\"ngModel\">\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'Facility'\">Facility</mat-option>\n                                    <mat-option [value]=\"'Community'\">Community</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"setting.errors && (setting.dirty || setting.touched || !!entity.id) && (setting.errors.required)\">\n                                    Enrollment Setting is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\"\n                                            *ngIf=\"minDateConfirmed && entity.statusAtRegistration !== 'HIV_NEGATIVE'\">\n                                <mat-label>Date of Confirmed HIV Test</mat-label>\n                                <input matInput [matDatepicker]=\"picker2\"\n                                       [(ngModel)]=\"entity.dateConfirmedHiv\"\n                                       #time=\"ngModel\"\n                                       [max]=\"maxDateConfirmed\"\n                                       [min]=\"minDateConfirmed\"\n                                       required\n                                       name=\"time\">\n                                <mat-datepicker-toggle\n                                        matSuffix\n                                        [for]=\"picker2\">\n                                </mat-datepicker-toggle>\n                                <mat-datepicker #picker2></mat-datepicker>\n                                <mat-error\n                                        *ngIf=\"time.errors && (time.dirty || time.touched || !!entity.id) && (time.errors.required)\">\n                                    Date of Confirmed HIV Test is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>TB Status</mat-label>\n                                <mat-select name=\"tbStatus\" [(ngModel)]=\"entity.tbStatus\">\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'No sign or symptoms of TB'\">No sign or symptoms of TB\n                                    </mat-option>\n                                    <mat-option [value]=\"'TB suspected and referred for evaluation'\">TB suspected and\n                                        referred for evaluation\n                                    </mat-option>\n                                    <mat-option [value]=\"'Currently on INH prophylaxis'\">Currently on INH prophylaxis\n                                    </mat-option>\n                                    <mat-option [value]=\"'Currently on TB treatment'\">Currently on TB treatment\n                                    </mat-option>\n                                    <mat-option [value]=\"'TB positive not on TB drugs'\">TB positive not on TB drugs\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <fieldset>\n                        <legend>Next of kin/Treatment Supporter</legend>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-label>Name</mat-label>\n                                    <input matInput name=\"nextKin\" [(ngModel)]=\"entity.nextOfKin\"/>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-label>Relationship</mat-label>\n                                    <mat-select name=\"relationKin\" [(ngModel)]=\"entity.nextOfKinRelationship\">\n                                        <mat-option></mat-option>\n                                        <mat-option [value]=\"'Aunt'\">Aunt</mat-option>\n                                        <mat-option [value]=\"'Brother'\">Brother</mat-option>\n                                        <mat-option [value]=\"'Cousin'\">Cousin</mat-option>\n                                        <mat-option [value]=\"'Daughter'\">Daughter</mat-option>\n                                        <mat-option [value]=\"'Father'\">Father</mat-option>\n                                        <mat-option [value]=\"'Friend'\">Friend</mat-option>\n                                        <mat-option [value]=\"'Grand parent'\">Grand parent</mat-option>\n                                        <mat-option [value]=\"'Mother'\">Mother</mat-option>\n                                        <mat-option [value]=\"'Sister'\">Sister</mat-option>\n                                        <mat-option [value]=\"'Son'\">Son</mat-option>\n                                        <mat-option [value]=\"'Spouse'\">Spouse</mat-option>\n                                        <mat-option [value]=\"'Treatment Supporter'\">Treatment Supporter</mat-option>\n                                        <mat-option [value]=\"'Uncle'\">Uncle</mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-label>Address</mat-label>\n                                    <input matInput name=\"addressKin\" [(ngModel)]=\"entity.nextOfKinAddress\"/>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-label>Telephone Number</mat-label>\n                                    <input matInput name=\"phoneKin\" phoneNumber [(ngModel)]=\"entity.nextOfKinPhone\"\n                                           #phone1=\"ngModel\"/>\n                                    <mat-error\n                                            *ngIf=\"phone1.errors && (phone1.dirty || phone1.touched || !!entity.id) && (phone1.errors.invalidPhone)\">\n                                        Invalid phone number\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </fieldset>\n                    <ng-container *ngIf=\"ovcApplicable\">\n                        <fieldset>\n                            <legend>OVC</legend>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label>Household Unique No</mat-label>\n                                        <input matInput name=\"householdUniqueNo\" [(ngModel)]=\"ovc.householdUniqueNo\"\n                                               [required]=\"!!ovc.referredTo || !!ovc.referredFrom\"\n                                               #hun=\"ngModel\"/>\n                                        <mat-error\n                                                *ngIf=\"hun.errors && (hun.dirty || hun.touched || !!entity.id) && (hun.errors.required)\">\n                                            Household Unique No is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\"\n                                                    *ngIf=\"!!ovc.referredFrom || !!ovc.dateReferredFrom || ovcMin\">\n                                        <mat-label>Referred To OVC Partner</mat-label>\n                                        <input matInput name=\"referredTo\" [(ngModel)]=\"ovc.referredTo\"\n                                               [required]=\"!!ovc.dateReferredTo\"\n                                               [disabled]=\"!!ovc.referredFrom || !!ovc.dateReferredFrom\"\n                                               #rt=\"ngModel\"/>\n                                        <mat-error\n                                                *ngIf=\"rt.errors && (rt.dirty || rt.touched) && (rt.errors.required)\">\n                                            OVC Partner referred to is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\"\n                                                    *ngIf=\"!!ovc.referredFrom || !!ovc.dateReferredFrom || ovcMin\">\n                                        <mat-label>Date Referred to OVC Partner</mat-label>\n                                        <input matInput [matDatepicker]=\"picker8\"\n                                               [(ngModel)]=\"ovc.dateReferredTo\"\n                                               #drt=\"ngModel\"\n                                               [max]=\"today\"\n                                               [min]=\"ovcMin\"\n                                               [disabled]=\"!!ovc.referredFrom || !!ovc.dateReferredFrom\"\n                                               [required]=\"!!ovc.referredTo\"\n                                               name=\"drt\">\n                                        <mat-datepicker-toggle\n                                                matSuffix\n                                                [for]=\"picker8\">\n                                        </mat-datepicker-toggle>\n                                        <mat-datepicker #picker8></mat-datepicker>\n                                        <mat-error\n                                                *ngIf=\"drt.errors && (drt.dirty || drt.touched) && (drt.errors.required)\">\n                                            Date Referred to OVC Partner is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\"\n                                                    *ngIf=\"!!ovc.referredTo || !!ovc.dateReferredTo || ovcMin\">\n                                        <mat-label>Referred From OVC Partner</mat-label>\n                                        <input matInput name=\"referredFrom\" [(ngModel)]=\"ovc.referredFrom\"\n                                               [required]=\"!!ovc.dateReferredFrom\"\n                                               [disabled]=\"!!ovc.referredTo || !!ovc.dateReferredTo\"\n                                               #rf=\"ngModel\"/>\n                                        <mat-error\n                                                *ngIf=\"rf.errors && (rf.dirty || rf.touched) && (rf.errors.required)\">\n                                            OVC Partner referred from is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                <div class=\"col-md-6\">\n                                    <mat-form-field class=\"full-width\"\n                                                    *ngIf=\"!!ovc.referredTo || !!ovc.dateReferredTo || ovcMin\">\n                                        <mat-label>Date Referred From OVC Partner</mat-label>\n                                        <input matInput [matDatepicker]=\"picker9\"\n                                               [(ngModel)]=\"ovc.dateReferredFrom\"\n                                               #drf=\"ngModel\"\n                                               [max]=\"today\"\n                                               [min]=\"ovcMin\"\n                                               [disabled]=\"!!ovc.referredTo || !!ovc.dateReferredTo\"\n                                               [required]=\"!!ovc.referredFrom\"\n                                               name=\"drf\">\n                                        <mat-datepicker-toggle\n                                                matSuffix\n                                                [for]=\"picker9\">\n                                        </mat-datepicker-toggle>\n                                        <mat-datepicker #picker9></mat-datepicker>\n                                        <mat-error\n                                                *ngIf=\"drf.errors && (drf.dirty || drf.touched) && (drf.errors.required)\">\n                                            Date Referred to OVC Partner is required\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                            <div class=\"row\" *ngIf=\"ovc.householdUniqueNo\">\n                                <div class=\"col-md-12\">\n                                    <mat-form-field class=\"full-width\">\n                                        <mat-label>Services Provided</mat-label>\n                                        <mat-select name=\"services\" [(ngModel)]=\"ovc.servicesProvided\" multiple>\n                                            <mat-option [value]=\"'Emergency Health Services'\">Emergency Health\n                                                Services\n                                            </mat-option>\n                                            <mat-option [value]=\"'Educational Support'\">Educational Support</mat-option>\n                                            <mat-option [value]=\"'Household Economic Strengthening'\">Household Economic\n                                                Strengthening\n                                            </mat-option>\n                                            <mat-option [value]=\"'Nutritional Support'\">Nutritional Support</mat-option>\n                                            <mat-option [value]=\"'Health Education'\">Health Education</mat-option>\n                                            <mat-option [value]=\"'Water, Sanitation &amp; Hygiene Messaging (WASH)'\">\n                                                Water, Sanitation &amp; Hygiene Messaging (WASH)\n                                            </mat-option>\n                                            <mat-option [value]=\"'ART Adherence Support'\">ART Adherence Support\n                                            </mat-option>\n                                            <mat-option [value]=\"'Nutrition Assessment, Counseling and Support'\">\n                                                Nutrition Assessment, Counseling and Support\n                                            </mat-option>\n                                            <mat-option [value]=\"'Growth Monitoring'\">Growth Monitoring</mat-option>\n                                            <mat-option [value]=\"'Emergency Support'\">Emergency Support</mat-option>\n                                            <mat-option [value]=\"'School Enrollment/ Re-enrollment'\">School Enrollment/\n                                                Re-enrollment\n                                            </mat-option>\n                                            <mat-option [value]=\"'Psychosocial Support'\">Psychosocial Support\n                                            </mat-option>\n                                        </mat-select>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </fieldset>\n                    </ng-container>\n                </mat-card-content>\n                <mat-card-actions class=\"lamis-edit-form-actions\">\n                    <button mat-button type=\"button\" (click)=\"previousState()\">Back</button>\n                    <button mat-raised-button color=\"primary\" (click)=\"save()\"\n                            [disabled]=\"patientForm.invalid || isSaving || (!!ovc.householdUniqueNo && !(!!ovc.referredFrom || !!ovc.referredTo))\">\n                        {{entity.id ? 'Update' : 'Save'}}\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </form>\n    </div>\n</div>\n"
        }),
        tslib_1.__metadata("design:paramtypes", [PatientService,
            NotificationService,
            AppLoaderService,
            TdDialogService,
            ActivatedRoute])
    ], PatientEditComponent);
    return PatientEditComponent;
}());
export { PatientEditComponent };
//# sourceMappingURL=data:application/json;base64,
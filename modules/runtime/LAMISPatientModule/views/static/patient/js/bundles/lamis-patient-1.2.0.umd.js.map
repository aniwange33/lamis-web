{
    "version": 3,
    "file": "lamis-patient-1.2.0.umd.js",
    "sources": [
        "../../../../../../../../node_modules/tslib/tslib.es6.js",
        "ng://lamis-patient-1.2.0/lib/services/patient.service.ts",
        "ng://lamis-patient-1.2.0/lib/components/patient-list.component.ts",
        "ng://lamis-patient-1.2.0/lib/components/patient-details.component.ts",
        "ng://lamis-patient-1.2.0/lib/components/patient-edit.component.ts",
        "ng://lamis-patient-1.2.0/lib/components/detailed.timeline.component.ts",
        "ng://lamis-patient-1.2.0/lib/services/patient.route.ts",
        "ng://lamis-patient-1.2.0/lib/components/widget-container.component.ts",
        "ng://lamis-patient-1.2.0/lib/services/observation.service.ts",
        "ng://lamis-patient-1.2.0/lib/components/timeline.component.ts",
        "ng://lamis-patient-1.2.0/lib/widget/timeline.widget.ts",
        "ng://lamis-patient-1.2.0/lib/widget/timeline.event.ts",
        "ng://lamis-patient-1.2.0/lib/widget/timeline.badge.ts",
        "ng://lamis-patient-1.2.0/lib/widget/timeline.footer.ts",
        "ng://lamis-patient-1.2.0/lib/widget/timeline.header.ts",
        "ng://lamis-patient-1.2.0/lib/widget/timeline.panel.ts",
        "ng://lamis-patient-1.2.0/lib/widget/timeline.widget.module.ts",
        "ng://lamis-patient-1.2.0/lib/components/unique-hospital-num.validator.ts",
        "ng://lamis-patient-1.2.0/lib/components/summary.widget.component.ts",
        "ng://lamis-patient-1.2.0/lib/patient.module.ts",
        "ng://lamis-patient-1.2.0/lib/components/client-status.component.ts",
        "ng://lamis-patient-1.2.0/lib/services/status.route.ts",
        "ng://lamis-patient-1.2.0/lib/client-status.module.ts"
    ],
    "sourcesContent": [
        "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {\n    AuthServerProvider,\n    createRequestOption,\n    DATE_FORMAT,\n    SERVER_API_URL_CONFIG,\n    ServerApiUrlConfig\n} from '@lamis/web-core';\nimport { map, share } from 'rxjs/operators';\nimport { Patient, StatusHistory } from '../model/patient.model';\n\nimport * as moment_ from 'moment';\nimport { Moment } from 'moment';\nimport { Facility } from '../model/facility.model';\nimport { ValidationErrors } from '@angular/forms';\nimport { Summary } from '../components/summary.widget.component';\n\nconst moment = moment_;\n\ntype EntityResponseType = HttpResponse<Patient>;\ntype EntityArrayResponseType = HttpResponse<Patient[]>;\n\nexport interface PatientActivity {\n    uuid?: string;\n    id?: any;\n    name?: string;\n    icon?: string;\n    path?: string;\n    editable?: boolean;\n    viewable?: boolean;\n    deletable?: boolean;\n}\n\nexport interface PatientTimeline {\n    date?: string;\n    activities?: PatientActivity[];\n}\n\nexport interface PatientWidget {\n    title: string;\n    componentName: string;\n    index: number;\n    icon?: string;\n}\n\nexport interface PatientObservation {\n    name?: string;\n    path?: string;\n    icon?: string;\n    tooltip?: string;\n}\n\n@Injectable({providedIn: 'root'})\nexport class PatientService {\n    public resourceUrl = '';\n    public resourceSearchUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig,\n                private authServerProvider: AuthServerProvider) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/patients';\n        this.resourceSearchUrl = serverUrl.SERVER_API_URL + '/api/_search/patients';\n    }\n\n    create(patient: Patient): Observable<EntityResponseType> {\n        const copy = this.convertDateFromClient(patient);\n        return this.http\n            .post<Patient>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    update(patient: Patient): Observable<EntityResponseType> {\n        const copy = this.convertDateFromClient(patient);\n        return this.http\n            .put<Patient>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)),\n                share());\n    }\n\n    find(id: any): Observable<EntityResponseType> {\n        return this.http\n            .get<Patient>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    findByUuid(id: any): Observable<EntityResponseType> {\n        return this.http\n            .get<Patient>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    query(req?: any): Observable<EntityArrayResponseType> {\n        const options = createRequestOption(req);\n        return this.http\n            .get<Patient[]>(this.resourceUrl, {params: options, observe: 'response'})\n            .pipe(map((res: EntityArrayResponseType) => this.convertDateArrayFromServer(res)));\n    }\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    widgets(patientId: number): Observable<PatientWidget[]> {\n        return this.http.get<PatientWidget[]>(`${this.resourceUrl}/${patientId}/widgets`, {observe: 'body'})\n    }\n\n    observations(patientId: number): Observable<PatientObservation[]> {\n        return this.http.get<PatientObservation[]>(`${this.resourceUrl}/${patientId}/observations`, {\n            observe: 'body'\n        })\n    }\n\n    activities(patientId: number, detailed: boolean): Observable<PatientTimeline[]> {\n        return this.http.get<PatientTimeline[]>(`${this.resourceUrl}/${patientId}/activities?full=${detailed}`, {observe: 'body'})\n            .pipe(map(res => {\n                res.sort((t1, t2) => {\n                    const d1 = moment(t1.date, 'DD MMM, YYYY');\n                    const d2 = moment(t2.date, 'DD MMM, YYYY');\n                    return d2.diff(d1);\n                });\n                return res;\n            }))\n    }\n\n    getActiveFacility() {\n        return this.http.get<Facility>('/api/facilities/active')\n    }\n\n    getStates() {\n        return this.http.get<any[]>('/api/states')\n    }\n\n    getLgasByState(id) {\n        return this.http.get<any[]>(`/api/provinces/state/${id}`)\n    }\n\n    getStateByLga(id) {\n        return this.http.get(`/api/provinces/${id}/state`)\n    }\n\n    getFacility(id) {\n        return this.http.get(`/api/facilities/${id}`)\n    }\n\n    existsByHospitalNumber(hospitalNum: string): Observable<ValidationErrors | null> {\n        return this.http.get<boolean>(`${this.resourceUrl}/exists/hospital-number/${hospitalNum}`)\n            .pipe(map((res => res ? {'numberExists': true} : null)));\n    }\n\n    getStatusDatesByPatient(patientId: number) {\n        return this.http.get<Moment[]>(`/api/client-statuses/patient/${patientId}/status-dates`)\n            .pipe(map((res) => {\n                    res.forEach(d => moment(d));\n                    return res;\n                })\n            )\n    }\n\n    getSummaryForPatient(id: number) {\n        return this.http.get<Summary[]>(`${this.resourceUrl}/${id}/summary`)\n    }\n\n    saveClientStatus(status: StatusHistory) {\n        console.log('Status', status);\n        const copy = PatientService.convertStatusFromClient(status);\n        console.log('Copy', copy);\n        return this.http.post<StatusHistory>('/api/client-statuses', copy, {observe: 'response'})\n    }\n\n    updateClientStatus(status: StatusHistory) {\n        const copy = PatientService.convertStatusFromClient(status);\n        return this.http.put<StatusHistory>('/api/client-statuses', copy, {observe: 'response'})\n    }\n\n    findClientStatus(id) {\n        return this.http.get<StatusHistory>(`/api/client-statuses/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: HttpResponse<StatusHistory>) => {\n                res.body.dateTracked = res.body.dateTracked != null ? moment(res.body.dateTracked) : null;\n                res.body.dateStatus = res.body.dateStatus != null ? moment(res.body.dateStatus) : null;\n                res.body.agreedDate = res.body.agreedDate != null ? moment(res.body.agreedDate) : null;\n                return res;\n            }))\n    }\n\n    currentClientStatus(patientId: string) {\n        return this.http.get(`/api/client-statuses/patient/${patientId}/current`, {responseType: 'text'})\n    }\n\n    getStatusName(id: number) {\n        return this.http.get(`/api/client-statuses/${id}/name`, {responseType: 'text'})\n    }\n\n    private static convertStatusFromClient(status: StatusHistory): StatusHistory {\n        const copy: StatusHistory = Object.assign({}, status, {\n                dateStatus: status.dateStatus != null && status.dateStatus.isValid() ? status.dateStatus.format(DATE_FORMAT) : null,\n                agreedDate: status.agreedDate != null && status.agreedDate.isValid() ? status.agreedDate.format(DATE_FORMAT) : null,\n                dateTracked: status.dateTracked != null && status.dateTracked.isValid() ? status.dateTracked.format(DATE_FORMAT) : null,\n            }\n        );\n        return copy;\n    }\n\n    protected convertDateFromClient(patient: Patient): Patient {\n        const copy: Patient = Object.assign({}, patient, {\n            dob: patient.dateBirth != null && patient.dateBirth.isValid() ? patient.dateBirth.format(DATE_FORMAT) : null,\n            dateRegistration: patient.dateRegistration != null && patient.dateRegistration.isValid() ? patient.dateRegistration.format(DATE_FORMAT) : null,\n            dateStarted: patient.dateStarted != null && patient.dateStarted.isValid() ? patient.dateStarted.format(DATE_FORMAT) : null,\n            dateConfirmedHiv: patient.dateConfirmedHiv != null && patient.dateConfirmedHiv.isValid() ? patient.dateConfirmedHiv.format(DATE_FORMAT) : null,\n            dateEnrolledPMTCT: patient.dateEnrolledPMTCT != null && patient.dateEnrolledPMTCT.isValid() ? patient.dateEnrolledPMTCT.format(DATE_FORMAT) : null,\n            pregnant: patient.pregnancyStatus === 2,\n            breastfeeding: patient.pregnancyStatus === 3\n        });\n        return copy;\n    }\n\n    protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n        if (res.body) {\n            res.body.name = res.body.surname + ', ' + res.body.otherNames;\n            res.body.dateBirth = res.body.dateBirth != null ? moment(res.body.dateBirth) : null;\n            res.body.dateRegistration = res.body.dateRegistration != null ? moment(res.body.dateRegistration) : null;\n            res.body.dateConfirmedHiv = res.body.dateConfirmedHiv != null ? moment(res.body.dateConfirmedHiv) : null;\n            res.body.dateEnrolledPMTCT = res.body.dateEnrolledPMTCT != null ? moment(res.body.dateEnrolledPMTCT) : null;\n            res.body.dateStarted = res.body.dateStarted != null ? moment(res.body.dateStarted) : null;\n            res.body.pregnancyStatus = res.body.pregnant != null && res.body.pregnant ? 2 : res.body.gender === 'FEMALE' ? 1 : null;\n            res.body.pregnancyStatus = res.body.breastfeeding != null && res.body.breastfeeding ? 3 : res.body.gender === 'FEMALE' ? 1 : null;\n        }\n        return res;\n    }\n\n    protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n        if (res.body) {\n            res.body.forEach((patient: Patient) => {\n                patient.name = patient.surname + ', ' + patient.otherNames;\n                patient.dateBirth = patient.dateBirth != null ? moment(patient.dateBirth) : null;\n                patient.dateRegistration = patient.dateRegistration != null ? moment(patient.dateRegistration) : null;\n                patient.dateStarted = patient.dateStarted != null ? moment(patient.dateStarted) : null;\n            });\n        }\n        return res;\n    }\n}\n",
        "import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { PatientService } from '../services/patient.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { NotificationService } from '@alfresco/adf-core';\r\nimport { Patient } from '../model/patient.model';\r\nimport { Facility } from '../model/facility.model';\r\n\r\n@Component({\r\n    selector: 'lamis-patients',\r\n    templateUrl: './patient-list.component.html'\r\n})\r\nexport class PatientListComponent implements OnInit, OnDestroy {\r\n    @Input()\r\n    path: string;\r\n    page = 0;\r\n    patients: Patient[];\r\n    loading = false;\r\n    public itemsPerPage: number = 10;\r\n    public currentSearch: string = '';\r\n    totalItems = 0;\r\n    display = 'list';\r\n    facility: Facility = {};\r\n\r\n    constructor(private patientService: PatientService,\r\n                protected notification: NotificationService,\r\n                protected router: Router,\r\n                protected activatedRoute: ActivatedRoute) {\r\n        this.currentSearch = '';\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.patientService.getActiveFacility().subscribe(res => {\r\n            this.facility = res;\r\n            this.onPageChange(0);\r\n        })\r\n    }\r\n\r\n    searchPatient(search: any) {\r\n        this.currentSearch = search;\r\n        this.page = 0;\r\n        this.loadAll();\r\n    }\r\n\r\n\r\n    public select(data: any): any {\r\n        if (!!this.path) {\r\n            this.router.navigateByUrl(`${this.path}/${data.obj.uuid}`)\r\n        } else {\r\n            this.router.navigate(['..', 'patients', data.obj.uuid, 'view'], {relativeTo: this.activatedRoute});\r\n        }\r\n    }\r\n\r\n    onPageChange(pageInfo) {\r\n        this.page = pageInfo;\r\n        this.loadAll();\r\n    }\r\n\r\n    loadPage(page: number) {\r\n        this.loadAll();\r\n    }\r\n\r\n    loadAll() {\r\n        this.loading = true;\r\n        this.patientService.query({\r\n            keyword: this.currentSearch,\r\n            page: this.page > 0 ? this.page - 1 : 0,\r\n            facilityId: this.facility.id || 0,\r\n            size: this.itemsPerPage,\r\n            sort: ['id', 'asc']\r\n        }).subscribe(\r\n            (res: any) => {\r\n                this.onSuccess(res.body, res.headers)\r\n            },\r\n            (res: any) => this.onError(res)\r\n        );\r\n    }\r\n\r\n    protected onSuccess(data: any, headers: any) {\r\n        this.patients = data;\r\n        this.totalItems = headers.get('X-Total-Count');\r\n        this.loading = false;\r\n    }\r\n\r\n    private onError(error: any) {\r\n        this.notification.openSnackMessage(error.message);\r\n        this.loading = false;\r\n    }\r\n}\r\n\r\n",
        "import {\r\n    Component,\r\n    ComponentFactory,\r\n    ComponentFactoryResolver,\r\n    OnDestroy,\r\n    OnInit,\r\n    Renderer2,\r\n    ViewChild,\r\n    ViewContainerRef\r\n} from '@angular/core';\r\nimport { Patient } from '../model/patient.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PatientObservation, PatientService, PatientWidget } from '../services/patient.service';\r\nimport { TdDialogService } from '@covalent/core';\r\nimport { CardViewItem, NotificationService } from '@alfresco/adf-core';\r\nimport { Moment } from 'moment';\r\nimport * as moment_ from 'moment';\r\n\r\nconst moment = moment_;\r\n\r\n@Component({\r\n    selector: 'lamis-patient',\r\n    templateUrl: './patient-details.component.html',\r\n    styleUrls: ['./patient-details.component.scss']\r\n})\r\nexport class PatientDetailsComponent implements OnInit, OnDestroy {\r\n    template = 'patient-details';\r\n    entity: Patient;\r\n    observations: PatientObservation[];\r\n    @ViewChild('container', {read: ViewContainerRef, static: true}) container: ViewContainerRef;\r\n    properties: CardViewItem[] = [];\r\n    status: string;\r\n\r\n    constructor(private router: Router, private route: ActivatedRoute, private patientService: PatientService,\r\n                private cfr: ComponentFactoryResolver, private _dialogService: TdDialogService,\r\n                private notificationService: NotificationService, private _viewContainerRef: ViewContainerRef,\r\n                private renderer2: Renderer2) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.route.data.subscribe(({entity}) => {\r\n            this.entity = !!entity && entity.body ? entity.body : entity;\r\n            this.patientService.currentClientStatus(entity.uuid).subscribe(res => {\r\n                this.status = res;\r\n            });\r\n            this.attacheWidgets();\r\n            this.getObservations();\r\n        });\r\n    }\r\n\r\n    edit() {\r\n        this.router.navigate(['..', 'edit'], {relativeTo: this.route});\r\n    }\r\n\r\n    updateStatus() {\r\n        this.router.navigate(['/', 'client-statuses', 'patient', this.entity.uuid, 'new']);\r\n    }\r\n\r\n    delete() {\r\n        this._dialogService.openConfirm({\r\n            title: 'Confirm',\r\n            message: 'Do you want to delete this patient, action cannot be reversed?',\r\n            cancelButton: 'No',\r\n            acceptButton: 'Yes',\r\n            width: '500px',\r\n        }).afterClosed().subscribe((accept: boolean) => {\r\n            if (accept) {\r\n                this.patientService.delete(this.entity.id).subscribe((res) => {\r\n                    if (res.ok) {\r\n                        this.router.navigate(['patients'])\r\n                    } else {\r\n                        this.notificationService.showError('Error deleting patient, please try again')\r\n                    }\r\n                })\r\n            } else {\r\n                // DO SOMETHING ELSE\r\n            }\r\n        });\r\n    }\r\n\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n\r\n    private getComponentFactory(name: string) {\r\n        const factories = Array.from(this.cfr['_factories'].values());\r\n        return <ComponentFactory<any>>factories.find((x: any) => x.componentType.name === name);\r\n    }\r\n\r\n    getObservations() {\r\n        this.patientService.observations(this.entity.id).subscribe((res: PatientObservation[]) => this.observations = res)\r\n    }\r\n\r\n    addObservation(action: PatientObservation) {\r\n        const path = action.path.split('/');\r\n        const parts = ['/'];\r\n        parts.push(...path);\r\n        parts.push('patient', this.entity.uuid, 'new');\r\n        this.router.navigate([...parts]);\r\n    }\r\n\r\n    private attacheWidgets() {\r\n        this.buildWidget('TimelineComponent', 'Recent Activities', 'timeline');\r\n        this.buildWidget('SummaryWidgetComponent', 'Patient Summary', 'account_balance_wallet');\r\n        /*this.patientService.widgets(this.entity.id).subscribe((res: PatientWidget[]) => {\r\n            res.forEach((widget: PatientWidget) => {\r\n                this.buildWidget(widget.componentName, widget.title, widget.icon);\r\n            })\r\n        });*/\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n    }\r\n\r\n    private buildWidget(componentName: string, title: string, icon: string) {\r\n        const factory = this.getComponentFactory(componentName);\r\n        if (factory !== undefined) {\r\n            const parentFactory = this.getComponentFactory('WidgetContainerComponent');\r\n            const componentRef = this.container.createComponent(parentFactory);\r\n            if (!componentRef.instance.embeddedContainer) {\r\n                const cmpName = componentRef.instance.constructor.name;\r\n                throw new TypeError(`Trying to render embedded content. ${cmpName} must have @ViewChild() embeddedContainer defined`);\r\n            }\r\n            console.log('Created component', componentRef);\r\n            const instanceRef = componentRef.instance.embeddedContainer.createComponent(factory);\r\n            this.renderer2.addClass(componentRef.location.nativeElement, 'col-md-6');\r\n            componentRef.instance.icon = icon;\r\n            componentRef.instance.title = title;\r\n            try {\r\n                instanceRef.instance.patientId = this.entity.id;\r\n                instanceRef.instance.patientUuid = this.entity.uuid;\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    age(dob: Moment) {\r\n        let age = moment().diff(dob, 'years');\r\n        if (age > 0) {\r\n            return age + ' year(s)'\r\n        }\r\n\r\n        age = moment().diff(dob, 'months');\r\n        if (age > 0) {\r\n            return age + ' month(s)';\r\n        }\r\n        return moment().diff(dob, 'weeks') + ' week(s)';\r\n    }\r\n}\r\n",
        "import { Component, OnInit } from '@angular/core';\r\nimport { Patient } from '../model/patient.model';\r\nimport { PatientService } from '../services/patient.service';\r\nimport { NotificationService } from '@alfresco/adf-core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport * as moment_ from 'moment';\r\nimport { DurationInputArg2, Moment } from 'moment';\r\nimport { AppLoaderService, entityCompare } from '@lamis/web-core';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\nconst moment = moment_;\r\n\r\n@Component({\r\n    selector: 'lamis-patient-edit',\r\n    templateUrl: './patient-edit.component.html'\r\n})\r\nexport class PatientEditComponent implements OnInit {\r\n    template = 'patient-edit';\r\n    entity: Patient;\r\n    patient: Patient;\r\n    isSaving: boolean;\r\n    error = false;\r\n    today = moment();\r\n    minDob = moment().subtract(75, 'years');\r\n    minDateRegistration: Moment = moment('2008', 'YYYY');\r\n    maxDateBirth: Moment = moment().subtract(2, 'months');\r\n    maxDateConfirmed = moment();\r\n    minDateConfirmed = moment('2008', 'YYYY');\r\n    age: number;\r\n    ageUnit: DurationInputArg2;\r\n    state: any;\r\n    states: any[];\r\n    lgas: any[];\r\n\r\n    constructor(private patientService: PatientService,\r\n                protected notification: NotificationService,\r\n                private loaderService: AppLoaderService,\r\n                protected activatedRoute: ActivatedRoute,\r\n                private formBuilder: FormBuilder) {\r\n    }\r\n\r\n    createEntity(): Patient {\r\n        return <Patient>{};\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.patientService.getActiveFacility().subscribe((res: any) => {\r\n            this.entity.facility = res;\r\n        });\r\n        this.isSaving = false;\r\n        this.activatedRoute.data.subscribe(({entity}) => {\r\n            this.entity = !!entity && entity.body ? entity.body : entity;\r\n            if (this.entity === undefined) {\r\n                this.entity = this.createEntity();\r\n            }\r\n            if (this.entity.id && this.entity.lga) {\r\n                this.minDateRegistration = this.entity.dateBirth.clone().add(2, 'month');\r\n                this.minDateConfirmed = this.entity.dateBirth.clone().add(1, 'month');\r\n                this.patientService.getStateByLga(this.entity.lga.id).subscribe(res => {\r\n                    this.state = res;\r\n                    this.stateChange(this.state.id);\r\n                })\r\n            }\r\n        });\r\n\r\n        this.patientService.getStates().subscribe(res => this.states = res);\r\n    }\r\n\r\n    entityCompare(e1, e2) {\r\n        return entityCompare(e1, e2);\r\n    }\r\n\r\n    estimateDob() {\r\n        if (this.age && this.ageUnit && this.entity.dateRegistration) {\r\n            const dateRegistration = this.entity.dateRegistration;\r\n            this.entity.dateBirth = dateRegistration.clone().subtract(this.age, this.ageUnit);\r\n            this.minDateConfirmed = this.entity.dateBirth.clone().add(1, 'months');\r\n        }\r\n    }\r\n\r\n    stateChange(id) {\r\n        this.patientService.getLgasByState(id).subscribe(res => this.lgas = res)\r\n    }\r\n\r\n    previousState() {\r\n        window.history.back();\r\n    }\r\n\r\n    dateBirthChanged(date: Moment) {\r\n        this.minDateRegistration = date.clone().add(2, 'months');\r\n        this.minDateConfirmed = date.clone().add(1, 'months');\r\n        if (this.minDateRegistration.isBefore(moment('2008', 'YYYY'), 'day')) {\r\n            this.minDateRegistration = moment('2008', 'YYYY');\r\n            this.minDateConfirmed = moment('2008', 'YYYY');\r\n        }\r\n    }\r\n\r\n    dateRegistrationChanged(date: Moment) {\r\n        this.maxDateBirth = date.clone().subtract(2, 'months');\r\n        this.maxDateConfirmed = date.clone();\r\n    }\r\n\r\n    save() {\r\n        //this.progressBar.mode = 'indeterminate';\r\n        this.loaderService.open('Saving patient...');\r\n        this.isSaving = true;\r\n        if (!this.entity.id) {\r\n            if (this.entity.dobEstimated) {\r\n                this.entity.dateBirth = this.entity.dateRegistration.clone().subtract(this.age, this.ageUnit);\r\n            }\r\n            this.subscribeToSaveResponse(this.patientService.create(this.entity));\r\n        } else {\r\n            this.subscribeToSaveResponse(this.patientService.update(this.entity));\r\n        }\r\n    }\r\n\r\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\r\n        this.loaderService.close();\r\n        result.subscribe(\r\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\r\n            (res: HttpErrorResponse) => {\r\n                this.onSaveError();\r\n                this.onError(res.message)\r\n            });\r\n    }\r\n\r\n    private onSaveSuccess(result: any) {\r\n        this.isSaving = false;\r\n        this.notification.openSnackMessage('Patient successfully saved');\r\n        this.previousState();\r\n    }\r\n\r\n    private onSaveError() {\r\n        this.isSaving = false;\r\n        this.error = true;\r\n        //this.progressBar.mode = 'determinate';\r\n    }\r\n\r\n    protected onError(errorMessage: string) {\r\n        this.notification.showError(errorMessage);\r\n    }\r\n}\r\n",
        "import { Component, OnInit } from \"@angular/core\";\nimport { PatientService } from \"../services/patient.service\";\nimport { ActivatedRoute } from \"@angular/router\";\n\n@Component({\n    selector: 'detailed-timeline',\n    templateUrl: './detailed.timeline.component.html'\n})\nexport class DetailedTimelineComponent implements OnInit {\n    id: number;\n    uuid: string;\n\n    constructor(private patientService: PatientService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.data.subscribe(({entity}) => {\n            const patient = !!entity && entity.body ? entity.body : entity;\n            this.id = patient.id;\n            this.uuid = patient.uuid;\n        });\n    }\n\n    previousState() {\n        window.history.back();\n    }\n}\n",
        "import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\nimport { PagingParamsResolve, UserRouteAccessService } from '@lamis/web-core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { PatientService } from './patient.service';\nimport { Patient } from '../model/patient.model';\nimport { PatientDetailsComponent } from '../components/patient-details.component';\nimport { PatientEditComponent } from '../components/patient-edit.component';\nimport { PatientListComponent } from '../components/patient-list.component';\nimport { DetailedTimelineComponent } from '../components/detailed.timeline.component';\n\n@Injectable()\nexport class PatientResolve implements Resolve<Patient> {\n    constructor(private service: PatientService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Patient> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<Patient>) => response.ok),\n                map((patient: HttpResponse<Patient>) => patient.body)\n            );\n        }\n        return of(<Patient>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Patients',\n            breadcrumb: 'PATIENTS'\n        },\n        children: [\n            {\n                path: '',\n                component: PatientListComponent,\n                resolve: {\n                    pagingParams: PagingParamsResolve\n                },\n                data: {},\n            },\n            {\n                path: ':id/view',\n                component: PatientDetailsComponent,\n                resolve: {\n                    entity: PatientResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Patient Details',\n                    breadcrumb: 'PATIENT DETAILS'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'new',\n                component: PatientEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Add Patient',\n                    breadcrumb: 'ADD PATIENT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/edit',\n                component: PatientEditComponent,\n                resolve: {\n                    entity: PatientResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Patient Edit',\n                    breadcrumb: 'PATIENT EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/timeline',\n                component: DetailedTimelineComponent,\n                resolve: {\n                    entity: PatientResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Patient Timeline',\n                    breadcrumb: 'PATIENT TIMELINE'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n",
        "import { Component, HostBinding, Input, ViewChild, ViewContainerRef } from '@angular/core';\n\n@Component({\n    selector:'widget-container',\n    templateUrl: './widget-container.component.html',\n    styleUrls: ['./widget-container.component.scss']\n})\nexport class WidgetContainerComponent {\n    @Input()\n    title: string;\n    @Input()\n    icon: string;\n\n    @ViewChild('container', { read: ViewContainerRef,  static: true })\n    embeddedContainer: ViewContainerRef;\n}\n",
        "import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SERVER_API_URL_CONFIG, ServerApiUrlConfig } from '@lamis/web-core';\n\n@Injectable({providedIn:'root'})\nexport class ObservationService {\n    resourceUrl: string = '';\n\n    constructor(private http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api';\n    }\n\n    deleteObservation(path: string, id: string) {\n        return this.http.delete(`${this.resourceUrl}/${path}/${id}`, {observe: 'response'})\n    }\n\n    getObservation(path: string, id: string) {\n        return this.http.get<any>(`${this.resourceUrl}/${path}/by-uuid/${id}`,{observe: 'response'})\n    }\n}\n",
        "import { Component, Input, OnInit } from '@angular/core';\nimport { PatientService, PatientTimeline } from '../services/patient.service';\nimport { Router } from '@angular/router';\nimport { TdDialogService } from '@covalent/core';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { ObservationService } from '../services/observation.service';\n\n@Component({\n    selector: 'patient-timeline',\n    templateUrl: './timeline.component.html'\n})\nexport class TimelineComponent implements OnInit {\n    @Input()\n    patientId: number;\n    @Input()\n    patientUuid: string;\n    @Input()\n    detailed: boolean = false;\n    timeLine: PatientTimeline[];\n\n    constructor(private patientService: PatientService, private router: Router, private observationService: ObservationService,\n                private _dialogService: TdDialogService, private notificationService: NotificationService) {\n    }\n\n    ngOnInit(): void {\n        this.loadActivities()\n    }\n\n    view(path: string, id: string) {\n        this.router.navigate(['/', path, id, 'patient', this.patientUuid, 'view'])\n    }\n\n    edit(path: string, id: string) {\n        this.router.navigate(['/', path, id, 'patient', this.patientUuid, 'edit'])\n    }\n\n    delete(path: string, id: string) {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this event, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.observationService.getObservation(path, id).subscribe(obj => {\n                    if (obj.body) {\n                        this.observationService.deleteObservation(path, obj.body.id).subscribe((res) => {\n                            if (res.ok) {\n                                this.patientService.activities(this.patientId, this.detailed).subscribe((res) => this.timeLine = res)\n                            } else {\n                                this.notificationService.showError('Error deleting event, please try again')\n                            }\n                        })\n                    }\n                })\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    loadActivities() {\n        this.patientService.activities(this.patientId, this.detailed).subscribe((res) => this.timeLine = res)\n    }\n}\n",
        "import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n    selector: 'timeline',\n    templateUrl: './timeline.widget.html'\n})\nexport class TimelineWidget implements OnInit{\n    ngOnInit(): void {\n    }\n\n}\n",
        "import { Component, Input, OnInit } from '@angular/core';\nimport { TimelineWidget } from './timeline.widget';\n\n@Component({\n    selector: 'timeline-event',\n    templateUrl: './timeline.event.html'\n})\nexport class TimelineEvent implements OnInit {\n\n    oddClass;\n    evenClass;\n    _side: string = 'left';\n    @Input()\n    set side(side: string) {\n        this._side = side;\n        this.updateRowClasses(this._side);\n    }\n    \n    constructor(private parent: TimelineWidget) {\n    }\n\n    ngOnInit(): void {\n        this.updateRowClasses(this._side);\n    }\n\n    checkClass(side, leftSide) {\n        let leftClass = '';\n        let rightClass = 'timeline-inverted';\n\n        if (side === 'left' || (!side && leftSide === true)) {\n            return leftClass;\n        } else if ((side === 'alternate' || !side) && leftSide === false) {\n            return rightClass;\n        } else if (side === 'right') {\n            return rightClass;\n        } else {\n            return leftClass;\n        }\n    }\n\n    updateRowClasses(value) {\n        this.oddClass = this.checkClass(value, true);\n        this.evenClass = this.checkClass(value, false);\n    }\n}\n",
        "import { Component } from '@angular/core';\nimport { TimelineEvent } from './timeline.event';\n\n@Component({\n    selector: 'timeline-badge',\n    template: `\n        <div class='timeline-badge'>\n            <ng-content></ng-content>\n        </div>\n    `\n})\nexport class TimelineBadge {\n    constructor(private event: TimelineEvent) {\n    }\n}\n",
        "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'timeline-footer',\n    template: `\n        <div class='timeline-footer'>\n            <ng-content></ng-content>\n        </div>\n    `\n})\nexport class TimelineFooter {\n    \n}\n",
        "import { Component } from '@angular/core';\n\n@Component({\n    selector: 'timeline-header',\n    template: `\n        <div class='timeline-header'>\n            <ng-content></ng-content>\n        </div>\n    `\n})\nexport class TimelineHeader {\n\n}\n",
        "import { Component } from '@angular/core';\nimport { TimelineEvent } from './timeline.event';\n\n@Component({\n    selector: 'timeline-panel',\n    template:\n            `\n        <div class='timeline-panel'>\n            <ng-content></ng-content>\n        </div>`\n})\nexport class TimelinePanel {\n    constructor(private event: TimelineEvent) {\n    }\n}\n",
        "import { NgModule } from '@angular/core';\nimport { TimelineWidget } from './timeline.widget';\nimport { TimelineEvent } from './timeline.event';\nimport { TimelineBadge } from './timeline.badge';\nimport { TimelineFooter } from './timeline.footer';\nimport { TimelineHeader } from './timeline.header';\nimport { TimelinePanel } from './timeline.panel';\n\nconst COMPONENTS = [TimelineBadge, TimelineEvent, TimelineFooter, TimelineHeader, TimelinePanel, TimelineWidget];\n\n@NgModule({\n    declarations: [\n        ...COMPONENTS\n    ],\n    exports: [\n        ...COMPONENTS\n    ]\n})\nexport class TimelineWidgetModule {\n\n}\n",
        "import { AbstractControl, AsyncValidator, NG_ASYNC_VALIDATORS, ValidationErrors } from '@angular/forms';\nimport { Directive } from '@angular/core';\nimport { PatientService } from '../services/patient.service';\nimport { Observable, of } from 'rxjs';\nimport { debounceTime, switchMap, take } from 'rxjs/operators';\n\n@Directive({\n    selector: '[uniqueHospitalNum]',\n    providers: [{\n        provide: NG_ASYNC_VALIDATORS,\n        useExisting: UniqueHospitalNumValidator,\n        multi: true\n    }]\n})\nexport class UniqueHospitalNumValidator implements AsyncValidator {\n    constructor(private patientService: PatientService) {\n    }\n\n    validate(control: AbstractControl): Observable<ValidationErrors | null> {\n        return control.valueChanges\n            .pipe(\n                debounceTime(300),\n                take(1),\n                switchMap(value => this.patientService.existsByHospitalNumber(value))\n            );\n    }\n}\n",
        "import { Component, Input, OnInit } from '@angular/core';\nimport {\n    CardViewBoolItemModel,\n    CardViewDateItemModel,\n    CardViewDatetimeItemModel,\n    CardViewFloatItemModel,\n    CardViewIntItemModel,\n    CardViewItem,\n    CardViewTextItemModel\n} from '@alfresco/adf-core';\nimport { FieldType } from '@lamis/web-core';\nimport { PatientService } from '../services/patient.service';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nexport interface Summary {\n    header?: string;\n    headerClass?: string;\n    fields: Field[];\n}\n\nexport interface Field {\n    type: FieldType;\n    label: string;\n    value: any;\n}\n\n@Component({\n    selector: 'patient-summary-widget',\n    templateUrl: './summary.widget.component.html'\n})\nexport class SummaryWidgetComponent implements OnInit {\n    @Input()\n    patientId: number;\n    @Input()\n    patientUuid: string;\n    @Input()\n\n    summaries: Summary[];\n\n    constructor(private patientService: PatientService) {\n    }\n\n    ngOnInit(): void {\n        this.patientService.getSummaryForPatient(this.patientId).subscribe(res => this.summaries = res)\n    }\n\n    public propertiesForSummary(summary: Summary): Array<CardViewItem> {\n        const properties = [];\n        for (const field of summary.fields) {\n            const dataType = field.type.toLowerCase();\n            let item: CardViewItem;\n            switch (dataType) {\n                case FieldType.boolean:\n                    item = new CardViewBoolItemModel({\n                        value: field.value,\n                        key: '',\n                        label: field.label\n                    });\n                    break;\n                case FieldType.int:\n                    item = new CardViewIntItemModel({\n                        value: field.value,\n                        key: '',\n                        label: field.label,\n                    });\n                    break;\n                case FieldType.float:\n                    item = new CardViewFloatItemModel({\n                        value: field.value,\n                        key: '',\n                        label: field.label,\n                    });\n                    break;\n                case FieldType.date:\n                    item = new CardViewDateItemModel({\n                        value: field.value ? moment(field.value) : null,\n                        key: '',\n                        label: field.label,\n                        format: 'dd MMM, yyyy'\n                    });\n                    break;\n                case FieldType.datetime:\n                    item = new CardViewDatetimeItemModel({\n                        value: field.value ? moment(field.value) : null,\n                        key: '',\n                        label: field.label,\n                        format: 'dd MMM, yyyy HH:mm'\n                    });\n                    break;\n                default:\n                    item = new CardViewTextItemModel({\n                        value: field.value,\n                        key: '',\n                        label: field.label,\n                    });\n            }\n            properties.push(item);\n        }\n        return properties;\n    }\n}\n",
        "import { CoreModule } from '@alfresco/adf-core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatProgressBarModule,\r\n    MatSelectModule,\r\n    MatTabsModule\r\n} from '@angular/material';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CovalentDialogsModule, CovalentMessageModule, CovalentSearchModule } from '@covalent/core';\r\nimport { JsonFormModule, LamisSharedModule, MatDateFormatModule } from '@lamis/web-core';\r\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgJhipsterModule } from 'ng-jhipster';\r\nimport { PatientDetailsComponent } from './components/patient-details.component';\r\nimport { PatientEditComponent } from './components/patient-edit.component';\r\nimport { PatientListComponent } from './components/patient-list.component';\r\nimport { PatientResolve, ROUTES } from './services/patient.route';\r\nimport { WidgetContainerComponent } from './components/widget-container.component';\r\nimport { TimelineComponent } from './components/timeline.component';\r\nimport { TimelineWidgetModule } from './widget/timeline.widget.module';\r\nimport { ObservationService } from './services/observation.service';\r\nimport { MatFormioModule } from 'angular-material-formio';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UniqueHospitalNumValidator } from './components/unique-hospital-num.validator';\r\nimport { CustomFormsModule } from 'ng2-validation';\r\nimport { DetailedTimelineComponent } from './components/detailed.timeline.component';\r\nimport { SummaryWidgetComponent } from './components/summary.widget.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PatientListComponent,\r\n        PatientDetailsComponent,\r\n        PatientEditComponent,\r\n        WidgetContainerComponent,\r\n        TimelineComponent,\r\n        DetailedTimelineComponent,\r\n        SummaryWidgetComponent,\r\n        UniqueHospitalNumValidator\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        NgJhipsterModule,\r\n        LamisSharedModule,\r\n        JsonFormModule,\r\n        MatFormioModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatDividerModule,\r\n        MatCardModule,\r\n        MatSelectModule,\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatTabsModule,\r\n        RouterModule.forChild(ROUTES),\r\n        MatProgressBarModule,\r\n        CovalentMessageModule,\r\n        MatListModule,\r\n        MatChipsModule,\r\n        CoreModule,\r\n        CovalentDialogsModule,\r\n        CovalentSearchModule,\r\n        NgbPaginationModule,\r\n        TimelineWidgetModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatDateFormatModule,\r\n        CustomFormsModule,\r\n    ],\r\n    exports: [\r\n        PatientListComponent,\r\n        PatientDetailsComponent,\r\n        PatientEditComponent\r\n    ],\r\n    entryComponents: [\r\n        WidgetContainerComponent,\r\n        TimelineComponent,\r\n        SummaryWidgetComponent\r\n    ],\r\n    providers: [\r\n        //PatientService,\r\n        //ObservationService,\r\n        PatientResolve\r\n    ]\r\n})\r\nexport class PatientModule {\r\n}\r\n",
        "import { Component, OnInit } from '@angular/core';\nimport { PatientService } from '../services/patient.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NotificationService } from '@alfresco/adf-core';\nimport { AppLoaderService } from '@lamis/web-core';\nimport { Patient, StatusHistory } from '../model/patient.model';\nimport * as moment_ from 'moment';\nimport { Moment } from 'moment';\nimport { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst moment = moment_;\n\n@Component({\n    selector: 'client-status',\n    templateUrl: './client-status.component.html'\n})\nexport class ClientStatusComponent implements OnInit {\n    isSaving: boolean;\n    entity: StatusHistory;\n    patient: Patient;\n    status: string;\n    statusDates: Moment[] = [];\n    today = moment();\n    statuses = ['TRACED_UNABLE_TO_LOCATE', 'TRACED_AGREED_TO_RETURN_TO_CARE', 'DID_NOT_ATTEMPT_TO_TRACE'];\n\n    constructor(private patientService: PatientService, private activatedRoute: ActivatedRoute, private router: Router,\n                private notification: NotificationService, private appLoaderService: AppLoaderService) {\n    }\n\n    createEntity(): StatusHistory {\n        return <StatusHistory>{};\n    }\n\n    ngOnInit(): void {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\n            this.patientService.findByUuid(patientId).subscribe((res) => {\n                this.entity.patient = res.body;\n                this.patient = res.body;\n                this.entity.facility = res.body.facility;\n                this.patientService.getStatusDatesByPatient(res.body.id).subscribe((res) => {\n                    this.statusDates = res;\n                });\n            });\n\n            if (this.entity.id) {\n                this.patientService.getStatusName(this.entity.id).subscribe(res => this.status = res)\n            }\n        });\n    }\n\n    filterDates(date: Moment): boolean {\n        let exists = false;\n\n        this.statusDates.forEach(d => {\n            if (date.diff(d, 'days') === 0) {\n                exists = true;\n            }\n        });\n        return (this.entity.id && date.diff(this.entity.dateStatus, 'days') === 0) || !exists;\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.appLoaderService.open('Saving Client status update...');\n        this.isSaving = true;\n        if (this.statuses.includes(this.entity.status)) {\n            this.entity.outcome = this.entity.status;\n            this.entity.status = null;\n\n            console.log('Clearing status')\n        }\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.patientService.updateClientStatus(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.patientService.saveClientStatus(this.entity));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.appLoaderService.close();\n                this.onSaveError();\n                this.onError(res.message)\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.openSnackMessage('Client status update successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.notification.openSnackMessage('Error saving status update');\n    }\n\n    protected onError(errorMessage: string) {\n        this.isSaving = false;\n        this.notification.showError(errorMessage);\n    }\n}\n",
        "import { ClientStatusComponent } from '../components/client-status.component';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes } from '@angular/router';\nimport { StatusHistory } from '../model/patient.model';\nimport { PatientService } from './patient.service';\nimport { Observable, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { filter, map } from 'rxjs/operators';\nimport { HttpResponse } from '@angular/common/http';\n\n@Injectable()\nexport class StatusResolve implements Resolve<StatusHistory> {\n    constructor(private service: PatientService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<StatusHistory> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findClientStatus(id).pipe(\n                filter((response: HttpResponse<StatusHistory>) => response.ok),\n                map((patient: HttpResponse<StatusHistory>) => patient.body)\n            );\n        }\n        return of(<StatusHistory>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Clinic Visit',\n            breadcrumb: 'CLINIC VISIT'\n        },\n        children: [\n            {\n                path: 'patient/:patientId/new',\n                component: ClientStatusComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Update Client Status',\n                    breadcrumb: 'UPDATE CLIENT STATUS'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: ClientStatusComponent,\n                resolve: {\n                    entity: StatusResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Client Status Edit',\n                    breadcrumb: 'CLIENT STATUS EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n",
        "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CovalentDialogsModule } from '@covalent/core';\nimport { CoreModule } from '@alfresco/adf-core';\nimport { JsonFormModule, LamisSharedModule, MatDateFormatModule } from '@lamis/web-core';\nimport { MatFormioModule } from 'angular-material-formio';\nimport { RouterModule } from '@angular/router';\nimport { ROUTES, StatusResolve } from './services/status.route';\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatIconModule,\n    MatInputModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatTabsModule\n} from '@angular/material';\nimport { ClientStatusComponent } from './components/client-status.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        CovalentDialogsModule,\n        LamisSharedModule,\n        JsonFormModule,\n        MatFormioModule,\n        MatInputModule,\n        MatIconModule,\n        MatDividerModule,\n        MatCardModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatCheckboxModule,\n        MatTabsModule,\n        RouterModule.forChild(ROUTES),\n        MatProgressBarModule,\n        CoreModule,\n        MatDateFormatModule\n    ],\n    declarations: [\n        ClientStatusComponent\n    ],\n    exports: [\n        ClientStatusComponent\n    ],\n    providers: [\n        StatusResolve\n    ]\n})\nexport class ClientStatusModule {\n\n}\n"
    ],
    "names": [
        "map",
        "share",
        "createRequestOption",
        "DATE_FORMAT",
        "HttpClient",
        "Inject",
        "SERVER_API_URL_CONFIG",
        "AuthServerProvider",
        "Injectable",
        "tslib_1.__param",
        "NotificationService",
        "Router",
        "ActivatedRoute",
        "tslib_1.__decorate",
        "Input",
        "Component",
        "moment",
        "ComponentFactoryResolver",
        "TdDialogService",
        "ViewContainerRef",
        "Renderer2",
        "ViewChild",
        "entityCompare",
        "AppLoaderService",
        "FormBuilder",
        "filter",
        "of",
        "PagingParamsResolve",
        "NgModule",
        "debounceTime",
        "take",
        "switchMap",
        "Directive",
        "NG_ASYNC_VALIDATORS",
        "tslib_1.__values",
        "FieldType",
        "CardViewBoolItemModel",
        "CardViewIntItemModel",
        "CardViewFloatItemModel",
        "CardViewDateItemModel",
        "CardViewDatetimeItemModel",
        "CardViewTextItemModel",
        "CommonModule",
        "NgJhipsterModule",
        "LamisSharedModule",
        "JsonFormModule",
        "MatFormioModule",
        "MatInputModule",
        "MatIconModule",
        "MatDividerModule",
        "MatCardModule",
        "MatSelectModule",
        "MatButtonModule",
        "MatCheckboxModule",
        "MatTabsModule",
        "RouterModule",
        "MatProgressBarModule",
        "CovalentMessageModule",
        "MatListModule",
        "MatChipsModule",
        "CoreModule",
        "CovalentDialogsModule",
        "CovalentSearchModule",
        "NgbPaginationModule",
        "FormsModule",
        "ReactiveFormsModule",
        "MatDateFormatModule",
        "CustomFormsModule",
        "ROUTES"
    ],
    "mappings": "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"
}

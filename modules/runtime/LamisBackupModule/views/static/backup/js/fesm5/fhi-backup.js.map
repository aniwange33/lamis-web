{
    "version": 3,
    "file": "fhi-backup.js",
    "sources": [
        "ng://fhi-backup/lib/services/backup.service.ts",
        "ng://fhi-backup/lib/components/backup.component.ts",
        "ng://fhi-backup/lib/components/restore.component.ts",
        "ng://fhi-backup/lib/services/backup.route.ts",
        "ng://fhi-backup/lib/backup.module.ts",
        "ng://fhi-backup/public_api.ts",
        "ng://fhi-backup/fhi-backup.ts"
    ],
    "sourcesContent": [
        "import { Inject, Injectable } from \"@angular/core\";\nimport { HttpClient, HttpResponse } from \"@angular/common/http\";\nimport { SERVER_API_URL_CONFIG, ServerApiUrlConfig } from \"@lamis/web-core\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class BackupService {\n    public resourceUrl = '';\n\n    constructor(private http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/backup';\n    }\n\n\n    public uploadFile(form): Observable<HttpResponse<any>> {\n        return this.http.post<any>(this.resourceUrl + '/upload', form, {'observe': 'response'})\n    }\n\n    download(): Observable<Blob> {\n        return this.http.get(`${this.resourceUrl}/download`, {responseType: 'blob'})\n    }\n\n    restore() {\n        return this.http.get<string[]>(`${this.resourceUrl}/restore`)\n    }\n\n    revert() {\n        return this.http.get<string[]>(`${this.resourceUrl}/revert`)\n    }\n\n    backupAvailable() {\n        return this.http.get<boolean>(`${this.resourceUrl}/backup-available`)\n    }\n\n    backup() {\n        return this.http.get(`${this.resourceUrl}/backup`)\n    }\n}",
        "import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { BackupService } from \"../services/backup.service\";\r\nimport { RxStompService } from \"@stomp/ng2-stompjs\";\r\nimport { Message } from '@stomp/stompjs';\r\nimport { Subscription } from \"rxjs\";\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport interface Facility {\r\n    id: number;\r\n    name: string;\r\n    selected: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'lamis-backup',\r\n    templateUrl: './backup.component.html'\r\n})\r\nexport class BackupComponent implements OnInit, OnDestroy {\r\n    private topicSubscription: Subscription;\r\n    private errorSubscription: Subscription;\r\n    running = false;\r\n    available: boolean = false;\r\n    status: any;\r\n    finished = false;\r\n\r\n    constructor(private backupService: BackupService, private stompService: RxStompService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.topicSubscription = this.stompService.watch('/topic/backup/status').subscribe((msg: Message) => {\r\n            this.status = this.status + '\\n' + msg.body;\r\n            if(msg.body === 'Backup completed'){\r\n                this.running = false;\r\n                this.available = true;\r\n            }\r\n        });\r\n        this.errorSubscription = this.stompService.watch('/topic/backup/error').subscribe((msg: Message) => {\r\n            this.status = 'Could not backup database; an error occurred';\r\n            this.running = false;\r\n        });\r\n\r\n        this.backupService.backupAvailable().subscribe((res: boolean) => this.available = res)\r\n    }\r\n\r\n    backup() {\r\n        this.running = true;\r\n        this.available = false;\r\n        this.backupService.backup().subscribe(res => this.running = false)\r\n    }\r\n\r\n    download() {\r\n        this.backupService.download().subscribe(res => {\r\n            const file = new File([res], name + 'backup.dump', {type: 'application/octet-stream'});\r\n            saveAs(file);\r\n        });\r\n    }\r\n\r\n\r\n    ngOnDestroy(): void {\r\n        this.topicSubscription.unsubscribe();\r\n        this.errorSubscription.unsubscribe();\r\n    }\r\n}\r\n",
        "import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { BackupService } from \"../services/backup.service\";\nimport { RxStompService } from \"@stomp/ng2-stompjs\";\nimport { AppLoaderService } from \"@lamis/web-core\";\nimport { Subscription } from \"rxjs\";\nimport { Message } from \"@stomp/stompjs\";\n\n@Component({\n    selector: 'lamis-restore',\n    templateUrl: './restore.component.html',\n    styleUrls: ['./restore.component.scss']\n})\nexport class RestoreComponent implements OnInit, OnDestroy {\n    files: any;\n    submitted = false;\n    running = false;\n    available: boolean = false;\n    status: any;\n    topicSubscription: Subscription;\n    errorSubscription: Subscription;\n\n    constructor(private backupService: BackupService, private stompService: RxStompService,\n                private loaderService: AppLoaderService) {\n    }\n\n    ngOnDestroy(): void {\n        this.topicSubscription.unsubscribe();\n        this.errorSubscription.unsubscribe();\n    }\n\n    ngOnInit(): void {\n        this.topicSubscription = this.stompService.watch('/topic/backup/status').subscribe((msg: Message) => {\n            this.status = this.status + '\\n' + msg.body;\n            this.running = msg.body !== 'Restore completed';\n        });\n        this.errorSubscription = this.stompService.watch('/topic/backup/error').subscribe((msg: Message) => {\n            this.status = 'Could not restore database; an error occurred';\n            this.running = false;\n        });\n        this.backupService.backupAvailable().subscribe((res: boolean) => this.available = res)\n    }\n\n    upload() {\n        const formData = new FormData();\n        formData.append('file', this.files);\n        this.loaderService.open('Uploading file: please wait...');\n        this.backupService.uploadFile(formData).subscribe(res=> {\n            this.loaderService.close();\n            this.submitted = true;\n        })\n    }\n\n    restore() {\n        this.status = 'Starting restore';\n        this.submitted = false;\n        this.backupService.restore().subscribe();\n    }\n\n    revert() {\n        this.running = true;\n        this.backupService.revert().subscribe();\n    }\n\n}",
        "import { Routes } from '@angular/router';\nimport { BackupComponent } from '../components/backup.component';\nimport { RestoreComponent } from '../components/restore.component';\n\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Backup/ Restore',\n            breadcrumb: 'BACKUP/ RESTORE'\n        },\n        children: [\n            {\n                path: 'backup',\n                component: BackupComponent,\n                data: {\n                    breadcrumb: 'BACKUP'\n                },\n            },\n            {\n                path: 'restore',\n                component: RestoreComponent,\n                data: {\n                    breadcrumb: 'RESTORE'\n                },\n            }\n        ]\n    }\n];\n\n",
        "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatTabsModule\r\n} from '@angular/material';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BackupComponent } from './components/backup.component';\r\nimport { BackupService } from \"./services/backup.service\";\r\nimport { ROUTES } from \"./services/backup.route\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { RestoreComponent } from \"./components/restore.component\";\r\nimport { CovalentCommonModule, CovalentFileModule } from \"@covalent/core\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        BackupComponent,\r\n        RestoreComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MatInputModule,\r\n        MatIconModule,\r\n        MatDividerModule,\r\n        MatCardModule,\r\n        MatButtonModule,\r\n        MatTabsModule,\r\n        RouterModule.forChild(ROUTES),\r\n        CovalentCommonModule,\r\n        CovalentFileModule\r\n    ],\r\n    exports: [\r\n        BackupComponent,\r\n        RestoreComponent\r\n    ],\r\n    providers: [\r\n        BackupService\r\n    ]\r\n})\r\nexport class BackupModule {\r\n}\r\n",
        "/*\r\n * Public API Surface of Backup Module\r\n */\r\n\r\nexport * from './lib/components/backup.component';\r\nexport * from './lib/components/restore.component';\r\nexport * from './lib/services/backup.service';\r\nexport * from './lib/backup.module';\r\nexport * from './lib/services/backup.route';\r\n",
        "/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"
    ],
    "names": [
        "tslib_1.__param"
    ],
    "mappings": "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"
}

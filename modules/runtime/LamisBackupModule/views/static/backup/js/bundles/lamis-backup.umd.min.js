!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common/http"),require("@lamis/web-core"),require("@stomp/ng2-stompjs"),require("file-saver"),require("@angular/common"),require("@angular/material"),require("@angular/router"),require("@angular/forms"),require("@covalent/core")):"function"==typeof define&&define.amd?define("lamis-backup",["exports","@angular/core","@angular/common/http","@lamis/web-core","@stomp/ng2-stompjs","file-saver","@angular/common","@angular/material","@angular/router","@angular/forms","@covalent/core"],e):e((t=t||self)["lamis-backup"]={},t.ng.core,t.ng.common.http,t.webCore,t.ng2Stompjs,t.fileSaver,t.ng.common,t.ng.material,t.ng.router,t.ng.forms,t.core$1)}(this,(function(t,e,r,n,o,i,a,c,s,u,p){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function l(t,e,r,n){var o,i=arguments.length,a=i<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,r,n);else for(var c=t.length-1;c>=0;c--)(o=t[c])&&(a=(i<3?o(a):i>3?o(e,r,a):o(e,r))||a);return i>3&&a&&Object.defineProperty(e,r,a),a}function d(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}var b=function(){function t(t,e){this.http=t,this.serverUrl=e,this.resourceUrl="",this.resourceUrl=e.SERVER_API_URL+"/api/backup"}var o,i;return t.prototype.uploadFile=function(t){return this.http.post(this.resourceUrl+"/upload",t,{observe:"response"})},t.prototype.download=function(){return this.http.get(this.resourceUrl+"/download",{responseType:"blob"})},t.prototype.restore=function(){return this.http.get(this.resourceUrl+"/restore")},t.prototype.revert=function(){return this.http.get(this.resourceUrl+"/revert")},t.prototype.backupAvailable=function(){return this.http.get(this.resourceUrl+"/backup-available")},t.prototype.backup=function(){return this.http.get(this.resourceUrl+"/backup")},t.ctorParameters=function(){return[{type:r.HttpClient},{type:void 0,decorators:[{type:e.Inject,args:[n.SERVER_API_URL_CONFIG]}]}]},t=l([e.Injectable(),(o=1,i=e.Inject(n.SERVER_API_URL_CONFIG),function(t,e){i(t,e,o)}),d("design:paramtypes",[r.HttpClient,Object])],t)}(),m=function(){function t(t,e){this.backupService=t,this.stompService=e,this.running=!1,this.available=!1,this.finished=!1}return t.prototype.ngOnInit=function(){var t=this;this.topicSubscription=this.stompService.watch("/topic/backup/status").subscribe((function(e){t.status=e.body+"\n"+t.status,"Backup completed"===e.body&&(t.running=!1,t.available=!0)})),this.errorSubscription=this.stompService.watch("/topic/backup/error").subscribe((function(e){t.status="Could not backup database; an error occurred",t.running=!1})),this.backupService.backupAvailable().subscribe((function(e){return t.available=e}))},t.prototype.backup=function(){var t=this;this.running=!0,this.available=!1,this.backupService.backup().subscribe((function(e){return t.running=!1}))},t.prototype.download=function(){this.backupService.download().subscribe((function(t){var e=new File([t],name+"backup.dump",{type:"application/octet-stream"});i.saveAs(e)}))},t.prototype.ngOnDestroy=function(){this.topicSubscription.unsubscribe(),this.errorSubscription.unsubscribe()},t.ctorParameters=function(){return[{type:b},{type:o.RxStompService}]},t=l([e.Component({selector:"lamis-backup",template:'<div class="lamis-edit-form">\r\n    <div class="lamis-edit-form-container">\r\n        <mat-card>\r\n            <mat-card-content>\r\n                <mat-form-field *ngIf="!!status">\r\n                    <textarea matInput placeholder="Status" [value]="status"\r\n                              rows="20"\r\n                              [disabled]="true"></textarea>\r\n                </mat-form-field>\r\n                <mat-divider></mat-divider>\r\n                <mat-card-actions>\r\n                    <button mat-raised-button color="primary" [disabled]="running"\r\n                            class="text-upper"\r\n                            (click)="backup()">Create New Backup\r\n                    </button>\r\n                    <button mat-button color="accent" [disabled]="!available" class="text-upper"\r\n                            (click)="download()">Download Backup\r\n                    </button>\r\n                </mat-card-actions>\r\n            </mat-card-content>\r\n        </mat-card>\r\n    </div>\r\n</div>'}),d("design:paramtypes",[b,o.RxStompService])],t)}(),f=function(){function t(t,e,r){this.backupService=t,this.stompService=e,this.loaderService=r,this.submitted=!1,this.running=!1,this.available=!1}return t.prototype.ngOnDestroy=function(){this.topicSubscription.unsubscribe(),this.errorSubscription.unsubscribe()},t.prototype.ngOnInit=function(){var t=this;this.topicSubscription=this.stompService.watch("/topic/backup/status").subscribe((function(e){t.status=e.body+"\n"+t.status,t.running="Restore completed"!==e.body})),this.errorSubscription=this.stompService.watch("/topic/backup/error").subscribe((function(e){t.status="Could not restore database; an error occurred",t.running=!1})),this.backupService.backupAvailable().subscribe((function(e){return t.available=e}))},t.prototype.upload=function(){var t=this,e=new FormData;e.append("file",this.files),this.loaderService.open("Uploading file: please wait..."),this.backupService.uploadFile(e).subscribe((function(e){t.loaderService.close(),t.submitted=!0}))},t.prototype.restore=function(){this.status="Starting restore",this.submitted=!1,this.backupService.restore().subscribe()},t.prototype.revert=function(){this.running=!0,this.backupService.revert().subscribe()},t.ctorParameters=function(){return[{type:b},{type:o.RxStompService},{type:n.AppLoaderService}]},t=l([e.Component({selector:"lamis-restore",template:'<div class="lamis-edit-form">\n    <div class="lamis-edit-form-container">\n        <mat-card>\n            <mat-card-content>\n                <div layout="row">\n                    <mat-form-field tdFileDrop\n                                    (fileDrop)="files = $event"\n                                    (click)="fileInput.inputElement.click()"\n                                    (keyup.enter)="fileInput.inputElement.click()"\n                                    (keyup.delete)="fileInput.clear()"\n                                    (keyup.backspace)="fileInput.clear()"\n                                    flex>\n                        <input matInput\n                               placeholder="Select or drop a file"\n                               [value]="files?.length ? (files?.length + \' files\') : files?.name"\n                               readonly/>\n                    </mat-form-field>\n                    <button mat-icon-button *ngIf="files" (click)="fileInput.clear()" (keyup.enter)="fileInput.clear()">\n                        <mat-icon>cancel</mat-icon>\n                    </button>\n                    <td-file-input class="push-left-sm push-right-sm" #fileInput [(ngModel)]="files">\n                        <mat-icon>folder</mat-icon>\n                        <span class="text-upper">Browse...</span>\n                    </td-file-input>\n                    <span>\n                <button mat-raised-button color="accent" [disabled]="!files || running" class="text-upper"\n                        (click)="upload()">Upload</button>\n            </span>\n                </div>\n                <mat-form-field *ngIf="!!status">\n                    <textarea matInput placeholder="Status" [value]="status"\n                              rows="20"\n                              [disabled]="true"></textarea>\n                </mat-form-field>\n                <mat-divider></mat-divider>\n                <mat-card-actions>\n                    <button mat-button [disabled]="running || !available" class="text-upper"\n                    (click)="revert()">Revert to Previous backup\n                    </button>\n                    <button mat-raised-button color="primary" [disabled]="running || !submitted" class="text-upper"\n                            (click)="restore()">Restore\n                    </button>\n                </mat-card-actions>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>',styles:[".drop-zone{font-weight:600}.drop-zone ::ng-deep *{pointer-events:none}"]}),d("design:paramtypes",[b,o.RxStompService,n.AppLoaderService])],t)}(),h={title:"Backup/ Restore",breadcrumb:"BACKUP/ RESTORE"},v={breadcrumb:"BACKUP"},g={breadcrumb:"RESTORE"},y=[{path:"",data:h,children:[{path:"backup",component:m,data:v},{path:"restore",component:f,data:g}]}],k=function(){function t(){}return t=l([e.NgModule({declarations:[m,f],imports:[a.CommonModule,u.FormsModule,c.MatInputModule,c.MatIconModule,c.MatDividerModule,c.MatCardModule,c.MatButtonModule,c.MatTabsModule,s.RouterModule.forChild(y),p.CovalentCommonModule,p.CovalentFileModule],exports:[m,f],providers:[b]})],t)}();t.BackupComponent=m,t.BackupModule=k,t.BackupService=b,t.ROUTES=y,t.RestoreComponent=f,t.ɵ0=h,t.ɵ1=v,t.ɵ2=g,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=lamis-backup.umd.min.js.map
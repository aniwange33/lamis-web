{"__symbolic":"module","version":4,"metadata":{"Patient":{"__symbolic":"interface"},"RegimenType":{"__symbolic":"interface"},"Regimen":{"__symbolic":"interface"},"Drug":{"__symbolic":"interface"},"DrugDTO":{"__symbolic":"interface"},"RegimenDrug":{"__symbolic":"interface"},"Adr":{"__symbolic":"interface"},"PharmacyAdr":{"__symbolic":"interface"},"PharmacyLine":{"__symbolic":"interface"},"Pharmacy":{"__symbolic":"interface"},"RegimenInfo":{"__symbolic":"interface"},"CommunityPharmacy":{"__symbolic":"interface"},"RelatedClinic":{"__symbolic":"interface"},"RelatedPharmacy":{"__symbolic":"interface"},"RelatedViralLoad":{"__symbolic":"interface"},"RelatedCD4":{"__symbolic":"interface"},"Devolve":{"__symbolic":"interface"},"StatusHistory":{"__symbolic":"interface"},"PharmacyService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":24,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":28,"character":45},"arguments":[{"__symbolic":"reference","module":"@lamis/web-core","name":"SERVER_API_URL_CONFIG","line":28,"character":52}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":28,"character":32},{"__symbolic":"reference","module":"@lamis/web-core","name":"ServerApiUrlConfig","line":28,"character":94}]}],"create":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"find":[{"__symbolic":"method"}],"findByUuid":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"getPatient":[{"__symbolic":"method"}],"getVisitDatesByPatient":[{"__symbolic":"method"}],"hasDeadStatus":[{"__symbolic":"method"}],"regimenTypes":[{"__symbolic":"method"}],"regimenInfo":[{"__symbolic":"method"}],"adrs":[{"__symbolic":"method"}],"getLinesByPharmacy":[{"__symbolic":"method"}],"regimesByRegimenType":[{"__symbolic":"method"}],"getDrugsByRegimen":[{"__symbolic":"method"}],"getRegimenById":[{"__symbolic":"method"}],"latestVisit":[{"__symbolic":"method"}],"getDevolvement":[{"__symbolic":"method"}],"convertDateFromClient":[{"__symbolic":"method"}],"convertDateFromServer":[{"__symbolic":"method"}],"convertDateArrayFromServer":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"PharmacyModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":24,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":30,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":31,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":32,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule","line":33,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":34,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":35,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":36,"character":8},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"ɵd"}]},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressBarModule","line":37,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":38,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentMessageModule","line":39,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentDialogsModule","line":40,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatTableModule","line":41,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatListModule","line":42,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":43,"character":8},{"__symbolic":"reference","name":"PharmacyWidgetModule"},{"__symbolic":"reference","module":"@swimlane/ngx-datatable","name":"NgxDatatableModule","line":45,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":46,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"MatDateFormatModule","line":47,"character":8},{"__symbolic":"reference","module":"ng2-validation","name":"CustomFormsModule","line":48,"character":8}],"exports":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"}],"entryComponents":[],"providers":[{"__symbolic":"reference","name":"ɵc"}]}]}],"members":{}},"PharmacyWidgetModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":6,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":8,"character":8},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":10,"character":8}],"declarations":[{"__symbolic":"reference","name":"ɵg"}],"entryComponents":[{"__symbolic":"reference","name":"ɵg"}],"exports":[{"__symbolic":"reference","name":"ɵg"}],"providers":[]}]}],"members":{}},"DevolveModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":20,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":22,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":23,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":24,"character":8},"member":"forChild"},"arguments":[{"__symbolic":"reference","name":"ɵi"}]},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":25,"character":8},{"__symbolic":"reference","module":"ng2-validation","name":"CustomFormsModule","line":26,"character":8},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"CoreModule","line":27,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatDatepickerModule","line":28,"character":8},{"__symbolic":"reference","module":"@lamis/web-core","name":"MatDateFormatModule","line":29,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":30,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":31,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule","line":32,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":33,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentCommonModule","line":34,"character":8},{"__symbolic":"reference","module":"@covalent/core","name":"CovalentDialogsModule","line":35,"character":8}],"declarations":[{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"reference","name":"ɵm"}],"providers":[{"__symbolic":"reference","name":"ɵh"}]}]}],"members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":19,"character":1},"arguments":[{"selector":"lamis-pharmacy","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <mat-card>\n            <mat-card-header>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-card-view [properties]=\"properties\" editable=\"false\"></adf-card-view>\n                <mat-divider></mat-divider>\n                <ngx-datatable\n                    #mydatatable\n                    *ngIf=\"dataSource\"\n                    class=\"material\"\n                    [headerHeight]=\"50\"\n                    [limit]=\"8\"\n                    [columnMode]=\"ColumnMode.force\"\n                    [footerHeight]=\"50\"\n                    rowHeight=\"auto\"\n                    [rows]=\"dataSource\"\n                >\n                    <ngx-datatable-column name=\"Description\" [prop]=\"'description'\">\n                        <ng-template ngx-datatable-cell-template let-value=\"value\">\n                            <mat-form-field>\n                                <input matInput disabled [value]=\"value\" style=\"font-weight: 900\">\n                            </mat-form-field>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Morning\" [prop]=\"'morning'\">\n                        <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                     let-row=\"row\">\n                            <mat-form-field>\n                                <input matInput disabled [value]=\"value\" style=\"font-weight: 900\">\n                            </mat-form-field>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Afternoon\" [prop]=\"'afternoon'\">\n                        <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                     let-row=\"row\">\n                            <mat-form-field>\n                                <input matInput disabled [value]=\"value\" style=\"font-weight: 900\">\n                            </mat-form-field>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Evening\" [prop]=\"'evening'\">\n                        <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                     let-row=\"row\">\n                            <mat-form-field>\n                                <input matInput disabled [value]=\"value\" style=\"font-weight: 900\">\n                            </mat-form-field>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Duration\" [prop]=\"'duration'\">\n                        <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                     let-row=\"row\">\n                            <mat-form-field>\n                                <input matInput disabled [value]=\"value\" style=\"font-weight: 900\">\n                            </mat-form-field>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Quantity\" [prop]=\"'quantity'\">\n                        <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                     let-row=\"row\">\n                            <mat-form-field>\n                                <input matInput disabled [value]=\"value\" style=\"font-weight: 900\">\n                            </mat-form-field>\n                        </ng-template>\n                    </ngx-datatable-column>\n                </ngx-datatable>\n            </mat-card-content>\n            <mat-card-actions class=\"lamis-edit-form-actions\">\n                <button mat-button (click)=\"previousState()\">Back</button>\n                <button mat-raised-button color=\"warn\" (click)=\"delete()\">Delete</button>\n                <button mat-raised-button color=\"primary\" (click)=\"edit()\">Edit</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":29,"character":32},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":29,"character":55},{"__symbolic":"reference","name":"PharmacyService"},{"__symbolic":"reference","module":"@covalent/core","name":"TdDialogService","line":30,"character":40},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":31,"character":45}]}],"ngOnInit":[{"__symbolic":"method"}],"edit":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"buildProperties":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"selector":"lamis-pharmacy-edit","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #pharmacyForm=\"ngForm\">\n            <mat-card class=\"default\">\n                <mat-card-header>\n                </mat-card-header>\n                <mat-card-content *ngIf=\"patient\">\n                    <div>\n                        <mat-form-field class=\"full-width\" *ngIf=\"entity && dateRegistration\">\n                            <input matInput [matDatepicker]=\"picker\"\n                                   placeholder=\"Date of Dispensing\"\n                                   [(ngModel)]=\"entity.dateVisit\"\n                                   [matDatepickerFilter]=\"filterDates.bind(this)\"\n                                   (dateChange)=\"dateVisitChanged($event.value)\"\n                                   #visit=\"ngModel\"\n                                   [max]=\"today\"\n                                   [min]=\"dateRegistration\"\n                                   name=\"visit\"\n                                   required>\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.required)\">\n                                Date of dispensing is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.min)\">\n                                Date of dispensing cannot be before {{dateRegistration | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.max)\">\n                                Date of dispensing cannot be in the future\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"row\" *ngIf=\"devolve && !devolve.dateReturnedToFacility\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Date of Devolvement</mat-label>\n                                <input matInput disabled value=\"{{devolve.dateDevolved | date: 'dd MMM, yyyy'}}\">\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>DMOC Type</mat-label>\n                                <input matInput disabled [value]=\"dmocType\">\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <mat-select [(ngModel)]=\"entity.duration\"\n                                        placeholder=\"Refill Period (days)\"\n                                        (selectionChange)=\"durationChanged($event.value)\"\n                                        #refill=\"ngModel\" required name=\"refill\">\n                                <mat-option></mat-option>\n                                <mat-option [value]=\"15\">15</mat-option>\n                                <mat-option [value]=\"30\">30</mat-option>\n                                <mat-option [value]=\"60\">60</mat-option>\n                                <mat-option [value]=\"90\">90</mat-option>\n                                <mat-option [value]=\"120\">120</mat-option>\n                                <mat-option [value]=\"150\">150</mat-option>\n                                <mat-option [value]=\"180\">180</mat-option>\n                            </mat-select>\n                            <mat-error\n                                    *ngIf=\"refill.errors && (refill.dirty || refill.touched) && (refill.errors.required)\">\n                                Refill Duration is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div *ngIf=\"minNextAppointment\">\n                        <mat-form-field class=\"full-width\">\n                            <input matInput [matDatepicker]=\"picker1\"\n                                   placeholder=\"Date of Next Appointment\"\n                                   [(ngModel)]=\"entity.nextAppointment\"\n                                   #next=\"ngModel\"\n                                   [min]=\"minNextAppointment\"\n                                   [max]=\"maxNextVisit\"\n                                   name=\"next\"\n                                   required>\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker1\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker1></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"next.errors && (next.dirty || next.touched) && (next.errors.required)\">\n                                Date of Next Appointment is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"next.errors && (next.dirty || next.touched) && (next.errors.max)\">\n                                Date of Next Appointment must be after {{maxNextVisit | date:'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"next.errors && (next.dirty || next.touched) && (next.errors.min)\">\n                                Date of Next Appointment must be after {{minNextAppointment | date:'dd MMM, yyyy'}}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\" *ngIf=\"entity.mmdType\">\n                            <mat-label>MMD Type</mat-label>\n                            <input matInput disabled [value]=\"entity.mmdType || ''\">\n                        </mat-form-field>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-checkbox [(ngModel)]=\"entity.prescriptionError\" name=\"error\">Any prescription error?\n                            </mat-checkbox>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-checkbox [(ngModel)]=\"entity.adrScreened\" name=\"screened\">Adverse Drug Reactions\n                            </mat-checkbox>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field *ngIf=\"entity.adrScreened\">\n                                <mat-select multiple [(ngModel)]=\"entity.adrs\"\n                                            name=\"adrs\"\n                                >\n                                    <mat-option></mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field>\n                                <mat-select placeholder=\"Regimen Type\"\n                                            (selectionChange)=\"regimenTypeChange($event.value)\">\n                                    <mat-option></mat-option>\n                                    <mat-option *ngFor=\"let type of regimenTypes\"\n                                                [value]=\"type\">{{type.description}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field>\n                                <mat-select placeholder=\"Regimen\"\n                                            multiple\n                                            name=\"regimen\"\n                                            [(ngModel)]=\"selectedRegimens\"\n                                            [compareWith]=\"entityCompare\"\n                                            (selectionChange)=\"regimenChange($event.value)\">\n                                    <mat-option *ngFor=\"let regimen of regimens\"\n                                                [value]=\"regimen\">{{regimen.description}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div>\n                        Drug Dispensed\n                        <mat-divider></mat-divider>\n                        <ngx-datatable\n                            #mydatatable\n                            class=\"material\"\n                            [headerHeight]=\"50\"\n                            [limit]=\"8\"\n                            [columnMode]=\"ColumnMode.force\"\n                            [footerHeight]=\"50\"\n                            rowHeight=\"auto\"\n                            [rows]=\"rows\"\n                        >\n                            <ngx-datatable-column name=\"Description\">\n                                <ng-template ngx-datatable-cell-template let-value=\"value\">\n                                    <mat-form-field>\n                                        <input matInput disabled [value]=\"value\" style=\"font-weight: 900\">\n                                    </mat-form-field>\n                                </ng-template>\n                            </ngx-datatable-column>\n                            <ngx-datatable-column [maxWidth]=\"1\">\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                             let-row=\"row\">\n                                </ng-template>\n                            </ngx-datatable-column>\n                            <ngx-datatable-column name=\"Morning\">\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                             let-row=\"row\">\n                                    <mat-form-field class=\"full-width\">\n                                        <input\n                                                autofocus\n                                                matInput\n                                                type=\"number\"\n                                                (blur)=\"updateValue($event, 'morning', rowIndex)\"\n                                                [value]=\"value\"\n                                        >\n                                    </mat-form-field>\n                                </ng-template>\n                            </ngx-datatable-column>\n                            <ngx-datatable-column [maxWidth]=\"1\">\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                             let-row=\"row\">\n                                </ng-template>\n                            </ngx-datatable-column>\n                            <ngx-datatable-column name=\"Afternoon\">\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                             let-row=\"row\">\n                                    <mat-form-field class=\"full-width\">\n                                        <input\n                                                autofocus\n                                                matInput\n                                                type=\"number\"\n                                                (blur)=\"updateValue($event, 'afternoon', rowIndex)\"\n                                                [value]=\"value\"\n                                        >\n                                    </mat-form-field>\n                                </ng-template>\n                            </ngx-datatable-column>\n                            <ngx-datatable-column [maxWidth]=\"1\">\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                             let-row=\"row\">\n                                </ng-template>\n                            </ngx-datatable-column>\n                            <ngx-datatable-column name=\"Evening\">\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                             let-row=\"row\">\n                                    <mat-form-field class=\"full-width\">\n                                        <input\n                                                autofocus\n                                                matInput\n                                                type=\"number\"\n                                                (blur)=\"updateValue($event, 'evening', rowIndex)\"\n                                                [value]=\"value\"\n                                        >\n                                    </mat-form-field>\n                                </ng-template>\n                            </ngx-datatable-column>\n                            <ngx-datatable-column [maxWidth]=\"1\">\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                             let-row=\"row\">\n                                </ng-template>\n                            </ngx-datatable-column>\n                            <ngx-datatable-column name=\"Duration\">\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                             let-row=\"row\">\n                                    <mat-form-field class=\"full-width\">\n                                        <input\n                                                autofocus\n                                                matInput\n                                                type=\"number\"\n                                                (blur)=\"updateValue($event, 'duration', rowIndex)\"\n                                                [value]=\"value\"\n                                        >\n                                    </mat-form-field>\n                                </ng-template>\n                            </ngx-datatable-column>\n                            <ngx-datatable-column [maxWidth]=\"1\">\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                             let-row=\"row\">\n                                </ng-template>\n                            </ngx-datatable-column>\n                            <ngx-datatable-column name=\"Quantity\">\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\n                                             let-row=\"row\">\n                                    <mat-form-field>\n                                        <input matInput disabled [value]=\"value\" style=\"font-weight: 900\">\n                                    </mat-form-field>\n                                </ng-template>\n                            </ngx-datatable-column>\n                        </ngx-datatable>\n                    </div>\n                    <mat-divider></mat-divider>\n                </mat-card-content>\n                <ng-container *ngIf=\"iptSelected\">\n                    <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            <mat-form-field>\n                                <mat-label>IPT Type</mat-label>\n                                <mat-select required [(ngModel)]=\"ipt.type\" name=\"inh\" #inh=\"ngModel\">\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'START_INITIATION'\">Start Initiation</mat-option>\n                                    <mat-option [value]=\"'START_REFILL'\">Start Refill</mat-option>\n                                    <mat-option [value]=\"'FOLLOWUP_INITIATION'\">Followup Initiation</mat-option>\n                                    <mat-option [value]=\"'FOLLOWUP_REFILL'\">Followup Refill</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"inh.errors && (inh.dirty || inh.touched) && (inh.errors.required)\">\n                                    IPT Type is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-checkbox [(ngModel)]=\"ipt.completed\"\n                                          name=\"uibn\"\n                            >\n                                IPT completed?\n                            </mat-checkbox>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\" *ngIf=\"entity.dateVisit && ipt.completed\">\n                                <input matInput [matDatepicker]=\"picker2\"\n                                       placeholder=\"Date of Completion\"\n                                       [(ngModel)]=\"ipt.dateCompleted\"\n                                       #com=\"ngModel\"\n                                       [min]=\"entity.dateVisit\"\n                                       name=\"com\"\n                                       required>\n                                <mat-datepicker-toggle\n                                        matSuffix\n                                        [for]=\"picker2\">\n                                </mat-datepicker-toggle>\n                                <mat-datepicker #picker2></mat-datepicker>\n                                <mat-error\n                                        *ngIf=\"com.errors && (com.dirty || com.touched) && (com.errors.required)\">\n                                    Date completed is required\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"com.errors && (com.dirty || com.touched) && (com.errors.min)\">\n                                    Date must not be before {{entity.dateVisit | date:'dd MMM, yyyy'}}\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </ng-container>\n                <mat-card-actions class=\"lamis-edit-form-actions\">\n                    <button mat-raised-button type=\"button\" (click)=\"previousState()\">Back</button>\n                    <button mat-raised-button color='primary'\n                            [disabled]=\"pharmacyForm.invalid || rows.length === 0 || isSaving\"\n                            type=\"submit\">\n                        {{entity.id !== undefined ? 'Update' : 'Save'}}\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </form>\n    </div>\n</div>\n"}]}],"members":{"progressBar":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":33,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MatProgressBar","line":33,"character":15},{"static":true}]}]}],"submitButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":34,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material","name":"MatButton","line":34,"character":15},{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"PharmacyService"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":61,"character":40},{"__symbolic":"reference","module":"@lamis/web-core","name":"AppLoaderService","line":62,"character":42},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":63,"character":42}]}],"createEntity":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"dateVisitChanged":[{"__symbolic":"method"}],"suggestedNextAppointment":[{"__symbolic":"method"}],"updateDmocType":[{"__symbolic":"method"}],"filterDates":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}],"entityCompare":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"regimenTypeChange":[{"__symbolic":"method"}],"durationChanged":[{"__symbolic":"method"}],"iptTypes":[{"__symbolic":"method"}],"regimenChange":[{"__symbolic":"method"}],"updateValue":[{"__symbolic":"method"}],"subscribeToSaveResponse":[{"__symbolic":"method"}],"onSaveSuccess":[{"__symbolic":"method"}],"onSaveError":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":10,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"PharmacyService"}]}],"resolve":[{"__symbolic":"method"}]}},"ɵd":[{"path":"","data":{"title":"Pharmacy Refill","breadcrumb":"PHARMACY REFILL"},"children":[{"path":":id/patient/:patientId/view","component":{"__symbolic":"reference","name":"ɵa"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵc"}},"data":{"authorities":["ROLE_USER"],"title":"Pharmacy Refill","breadcrumb":"PHARMACY REFILL"}},{"path":"patient/:patientId/new","component":{"__symbolic":"reference","name":"ɵb"},"data":{"authorities":["ROLE_DEC"],"title":"Pharmacy Refill","breadcrumb":"ADD PHARMACY REFILL"}},{"path":":id/patient/:patientId/edit","component":{"__symbolic":"reference","name":"ɵb"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵc"}},"data":{"authorities":["ROLE_DEC"],"title":"Pharmacy Refill Edit","breadcrumb":"PHARMACY REFILL EDIT"}}]}],"ɵe":{"__symbolic":"function","parameters":[],"value":[{"__symbolic":"reference","module":"@angular/material","name":"MatAutocompleteModule","line":51,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatButtonModule","line":51,"character":31},{"__symbolic":"reference","module":"@angular/material","name":"MatCardModule","line":51,"character":48},{"__symbolic":"reference","module":"@angular/material","name":"MatCheckboxModule","line":51,"character":63},{"__symbolic":"reference","module":"@angular/material","name":"MatChipsModule","line":52,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatDatepickerModule","line":52,"character":24},{"__symbolic":"reference","module":"@angular/material","name":"MatDialogModule","line":52,"character":45},{"__symbolic":"reference","module":"@angular/material","name":"MatGridListModule","line":52,"character":62},{"__symbolic":"reference","module":"@angular/material","name":"MatIconModule","line":52,"character":81},{"__symbolic":"reference","module":"@angular/material","name":"MatInputModule","line":53,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatListModule","line":53,"character":24},{"__symbolic":"reference","module":"@angular/material","name":"MatNativeDateModule","line":53,"character":39},{"__symbolic":"reference","module":"@angular/material","name":"MatOptionModule","line":53,"character":60},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressSpinnerModule","line":53,"character":77},{"__symbolic":"reference","module":"@angular/material","name":"MatRadioModule","line":53,"character":103},{"__symbolic":"reference","module":"@angular/material","name":"MatRippleModule","line":54,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatSelectModule","line":54,"character":25},{"__symbolic":"reference","module":"@angular/material","name":"MatSlideToggleModule","line":54,"character":42},{"__symbolic":"reference","module":"@angular/material","name":"MatTableModule","line":54,"character":64},{"__symbolic":"reference","module":"@angular/material","name":"MatTabsModule","line":54,"character":80},{"__symbolic":"reference","module":"@angular/material","name":"MatMenuModule","line":55,"character":8},{"__symbolic":"reference","module":"@angular/material","name":"MatProgressBarModule","line":55,"character":23},{"__symbolic":"reference","module":"@angular/material","name":"MatSidenavModule","line":55,"character":45},{"__symbolic":"reference","module":"@angular/material","name":"MatSnackBarModule","line":55,"character":63},{"__symbolic":"reference","module":"@angular/material","name":"MatToolbarModule","line":55,"character":82},{"__symbolic":"reference","module":"@angular/material","name":"MatTooltipModule","line":56,"character":8},{"__symbolic":"reference","module":"@mat-datetimepicker/core","name":"MatDatetimepickerModule","line":56,"character":26},{"__symbolic":"reference","module":"@mat-datetimepicker/core","name":"MatNativeDatetimeModule","line":56,"character":51}]},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":60,"character":1},"arguments":[{"imports":{"__symbolic":"call","expression":{"__symbolic":"reference","name":"ɵe"}},"exports":{"__symbolic":"call","expression":{"__symbolic":"reference","name":"ɵe"}}}]}],"members":{}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"pharmacy-widget","template":"<adf-card-view [properties]=\"properties\"></adf-card-view>\n"}]}],"members":{"patientId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"PharmacyService"}]}],"ngOnInit":[{"__symbolic":"method"}],"buildProperties":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":11,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵk"}]}],"resolve":[{"__symbolic":"method"}]}},"ɵi":[{"path":"","data":{"title":"Client Devolvement","breadcrumb":"CLIENT DEVOLVEMENT"},"children":[{"path":":id/patient/:patientId/view","component":{"__symbolic":"reference","name":"ɵj"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵh"}},"data":{"authorities":["ROLE_USER"],"title":"Client Devolve","breadcrumb":"CLIENT DEVOLVE"}},{"path":"patient/:patientId/new","component":{"__symbolic":"reference","name":"ɵl"},"data":{"authorities":["ROLE_DEC"],"title":"Client Devolve","breadcrumb":"DEVOLVE CLIENT"}},{"path":":id/patient/:patientId/edit","component":{"__symbolic":"reference","name":"ɵl"},"resolve":{"entity":{"__symbolic":"reference","name":"ɵh"}},"data":{"authorities":["ROLE_DEC"],"title":"Devolve Edit","breadcrumb":"DEVOLVE EDIT"}},{"path":"return/patient/:patientId/new","component":{"__symbolic":"reference","name":"ɵm"},"data":{"authorities":["ROLE_DEC"],"title":"End Devolve","breadcrumb":"END CLIENT DEVOLVE"}}]}],"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"devolve-details","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <mat-card>\n            <mat-card-header>\n            </mat-card-header>\n            <mat-card-content>\n                <adf-card-view [properties]=\"properties\" editable=\"false\"></adf-card-view>\n                <mat-divider></mat-divider>\n            </mat-card-content>\n            <mat-card-actions class=\"lamis-edit-form-actions\">\n                <button mat-button (click)=\"previousState()\">Back</button>\n                <button mat-raised-button color=\"warn\" (click)=\"delete()\">Delete</button>\n                <button mat-raised-button color=\"primary\" (click)=\"edit()\">Edit</button>\n            </mat-card-actions>\n        </mat-card>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":19,"character":32},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":19,"character":55},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","module":"@covalent/core","name":"TdDialogService","line":20,"character":40},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":21,"character":45}]}],"ngOnInit":[{"__symbolic":"method"}],"edit":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"buildProperties":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":20,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":24,"character":45},"arguments":[{"__symbolic":"reference","module":"@lamis/web-core","name":"SERVER_API_URL_CONFIG","line":24,"character":52}]}]],"parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":24,"character":32},{"__symbolic":"reference","module":"@lamis/web-core","name":"ServerApiUrlConfig","line":24,"character":94}]}],"create":[{"__symbolic":"method"}],"update":[{"__symbolic":"method"}],"find":[{"__symbolic":"method"}],"findByUuid":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"getDevolveDatesByPatient":[{"__symbolic":"method"}],"getStates":[{"__symbolic":"method"}],"getLgasByState":[{"__symbolic":"method"}],"getCommunityPharmaciesByLga":[{"__symbolic":"method"}],"getRelatedPharmacy":[{"__symbolic":"method"}],"getRelatedClinic":[{"__symbolic":"method"}],"getRelatedViralLoad":[{"__symbolic":"method"}],"getRelatedCD4":[{"__symbolic":"method"}],"getStateByLga":[{"__symbolic":"method"}],"convertDateFromClient":[{"__symbolic":"method"}],"convertDateFromServer":[{"__symbolic":"method"}]},"statics":{"ngInjectableDef":{}}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":27,"character":1},"arguments":[{"selector":"devolve-edit","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #devolveForm=\"ngForm\">\n            <mat-card class=\"default\">\n                <mat-card-header>\n                </mat-card-header>\n                <mat-card-content *ngIf=\"patient\">\n                    <div>\n                        <mat-form-field class=\"full-width\" *ngIf=\"entity && dateRegistration\">\n                            <input matInput [matDatepicker]=\"picker\"\n                                   placeholder=\"Date of Devolvement\"\n                                   [(ngModel)]=\"entity.dateDevolved\"\n                                   (dateChange)=\"dateDevolvedChanged($event.value)\"\n                                   #visit=\"ngModel\"\n                                   [max]=\"today\"\n                                   [min]=\"dateRegistration\"\n                                   [disabled]=\"!!entity.dateDiscontinued\"\n                                   name=\"visit\"\n                                   required>\n                            <mat-datepicker-toggle\n                                    matSuffix\n                                    [for]=\"picker\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #picker></mat-datepicker>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.required)\">\n                                Date of devolve is required\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.min)\">\n                                Date of devolve cannot be before {{dateRegistration | date: 'dd MMM, yyyy'}}\n                            </mat-error>\n                            <mat-error\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.max)\">\n                                Date of devolve cannot be in the future\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div>\n                        <mat-form-field class=\"full-width\">\n                            <mat-select [(ngModel)]=\"entity.dmocType\"\n                                        placeholder=\"Type of DMOC\"\n                                        (selectionChange)=\"dmocChanged($event.value)\"\n                                        #dmoc=\"ngModel\" required name=\"dmoc\">\n                                <mat-option></mat-option>\n                                <mat-option *ngFor=\"let type of dmocTypes\"\n                                            [value]=\"type.value\">{{type.name}}</mat-option>\n                            </mat-select>\n                            <mat-error\n                                    *ngIf=\"dmoc.errors && (dmoc.dirty || dmoc.touched) && (dmoc.errors.required)\">\n                                Type of DMOC is required\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>ARV Regimen</mat-label>\n                                <input matInput disabled [value]=\"relatedPharmacy && relatedPharmacy.regimen || ''\">\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Date of Current ARV Regimen</mat-label>\n                                <input matInput disabled\n                                       value=\"{{relatedPharmacy && relatedPharmacy.dateVisit || ''}} \">\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Current Viral Load</mat-label>\n                                <input matInput disabled [value]=\"relatedViralLoad && relatedViralLoad.value || ''\">\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Date of Viral Load</mat-label>\n                                <input matInput disabled\n                                       value=\"{{relatedViralLoad && relatedViralLoad.dateResultReceived || ''}} \">\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Current CD4</mat-label>\n                                <input matInput disabled [value]=\"relatedCD4 && relatedCD4.value || ''\">\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Date of CD4</mat-label>\n                                <input matInput disabled\n                                       value=\"{{relatedCD4 && relatedCD4.dateResultReceived || ''}} \">\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Current Clinical Stage</mat-label>\n                                <input matInput disabled [value]=\"relatedClinic && relatedClinic.clinicStage || ''\">\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Date of Clinical Stage</mat-label>\n                                <input matInput disabled\n                                       value=\"{{relatedClinic && relatedClinic.dateVisit | date: 'dd MMM, yyyy' || null}} \">\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"minNextAppointment\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <input matInput [matDatepicker]=\"picker2\"\n                                           placeholder=\"Date of next ARV Refill\"\n                                           [(ngModel)]=\"entity.dateNextRefill\"\n                                           #visit2=\"ngModel\"\n                                           [min]=\"minNextAppointment\"\n                                           [max]=\"maxNextVisit\"\n                                           name=\"visit2\">\n                                    <mat-datepicker-toggle\n                                            matSuffix\n                                            [for]=\"picker2\">\n                                    </mat-datepicker-toggle>\n                                    <mat-datepicker #picker2></mat-datepicker>\n                                    <mat-error\n                                            *ngIf=\"visit2.errors && (visit2.dirty || visit2.touched) && (visit2.errors.required)\">\n                                        Date of next ARV Refill is required\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"visit2.errors && (visit2.dirty || visit2.touched) && (visit2.errors.min)\">\n                                        Date of next ARV Refill cannot be\n                                        before {{minNextAppointment | date: 'dd MMM, yyyy'}}\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"visit2.errors && (visit2.dirty || visit2.touched) && (visit2.errors.max)\">\n                                        Date of next ARV Refill cannot be after {{maxNextVisit | date: 'dd NNN, yyyy'}}\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <input matInput [matDatepicker]=\"picker3\"\n                                           placeholder=\"Date of next Clinic/Lab\"\n                                           [(ngModel)]=\"entity.dateNextClinic\"\n                                           #visit3=\"ngModel\"\n                                           [min]=\"minNextAppointment\"\n                                           [max]=\"maxNextVisit\"\n                                           name=\"visit3\">\n                                    <mat-datepicker-toggle\n                                            matSuffix\n                                            [for]=\"picker3\">\n                                    </mat-datepicker-toggle>\n                                    <mat-datepicker #picker3></mat-datepicker>\n                                    <mat-error\n                                            *ngIf=\"visit3.errors && (visit3.dirty || visit3.touched) && (visit3.errors.required)\">\n                                        Date of next Clinic/Lab is required\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"visit3.errors && (visit3.dirty || visit3.touched) && (visit3.errors.min)\">\n                                        Date of next Clinic/Lab cannot be\n                                        before {{minNextAppointment | date: 'dd MMM, yyyy'}}\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"visit3.errors && (visit3.dirty || visit3.touched) && (visit3.errors.max)\">\n                                        Date of next Clinic/Lab cannot be after {{maxNextVisit | date: 'dd NNN, yyyy'}}\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <ng-container *ngIf=\"enableCommunityPharmacy\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-label>State of Residence</mat-label>\n                                    <mat-select name=\"state\"\n                                                [(ngModel)]=\"state\"\n                                                (selectionChange)=\"stateChanged($event.value.id)\">\n                                        <mat-option></mat-option>\n                                        <mat-option *ngFor=\"let state of states\"\n                                                    [value]=\"state\">{{state.name}}</mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-label>LGA of Residence</mat-label>\n                                    <mat-select name=\"lga\" [(ngModel)]=\"lga\"\n                                                (selectionChange)=\"lgaChanged($event.value.id)\">\n                                        <mat-option></mat-option>\n                                        <mat-option *ngFor=\"let lga of lgas\" [value]=\"lga\">{{lga.name}}</mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-label>Community Pharmacy</mat-label>\n                                    <mat-select name=\"pharm\" [(ngModel)]=\"entity.communityPharmacy\" required\n                                                #pharm=\"ngModel\"\n                                                (selectionChange)=\"communityPharmacyChanged($event.value)\"\n                                                [compareWith]=\"entityCompare\">\n                                        <mat-option></mat-option>\n                                        <mat-option *ngFor=\"let pharmacy of communityPharmacies\"\n                                                    [value]=\"pharmacy\">{{pharmacy.name}}</mat-option>\n                                    </mat-select>\n                                    <mat-error\n                                            *ngIf=\"pharm.errors && (pharm.dirty || pharm.touched) && (pharm.errors.required)\">\n                                        Community Pharmacy is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <adf-card-view [properties]=\"properties\" [editable]=\"false\"></adf-card-view>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <ng-container *ngIf=\"entity.dateDiscontinued\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-label>Date Discontinued</mat-label>\n                                    <input matInput [matDatepicker]=\"picker5\"\n                                           [(ngModel)]=\"entity.dateDiscontinued\"\n                                           #disc=\"ngModel\"\n                                           (dateChange)=\"dateDiscontinuedChanged()\"\n                                           [min]=\"minDiscontinued\"\n                                           [max]=\"today\"\n                                           name=\"disc\"\n                                           required>\n                                    <mat-datepicker-toggle\n                                            matSuffix\n                                            [for]=\"picker5\">\n                                    </mat-datepicker-toggle>\n                                    <mat-datepicker #picker5></mat-datepicker>\n                                    <mat-error\n                                            *ngIf=\"disc.errors && (disc.dirty || disc.touched) && (disc.errors.required)\">\n                                        Date Discontinued is required\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"disc.errors && (disc.dirty || disc.touched) && (disc.errors.min)\">\n                                        Date Discontinued cannot be before {{minDiscontinued | date: 'dd MMM, yyyy'}}\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"disc.errors && (disc.dirty || disc.touched) && (disc.errors.max)\">\n                                        Date Discontinued cannot be after {{today | date: 'dd MMM, yyyy'}}\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\">\n                                    <mat-label>Reason Discontinued</mat-label>\n                                    <mat-select name=\"reason\" #reason=\"ngModel\" [(ngModel)]=\"entity.reasonDiscontinued\"\n                                                required>\n                                        <mat-option></mat-option>\n                                        <mat-option [value]=\"'Becomes pregnant'\">Becomes pregnant</mat-option>\n                                        <mat-option [value]=\"'Unable to pay service charge'\">Unable to pay service\n                                            charge\n                                        </mat-option>\n                                        <mat-option [value]=\"'Develops comorbidity'\">Develops comorbidity</mat-option>\n                                        <mat-option [value]=\"'Loss of viral suppression'\">Loss of viral suppression\n                                        </mat-option>\n                                        <mat-option [value]=\"'Decides to go back to hospital'\">Decides to go back to\n                                            hospital\n                                        </mat-option>\n                                        <mat-option [value]=\"'Becomes non-adherent'\">Becomes non-adherent</mat-option>\n                                    </mat-select>\n                                    <mat-error\n                                            *ngIf=\"reason.errors && (reason.dirty || reason.touched) && (reason.errors.required)\">\n                                        Reason for Discontinuation is required\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <mat-form-field class=\"full-width\" *ngIf=\"minDate\">\n                                    <input matInput [matDatepicker]=\"picker6\"\n                                           placeholder=\"Date Returned to Facility\"\n                                           [(ngModel)]=\"entity.dateReturnedToFacility\"\n                                           #visit1=\"ngModel\"\n                                           [min]=\"minDate\"\n                                           [max]=\"today\"\n                                           name=\"visit1\"\n                                           required>\n                                    <mat-datepicker-toggle\n                                            matSuffix\n                                            [for]=\"picker6\">\n                                    </mat-datepicker-toggle>\n                                    <mat-datepicker #picker6></mat-datepicker>\n                                    <mat-error\n                                            *ngIf=\"visit1.errors && (visit1.dirty || visit1.touched) && (visit1.errors.required)\">\n                                        Date returned to Facility is required\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"visit1.errors && (visit1.dirty || visit1.touched) && (visit1.errors.min)\">\n                                        Date returned to Facility cannot be before {{minDate | date: 'dd MMM, yyyy'}}\n                                    </mat-error>\n                                    <mat-error\n                                            *ngIf=\"visit1.errors && (visit1.dirty || visit1.touched) && (visit1.errors.max)\">\n                                        Date returned to Facility cannot be after {{today | date: 'dd MMM, yyyy'}}\n                                    </mat-error>\n                                </mat-form-field>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <mat-divider></mat-divider>\n                </mat-card-content>\n                <mat-card-actions class=\"lamis-edit-form-actions\">\n                    <button mat-raised-button type=\"button\" (click)=\"previousState()\">Back</button>\n                    <button mat-raised-button color='primary'\n                            [disabled]=\"devolveForm.invalid || isSaving\"\n                            type=\"submit\">\n                        {{entity.id !== undefined ? 'Update' : 'Save'}}\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </form>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"PharmacyService"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":60,"character":40},{"__symbolic":"reference","module":"@lamis/web-core","name":"AppLoaderService","line":61,"character":42},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":62,"character":42}]}],"createEntity":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"dateDiscontinuedChanged":[{"__symbolic":"method"}],"filterDates":[{"__symbolic":"method"}],"stateChanged":[{"__symbolic":"method"}],"lgaChanged":[{"__symbolic":"method"}],"communityPharmacyChanged":[{"__symbolic":"method"}],"dmocChanged":[{"__symbolic":"method"}],"dateDevolvedChanged":[{"__symbolic":"method"}],"updateRelated":[{"__symbolic":"method"}],"entityCompare":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"subscribeToSaveResponse":[{"__symbolic":"method"}],"onSaveSuccess":[{"__symbolic":"method"}],"onSaveError":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":14,"character":1},"arguments":[{"selector":"end-devolve","template":"<div class=\"lamis-edit-form\">\n    <div class=\"lamis-edit-form-container\">\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #devolveForm=\"ngForm\">\n            <mat-card class=\"default\">\n                <mat-card-header>\n                </mat-card-header>\n                <mat-card-content *ngIf=\"entity\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Date of Devolvement</mat-label>\n                                <input matInput disabled value=\"{{entity.dateDevolved | date: 'dd MMM, yyyy'}}\">\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>DMOC Type</mat-label>\n                                <input matInput disabled [value]=\"dmocType\">\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Date Discontinued</mat-label>\n                                <input matInput [matDatepicker]=\"picker1\"\n                                       [(ngModel)]=\"entity.dateDiscontinued\"\n                                       #disc=\"ngModel\"\n                                       (dateChange)=\"dateDiscontinuedChanged()\"\n                                       [min]=\"minDiscontinued\"\n                                       [max]=\"today\"\n                                       name=\"disc\"\n                                       required>\n                                <mat-datepicker-toggle\n                                        matSuffix\n                                        [for]=\"picker1\">\n                                </mat-datepicker-toggle>\n                                <mat-datepicker #picker1></mat-datepicker>\n                                <mat-error\n                                        *ngIf=\"disc.errors && (disc.dirty || disc.touched) && (disc.errors.required)\">\n                                    Date Discontinued is required\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"disc.errors && (disc.dirty || disc.touched) && (disc.errors.min)\">\n                                    Date Discontinued cannot be before {{minDiscontinued | date: 'dd MMM, yyyy'}}\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"disc.errors && (disc.dirty || disc.touched) && (disc.errors.max)\">\n                                    Date Discontinued cannot be after {{today | date: 'dd MMM, yyyy'}}\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Reason Discontinued</mat-label>\n                                <mat-select name=\"reason\" #reason=\"ngModel\" [(ngModel)]=\"entity.reasonDiscontinued\"\n                                            required>\n                                    <mat-option></mat-option>\n                                    <mat-option [value]=\"'Becomes pregnant'\">Becomes pregnant</mat-option>\n                                    <mat-option [value]=\"'Unable to pay service charge'\">Unable to pay service charge\n                                    </mat-option>\n                                    <mat-option [value]=\"'Develops comorbidity'\">Develops comorbidity</mat-option>\n                                    <mat-option [value]=\"'Loss of viral suppression'\">Loss of viral suppression\n                                    </mat-option>\n                                    <mat-option [value]=\"'Decides to go back to hospital'\">Decides to go back to\n                                        hospital\n                                    </mat-option>\n                                    <mat-option [value]=\"'Becomes non-adherent'\">Becomes non-adherent</mat-option>\n                                </mat-select>\n                                <mat-error\n                                        *ngIf=\"reason.errors && (reason.dirty || reason.touched) && (reason.errors.required)\">\n                                    Reason for Discontinuation is required\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <mat-form-field class=\"full-width\" *ngIf=\"minDate\">\n                                <input matInput [matDatepicker]=\"picker\"\n                                       placeholder=\"Date Returned to Facility\"\n                                       [(ngModel)]=\"entity.dateReturnedToFacility\"\n                                       #visit=\"ngModel\"\n                                       [min]=\"minDate\"\n                                       [max]=\"today\"\n                                       name=\"visit\"\n                                       required>\n                                <mat-datepicker-toggle\n                                        matSuffix\n                                        [for]=\"picker\">\n                                </mat-datepicker-toggle>\n                                <mat-datepicker #picker></mat-datepicker>\n                                <mat-error\n                                        *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.required)\">\n                                    Date returned to Facility is required\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.min)\">\n                                    Date returned to Facility cannot be before {{minDate | date: 'dd MMM, yyyy'}}\n                                </mat-error>\n                                <mat-error\n                                        *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.max)\">\n                                    Date returned to Facility cannot be after {{today | date: 'dd MMM, yyyy'}}\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </mat-card-content>\n                <mat-card-actions class=\"lamis-edit-form-actions\">\n                    <button mat-raised-button type=\"button\" (click)=\"previousState()\">Back</button>\n                    <button mat-raised-button color='primary'\n                            [disabled]=\"devolveForm.invalid || isSaving || !entity.dateDiscontinued\"\n                            type=\"submit\">\n                        Update\n                    </button>\n                </mat-card-actions>\n            </mat-card>\n        </form>\n    </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"PharmacyService"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","module":"@alfresco/adf-core","name":"NotificationService","line":28,"character":40},{"__symbolic":"reference","module":"@lamis/web-core","name":"AppLoaderService","line":29,"character":42},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":30,"character":42}]}],"ngOnInit":[{"__symbolic":"method"}],"dateDiscontinuedChanged":[{"__symbolic":"method"}],"previousState":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"subscribeToSaveResponse":[{"__symbolic":"method"}],"onSaveSuccess":[{"__symbolic":"method"}],"onSaveError":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}]}}},"origins":{"Patient":"./lib/model/pharmacy.model","RegimenType":"./lib/model/pharmacy.model","Regimen":"./lib/model/pharmacy.model","Drug":"./lib/model/pharmacy.model","DrugDTO":"./lib/model/pharmacy.model","RegimenDrug":"./lib/model/pharmacy.model","Adr":"./lib/model/pharmacy.model","PharmacyAdr":"./lib/model/pharmacy.model","PharmacyLine":"./lib/model/pharmacy.model","Pharmacy":"./lib/model/pharmacy.model","RegimenInfo":"./lib/model/pharmacy.model","CommunityPharmacy":"./lib/model/pharmacy.model","RelatedClinic":"./lib/model/pharmacy.model","RelatedPharmacy":"./lib/model/pharmacy.model","RelatedViralLoad":"./lib/model/pharmacy.model","RelatedCD4":"./lib/model/pharmacy.model","Devolve":"./lib/model/pharmacy.model","StatusHistory":"./lib/model/pharmacy.model","PharmacyService":"./lib/services/pharmacy.service","PharmacyModule":"./lib/pharmacy.module","PharmacyWidgetModule":"./lib/pharmacy.widget.module","DevolveModule":"./lib/devolve.module","ɵa":"./lib/components/pharmacy-details.component","ɵb":"./lib/components/pharmacy-edit.component","ɵc":"./lib/services/pharmacy.route","ɵd":"./lib/services/pharmacy.route","ɵe":"./lib/material.module","ɵf":"./lib/material.module","ɵg":"./lib/components/pharmacy.widget","ɵh":"./lib/services/devolve.route","ɵi":"./lib/services/devolve.route","ɵj":"./lib/components/devolve.details.component","ɵk":"./lib/services/devolve.service","ɵl":"./lib/components/devolve.edit.component","ɵm":"./lib/components/end.devolve.component"},"importAs":"lamis-pharmacy-1.4.0"}
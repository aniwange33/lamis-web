{"version":3,"file":"lamis-pharmacy-1.4.0.js","sources":["ng://lamis-pharmacy-1.4.0/lib/services/pharmacy.service.ts","ng://lamis-pharmacy-1.4.0/lib/components/pharmacy-edit.component.ts","ng://lamis-pharmacy-1.4.0/lib/components/pharmacy-details.component.ts","ng://lamis-pharmacy-1.4.0/lib/services/pharmacy.route.ts","ng://lamis-pharmacy-1.4.0/lib/components/pharmacy.widget.ts","ng://lamis-pharmacy-1.4.0/lib/material.module.ts","ng://lamis-pharmacy-1.4.0/lib/pharmacy.widget.module.ts","ng://lamis-pharmacy-1.4.0/lib/pharmacy.module.ts","ng://lamis-pharmacy-1.4.0/lib/services/devolve.service.ts","ng://lamis-pharmacy-1.4.0/lib/components/devolve.details.component.ts","ng://lamis-pharmacy-1.4.0/lib/components/devolve.edit.component.ts","ng://lamis-pharmacy-1.4.0/lib/components/end.devolve.component.ts","ng://lamis-pharmacy-1.4.0/lib/services/devolve.route.ts","ng://lamis-pharmacy-1.4.0/lib/devolve.module.ts","ng://lamis-pharmacy-1.4.0/public_api.ts","ng://lamis-pharmacy-1.4.0/lamis-pharmacy-1.4.0.ts"],"sourcesContent":["import {Inject, Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {DATE_FORMAT, SERVER_API_URL_CONFIG, ServerApiUrlConfig} from '@lamis/web-core';\nimport {map} from 'rxjs/operators';\nimport {\n    Adr,\n    Devolve,\n    DrugDTO,\n    Patient,\n    Pharmacy,\n    PharmacyLine,\n    Regimen,\n    RegimenInfo,\n    RegimenType, StatusHistory\n} from '../model/pharmacy.model';\nimport * as moment_ from 'moment';\nimport {Moment} from 'moment';\n\nconst moment = moment_;\n\ntype EntityResponseType = HttpResponse<Pharmacy>;\ntype EntityArrayResponseType = HttpResponse<Pharmacy[]>;\n\n@Injectable({providedIn: 'root'})\nexport class PharmacyService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/pharmacies';\n    }\n\n    create(pharmacy: Pharmacy): Observable<EntityResponseType> {\n        const copy = this.convertDateFromClient(pharmacy);\n        return this.http\n            .post<Pharmacy>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    update(pharmacy: Pharmacy): Observable<EntityResponseType> {\n        const copy = this.convertDateFromClient(pharmacy);\n        console.log('Lines', copy);\n        return this.http\n            .put<Pharmacy>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    find(id: number): Observable<EntityResponseType> {\n        return this.http\n            .get<Pharmacy>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    findByUuid(id: string): Observable<EntityResponseType> {\n        return this.http\n            .get<Pharmacy>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    getPatient(id: any) {\n        return this.http.get<Patient>(`/api/patients/by-uuid/${id}`, {observe: 'body'})\n            .pipe(map((res) => {\n                if (res) {\n                    res.dateRegistration = res.dateRegistration != null ? moment(res.dateRegistration) : null;\n                }\n                return res;\n            }));\n    }\n\n    getVisitDatesByPatient(patientId: number) {\n        return this.http.get<Moment[]>(`${this.resourceUrl}/patient/${patientId}/visit-dates`)\n            .pipe(map((res) => {\n                    res.forEach(d => moment(d));\n                    return res;\n                })\n            );\n    }\n\n    hasDeadStatus(puuid: string) {\n        return this.http.get<StatusHistory>(`${this.resourceUrl}/patient/${puuid}/has-dead-status`, {observe: 'response'})\n            .pipe(map(res => {\n                if (res.body) {\n                    res.body.dateStatus = res.body.dateStatus != null ? moment(res.body.dateStatus) : null;\n                }\n                return res;\n            }));\n    }\n\n    regimenTypes() {\n        return this.http.get<RegimenType[]>(`${this.resourceUrl}/regimen-types`);\n    }\n\n    regimenInfo(patientId: number) {\n        return this.http.get<RegimenInfo>(`${this.resourceUrl}/regimen-info/patient/${patientId}`);\n    }\n\n    adrs() {\n        return this.http.get<Adr[]>(`${this.resourceUrl}/adrs`);\n    }\n\n    getLinesByPharmacy(pharmacyId: number) {\n        return this.http.get<PharmacyLine[]>(`${this.resourceUrl}/${pharmacyId}/lines`);\n    }\n\n    regimesByRegimenType(id: number) {\n        return this.http.get<Regimen[]>(`${this.resourceUrl}/regimens/regimen-type/${id}`);\n    }\n\n    getDrugsByRegimen(id: number) {\n        return this.http.get<DrugDTO[]>(`${this.resourceUrl}/drugs/regimen/${id}`);\n    }\n\n    getRegimenById(id) {\n        return this.http.get<Regimen>(`${this.resourceUrl}/regimen/${id}`);\n    }\n\n    latestVisit(patientId: number) {\n        return this.http.get<Pharmacy>(`${this.resourceUrl}/patient/${patientId}/latest`);\n    }\n\n    getDevolvement(patientId: number, date: Moment) {\n        const d = date.format(DATE_FORMAT);\n        return this.http.get<Devolve>(`${this.resourceUrl}/patient/${patientId}/devolvement/at/${d}`)\n            .pipe(map(res => {\n                res.dateDevolved = res.dateDevolved != null ? moment(res.dateDevolved) : null;\n                res.dateReturnedToFacility = res.dateReturnedToFacility != null ? moment(res.dateReturnedToFacility) : null;\n                res.dateNextClinic = res.dateNextClinic != null ? moment(res.dateNextClinic) : null;\n                res.dateNextRefill = res.dateNextRefill != null ? moment(res.dateNextRefill) : null;\n                return res;\n            }));\n    }\n\n    protected convertDateFromClient(pharmacy: Pharmacy): Pharmacy {\n        const copy: Pharmacy = Object.assign({}, pharmacy, {\n            dateVisit: pharmacy.dateVisit != null && pharmacy.dateVisit.isValid() ? pharmacy.dateVisit.format(DATE_FORMAT) : null,\n            nextAppointment: pharmacy.nextAppointment != null && pharmacy.nextAppointment.isValid() ?\n                pharmacy.nextAppointment.format(DATE_FORMAT) : null\n        });\n        return copy;\n    }\n\n    protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n        if (res.body) {\n            res.body.nextAppointment = res.body.nextAppointment != null ? moment(res.body.nextAppointment) : null;\n            res.body.dateVisit = res.body.dateVisit != null ? moment(res.body.dateVisit) : null;\n        }\n        return res;\n    }\n\n    protected convertDateArrayFromServer(res: EntityArrayResponseType): EntityArrayResponseType {\n        if (res.body) {\n            res.body.forEach((pharmacy: Pharmacy) => {\n                pharmacy.dateVisit = pharmacy.dateVisit != null ? moment(pharmacy.dateVisit) : null;\n                pharmacy.nextAppointment = pharmacy.nextAppointment != null ? moment(pharmacy.nextAppointment) : null;\n            });\n        }\n        return res;\n    }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Adr, Devolve, Drug, DrugDTO, Patient, Pharmacy, PharmacyLine, Regimen, RegimenType, StatusHistory} from '../model/pharmacy.model';\nimport {PharmacyService} from '../services/pharmacy.service';\nimport {NotificationService} from '@alfresco/adf-core';\nimport {ActivatedRoute} from '@angular/router';\nimport {MatButton, MatProgressBar} from '@angular/material';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ColumnMode} from '@swimlane/ngx-datatable';\nimport * as moment_ from 'moment';\nimport {Moment} from 'moment';\nimport {AppLoaderService, DATE_FORMAT, entityCompare} from '@lamis/web-core';\n\nconst moment = moment_;\n\nexport const IPT_TYPE = {\n    'START_INITIATION': 'Start Initiation',\n    'START_REFILL': 'Start Refill',\n    'FOLLOWUP_INITIATION': 'Followup Initiation',\n    'FOLLOWUP_REFILL': 'Followup Refill'\n};\n\nexport interface Ipt {\n    type?: string;\n    completed?: boolean;\n    dateCompleted?: Moment;\n}\n\n@Component({\n    selector: 'lamis-pharmacy-edit',\n    templateUrl: './pharmacy-edit.component.html'\n})\nexport class PharmacyEditComponent implements OnInit {\n    @ViewChild(MatProgressBar, {static: true}) progressBar: MatProgressBar;\n    @ViewChild(MatButton, {static: true}) submitButton: MatButton;\n    entity: Pharmacy = {};\n    patient: Patient;\n    dateRegistration: Moment;\n    maxNextVisit: Moment;\n    regimenTypes: RegimenType[] = [];\n    regimens: Regimen[] = [];\n    selectedRegimens: Regimen[] = [];\n    adrs: Adr[];\n    isSaving: boolean;\n    error = false;\n    tomorrow = moment().add(1, 'days');\n    today = moment();\n    minNextAppointment: Moment;\n    ColumnMode = ColumnMode;\n    editing = {};\n    rows: PharmacyLine[] = [];\n    drugIds = new Set();\n    visitDates: Moment[] = [];\n    devolve: Devolve;\n    dmocType: string;\n    drugs: Drug[] = [];\n    iptSelected = false;\n    ipt: Ipt = {};\n    deadStatus: StatusHistory;\n\n    constructor(private pharmacyService: PharmacyService,\n                protected notification: NotificationService,\n                private appLoaderService: AppLoaderService,\n                protected activatedRoute: ActivatedRoute) {\n    }\n\n    createEntity(): Pharmacy {\n        return <Pharmacy>{};\n    }\n\n    ngOnInit(): void {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\n            this.pharmacyService.getPatient(patientId).subscribe((res) => {\n                this.entity.patient = res;\n                this.patient = res;\n                this.dateRegistration = res.dateRegistration;\n                this.entity.facility = res.facility;\n                this.minNextAppointment = this.dateRegistration.clone().add(15, 'days');\n                this.pharmacyService.getVisitDatesByPatient(res.id).subscribe((res1) => {\n                    this.visitDates = res1;\n                });\n\n                this.pharmacyService.regimenTypes().subscribe(res1 => {\n                    this.regimenTypes = res1.filter(t => {\n                        return this.entity.patient.extra && this.entity.patient.extra.prep && this.entity.patient.extra.prep.registered ?\n                            t.id === 30 : t.id !== 30;\n                    });\n                });\n\n                this.pharmacyService.hasDeadStatus(patientId).subscribe(r => this.deadStatus = r.body);\n            });\n\n            if (this.entity.id) {\n                if (this.entity.extra && this.entity.extra.ipt) {\n                    this.ipt = Object.assign({}, this.entity.extra.ipt, {\n                        dateCompleted: this.entity.extra.ipt.dateCompleted != null ? moment(this.entity.extra.ipt.dateCompleted) : null\n                    });\n                }\n\n                this.rows = [...this.entity.lines.map(r => {\n                    this.pharmacyService.getDrugsByRegimen(r.regimen_id).subscribe((res: DrugDTO[]) => {\n                        r.description = res.find(d => d.regimenDrug.id === r.regimen_drug_id).drug.name;\n                    });\n                    r.morning = r.morning || 0;\n                    r.afternoon = r.afternoon || 0;\n                    r.evening = r.evening || 0;\n                    if (r.regimen_type_id === 15) {\n                        this.iptSelected = true;\n                    }\n                    r.quantity = ((r.morning || 0) + (r.afternoon || 0) + (r.evening || 0)) * r.duration;\n\n                    this.pharmacyService.getRegimenById(r.regimen_id).subscribe(res => {\n                        if (!this.regimens.map(rs => rs.id).includes(r.regimen_id)) {\n                            this.regimens.push(res);\n                            this.selectedRegimens.push(res);\n                            this.regimens = [...this.regimens];\n                            this.selectedRegimens = [...this.selectedRegimens];\n                        }\n                    });\n                    return r;\n                })];\n\n                this.entity.duration = this.entity.lines.map(r => r.duration)\n                    .sort((r1, r2) => r1 - r2)\n                    .pop();\n\n                this.pharmacyService.getDevolvement(this.entity.patient.id, this.entity.dateVisit).subscribe(res => {\n                    this.devolve = res;\n                    this.updateDmocType();\n                });\n            }\n        });\n    }\n\n    dateVisitChanged(date: Moment) {\n        this.entity.nextAppointment = this.suggestedNextAppointment();\n        this.minNextAppointment = this.entity.nextAppointment.clone().subtract(7, 'days');\n        this.maxNextVisit = this.entity.nextAppointment.clone().add(8, 'months');\n        this.pharmacyService.getDevolvement(this.entity.patient.id, this.entity.dateVisit).subscribe(res => {\n            this.devolve = res;\n            this.updateDmocType();\n        });\n\n    }\n\n    suggestedNextAppointment(): Moment {\n        if (this.entity.dateVisit) {\n            let nextAppointment = this.entity.dateVisit.clone().add(this.entity.duration - 2 || 13, 'days');\n            const weekday = nextAppointment.isoWeekday();\n            if (weekday === 6) {\n                nextAppointment = nextAppointment.clone().add(2, 'days');\n            } else if (weekday === 7) {\n                nextAppointment = nextAppointment.clone().add(1, 'days');\n            }\n            return nextAppointment;\n        }\n        return null;\n    }\n\n    updateDmocType() {\n        let type = 'MMD';\n        switch (this.devolve.dmocType) {\n            case 'ARC':\n                type = 'Adolescent Refill Club';\n                break;\n            case 'CPARP':\n                type = 'CPARP';\n                break;\n            case 'CARC':\n                type = 'CARC';\n                break;\n            case 'F_CARG':\n                type = 'F-CARG';\n                break;\n            case 'FAST_TRACK':\n                type = 'Fast Track';\n                break;\n            case 'S_CARG':\n                type = 'S-CARG';\n                break;\n            case 'MMS':\n                type = 'MMS';\n                break;\n        }\n        this.dmocType = type;\n    }\n\n    filterDates(date: Moment): boolean {\n        let exists = false;\n\n        this.visitDates.forEach(d => {\n            if (date.diff(d, 'days') === 0) {\n                exists = true;\n            }\n        });\n        return (this.entity.id && date.diff(this.entity.dateVisit, 'days') === 0) || !exists;\n    }\n\n\n    previousState() {\n        window.history.back();\n    }\n\n    entityCompare(e1, e2) {\n        return entityCompare(e1, e2);\n    }\n\n    save() {\n        this.submitButton.disabled = true;\n        // this.progressBar.mode = 'indeterminate';\n        this.appLoaderService.open('Saving visit...');\n        this.entity.lines = this.rows;\n        this.isSaving = true;\n        if (!this.entity.extra) {\n            this.entity.extra = {};\n        }\n        if (this.iptSelected && this.ipt) {\n            this.entity.extra.ipt = Object.assign({}, this.ipt, {\n                dateCompleted: this.ipt.dateCompleted != null && this.ipt.dateCompleted.isValid() ?\n                    this.ipt.dateCompleted.format(DATE_FORMAT) : null\n            });\n        }\n\n        if (this.deadStatus && this.deadStatus.dateStatus) {\n            if (this.deadStatus.dateStatus.isBefore(this.entity.dateVisit)) {\n                this.notification.showError(`Cannot save refill, patient was declared dead\n                 (${this.deadStatus.dateStatus.format('DD MMMM, YYYY')}) before date of current refill`);\n                this.appLoaderService.close();\n                this.isSaving = false;\n                return;\n            }\n        }\n\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.pharmacyService.update(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.pharmacyService.create(this.entity));\n        }\n    }\n\n    regimenTypeChange(type: any) {\n        this.pharmacyService.regimesByRegimenType(type.id).subscribe((res: Regimen[]) => {\n            res.forEach((regimen: Regimen) => {\n                if (!this.regimens.map(r => r.id).includes(regimen.id)) {\n                    this.regimens.push(regimen);\n                    this.regimens = [...this.regimens];\n                }\n            });\n        });\n    }\n\n    durationChanged(duration) {\n        this.rows = this.rows.map(r => {\n            r.duration = duration;\n            r.quantity = (r.morning + r.afternoon + r.evening) * duration;\n            return r;\n        });\n        this.rows = [...this.rows];\n\n        this.entity.nextAppointment = this.suggestedNextAppointment();\n\n        if (duration === 90) {\n            this.entity.mmdType = 'MMD-3';\n        } else if (duration === 120) {\n            this.entity.mmdType = 'MMD-4';\n        } else if (duration === 150) {\n            this.entity.mmdType = 'MMD-5';\n        } else if (duration === 180) {\n            this.entity.mmdType = 'MMD-6';\n        } else {\n            this.entity.mmdType = null;\n        }\n\n        if (this.entity.dateVisit) {\n            this.ipt['dateCompleted'] = this.entity.dateVisit.clone().add(duration, 'days');\n        }\n    }\n\n    iptTypes() {\n        return IPT_TYPE;\n    }\n\n    regimenChange(event) {\n        this.selectedRegimens.forEach(regimen => {\n            if (regimen.regimenType.id === 15) {\n                this.iptSelected = true;\n            }\n            this.pharmacyService.getDrugsByRegimen(regimen.id).subscribe((res: DrugDTO[]) => {\n                res.forEach((drug: DrugDTO) => {\n                    if (!this.rows.map(r => r.description).includes(drug.drug.name)) {\n                        this.rows.push({\n                            drug: drug.drug,\n                            description: drug.drug.name,\n                            morning: drug.drug.morning,\n                            afternoon: drug.drug.afternoon,\n                            evening: drug.drug.evening,\n                            regimen_id: regimen.id,\n                            duration: this.entity.duration,\n                            quantity: this.entity.duration * ((drug.drug.morning || 0) + (drug.drug.afternoon || 0)\n                                + (drug.drug.evening || 0)),\n                            regimen_type_id: regimen.regimenType.id,\n                            regimen_drug_id: drug.regimenDrug.id\n                        });\n                        this.rows = [...this.rows];\n                        // this.drugs.push(drug.drug);\n                    }\n\n                    this.rows = this.rows.filter(row => this.selectedRegimens.map(regimen1 => regimen1.id).includes(row.regimen_id));\n                    this.drugs.forEach(drug1 => {\n                        if (!this.rows.map(r => r.description).includes(drug1.name)) {\n                            this.drugs = this.drugs.filter(d => d.id !== drug1.id);\n                        }\n                    });\n                });\n            });\n        });\n    }\n\n    updateValue(event, cell, rowIndex) {\n        this.editing[rowIndex + '-' + cell] = false;\n        this.rows[rowIndex][cell] = event.target.value;\n        if (this.entity.duration) {\n            const total = parseInt(this.rows[rowIndex]['morning'] + '' || '0', 10) +\n                parseInt(this.rows[rowIndex]['afternoon'] + '' || '0', 10) +\n                parseInt(this.rows[rowIndex]['evening'] + '' || '0', 10);\n            this.rows[rowIndex]['quantity'] = (total * this.entity.duration);\n        }\n        if (cell === 'duration' && this.rows[rowIndex].regimen_type_id === 15) {\n            if (this.entity.dateVisit) {\n                this.ipt['dateCompleted'] = this.entity.dateVisit.clone().add(event.target.value, 'days');\n            }\n        }\n        this.rows = [...this.rows];\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.appLoaderService.close();\n                this.onSaveError();\n                this.onError(res.message);\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.showInfo('Pharmacy visit successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.error = true;\n        this.notification.showError('Error saving pharmacy visit');\n    }\n\n    protected onError(errorMessage: string) {\n        this.isSaving = false;\n        this.notification.showError(errorMessage);\n    }\n}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {DrugDTO, Pharmacy, PharmacyLine, RegimenInfo} from '../model/pharmacy.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {PharmacyService} from '../services/pharmacy.service';\nimport {TdDialogService} from '@covalent/core';\nimport {\n    CardViewBoolItemModel,\n    CardViewDateItemModel,\n    CardViewIntItemModel,\n    CardViewItem,\n    CardViewTextItemModel,\n    NotificationService\n} from '@alfresco/adf-core';\nimport {IPT_TYPE} from './pharmacy-edit.component';\nimport * as moment_ from 'moment';\nimport {ColumnMode} from '@swimlane/ngx-datatable';\n\nconst moment = moment_;\n\n@Component({\n    selector: 'lamis-pharmacy',\n    templateUrl: './pharmacy-details.component.html'\n})\nexport class PharmacyDetailsComponent implements OnInit, OnDestroy {\n    properties: CardViewItem[] = [];\n    entity: Pharmacy;\n    ColumnMode = ColumnMode;\n    public dataSource: PharmacyLine[];\n\n    constructor(private router: Router, private route: ActivatedRoute, private pharmacyService: PharmacyService,\n                private _dialogService: TdDialogService,\n                private notificationService: NotificationService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            const patientId = this.route.snapshot.paramMap.get('patientId');\n            this.pharmacyService.getPatient(patientId).subscribe((res) => this.entity.patient = res);\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'pharmacies', this.entity.uuid, 'patient', this.entity.patient.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this pharmacy refill, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.pharmacyService.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['patients']);\n                    } else {\n                        this.notificationService.showError('Error deleting visit, please try again');\n                    }\n                });\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewDateItemModel({\n            key: 'ds',\n            value: this.entity.dateVisit,\n            label: 'Date of Dispensing',\n            format: 'dd MMM, yyyy'\n        }));\n        /*this.pharmacyService.getLinesByPharmacy(this.entity.id)\n            .subscribe(res => {\n                this.dataSource = res;\n                this.properties.push(new CardViewIntItemModel({\n                    label: 'Refill Period (days)',\n                    key: 'cs',\n                    value: res.map(r => r.duration)\n                        .sort((r1, r2) => r1 - r2)\n                        .pop()\n                }));\n            });*/\n        this.dataSource = [...this.entity.lines.map(r => {\n            r.morning = r.morning || 0;\n            r.afternoon = r.afternoon || 0;\n            r.evening = r.evening || 0;\n            r.quantity = ((r.morning) + (r.afternoon) + (r.evening)) * r.duration;\n            this.pharmacyService.getDrugsByRegimen(r.regimen_id).subscribe((res: DrugDTO[]) => {\n                r.description = res.find(d => d.regimenDrug.id === r.regimen_drug_id).drug.name;\n            });\n            return r;\n        })];\n        this.dataSource = [...this.dataSource];\n        this.properties.push(new CardViewIntItemModel({\n            label: 'Refill Period (days)',\n            key: 'cs',\n            value: this.entity.lines.map(r => r.duration)\n                .sort((r1, r2) => r1 - r2)\n                .pop()\n        }));\n\n        this.properties.push(new CardViewDateItemModel({\n            key: 'na',\n            value: this.entity.nextAppointment,\n            label: 'Next Pharmacy Refill',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'MMD Type',\n            key: 'fs',\n            value: this.entity.mmdType\n        }));\n        this.properties.push(new CardViewBoolItemModel({\n            label: 'Adverse Drug Reactions',\n            key: 'adr',\n            value: this.entity.adrScreened\n        }));\n        this.properties.push(new CardViewBoolItemModel({\n            label: 'Prescription error',\n            key: 'bw',\n            value: this.entity.prescriptionError\n        }));\n        this.pharmacyService.regimenInfo(this.entity.patient.id)\n            .subscribe((res: RegimenInfo) => {\n                this.properties.push(new CardViewTextItemModel({\n                    label: 'Regimen Line',\n                    key: 'cs',\n                    value: res.regimenType\n                }));\n                this.properties.push(new CardViewTextItemModel({\n                    label: 'Regimen',\n                    key: 'ts',\n                    value: res.regimen\n                }));\n            });\n        if (this.entity.extra && this.entity.extra.ipt) {\n            this.properties.push(new CardViewTextItemModel({\n                label: 'IPT Type',\n                key: 'fs',\n                value: IPT_TYPE[this.entity.extra.ipt.type]\n            }));\n\n            if (this.entity.extra.ipt.dateCompleted) {\n                this.properties.push(new CardViewDateItemModel({\n                    key: 'na',\n                    value: moment(this.entity.extra.ipt.dateCompleted),\n                    label: 'Date of Completion',\n                    format: 'dd MMM, yyyy'\n                }));\n            }\n        }\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    public ngOnDestroy() {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpResponse} from '@angular/common/http';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes} from '@angular/router';\nimport {Observable, of} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\nimport {PharmacyService} from './pharmacy.service';\nimport {Pharmacy} from '../model/pharmacy.model';\nimport {PharmacyDetailsComponent} from '../components/pharmacy-details.component';\nimport {PharmacyEditComponent} from '../components/pharmacy-edit.component';\n\n@Injectable()\nexport class PharmacyResolve implements Resolve<Pharmacy> {\n    constructor(private service: PharmacyService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Pharmacy> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<Pharmacy>) => response.ok),\n                map((patient: HttpResponse<Pharmacy>) => patient.body)\n            );\n        }\n        return of(<Pharmacy>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Pharmacy Refill',\n            breadcrumb: 'PHARMACY REFILL'\n        },\n        children: [\n            {\n                path: ':id/patient/:patientId/view',\n                component: PharmacyDetailsComponent,\n                resolve: {\n                    entity: PharmacyResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Pharmacy Refill',\n                    breadcrumb: 'PHARMACY REFILL'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'patient/:patientId/new',\n                component: PharmacyEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Pharmacy Refill',\n                    breadcrumb: 'ADD PHARMACY REFILL'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: PharmacyEditComponent,\n                resolve: {\n                    entity: PharmacyResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Pharmacy Refill Edit',\n                    breadcrumb: 'PHARMACY REFILL EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n","import {Component, Input, OnInit} from '@angular/core';\nimport {PharmacyService} from '../services/pharmacy.service';\nimport {Pharmacy, RegimenInfo} from '../model/pharmacy.model';\nimport {CardViewDateItemModel, CardViewFloatItemModel, CardViewItem, CardViewTextItemModel} from '@alfresco/adf-core';\n\n@Component({\n    selector: 'pharmacy-widget',\n    templateUrl: './pharmacy.widget.html'\n})\nexport class PharmacyWidget implements OnInit {\n    @Input()\n    patientId: number;\n    pharmacy: Pharmacy;\n    properties: CardViewItem[] = [];\n\n    constructor(private pharmacyService: PharmacyService) {\n    }\n\n    ngOnInit(): void {\n        this.pharmacyService.latestVisit(this.patientId).subscribe((res) => {\n            this.pharmacy = res;\n            this.buildProperties();\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewDateItemModel({\n            key: 'dv',\n            value: this.pharmacy.dateVisit,\n            label: 'Last Pharmacy Refill',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewDateItemModel({\n            key: 'nv',\n            value: this.pharmacy.nextAppointment,\n            label: 'Next Pharmacy Refill',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            label: 'MMD Type',\n            key: 'fs',\n            value: this.pharmacy.mmdType\n        }));\n\n        this.pharmacyService.regimenInfo(this.pharmacy.patient.id)\n            .subscribe((res: RegimenInfo) => {\n                this.properties.push(new CardViewTextItemModel({\n                    label: 'Regimen Line',\n                    key: 'cs',\n                    value: res.regimenType\n                }));\n                this.properties.push(new CardViewTextItemModel({\n                    label: 'Regimen',\n                    key: 'ts',\n                    value: res.regimen\n                }));\n            });\n    }\n\n}\n","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatDatetimepickerModule, MatNativeDatetimeModule} from '@mat-datetimepicker/core';\n\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatOptionModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatAutocompleteModule, MatButtonModule, MatCardModule, MatCheckboxModule,\n        MatChipsModule, MatDatepickerModule, MatDialogModule, MatGridListModule, MatIconModule,\n        MatInputModule, MatListModule, MatNativeDateModule, MatOptionModule, MatProgressSpinnerModule, MatRadioModule,\n        MatRippleModule, MatSelectModule, MatSlideToggleModule, MatTableModule, MatTabsModule,\n        MatMenuModule, MatProgressBarModule, MatSidenavModule, MatSnackBarModule, MatToolbarModule,\n        MatTooltipModule, MatDatetimepickerModule, MatNativeDatetimeModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {\n}\n","import {NgModule} from '@angular/core';\nimport {PharmacyWidget} from './components/pharmacy.widget';\nimport {CommonModule} from '@angular/common';\nimport {CoreModule} from '@alfresco/adf-core';\nimport {MaterialModule} from './material.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MaterialModule,\n        CoreModule\n    ],\n    declarations: [\n        PharmacyWidget\n    ],\n    entryComponents: [\n        PharmacyWidget\n    ],\n    exports: [\n        PharmacyWidget\n    ],\n    providers: []\n})\nexport class PharmacyWidgetModule {\n\n}\n","import {CoreModule} from '@alfresco/adf-core';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatTableModule\n} from '@angular/material';\nimport {RouterModule} from '@angular/router';\nimport {CovalentDialogsModule, CovalentMessageModule} from '@covalent/core';\nimport {PharmacyDetailsComponent} from './components/pharmacy-details.component';\nimport {PharmacyEditComponent} from './components/pharmacy-edit.component';\nimport {PharmacyResolve, ROUTES} from './services/pharmacy.route';\nimport {PharmacyWidgetModule} from './pharmacy.widget.module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {MatDateFormatModule} from '@lamis/web-core';\nimport {CustomFormsModule} from 'ng2-validation';\n\n@NgModule({\n    declarations: [\n        PharmacyDetailsComponent,\n        PharmacyEditComponent\n    ],\n    imports: [\n        CommonModule,\n        MatInputModule,\n        MatIconModule,\n        MatCardModule,\n        MatSelectModule,\n        MatButtonModule,\n        RouterModule.forChild(ROUTES),\n        MatProgressBarModule,\n        FormsModule,\n        CovalentMessageModule,\n        CovalentDialogsModule,\n        MatTableModule,\n        MatListModule,\n        CoreModule,\n        PharmacyWidgetModule,\n        NgxDatatableModule,\n        ReactiveFormsModule,\n        MatDateFormatModule,\n        CustomFormsModule\n    ],\n    exports: [\n        PharmacyDetailsComponent,\n        PharmacyEditComponent\n    ],\n    entryComponents: [],\n    providers: [\n        PharmacyResolve\n    ]\n})\nexport class PharmacyModule {\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {DATE_FORMAT, SERVER_API_URL_CONFIG, ServerApiUrlConfig} from '@lamis/web-core';\nimport {map} from 'rxjs/operators';\nimport * as moment_ from 'moment';\nimport {Moment} from 'moment';\nimport {\n    CommunityPharmacy,\n    Devolve,\n    RelatedCD4,\n    RelatedClinic,\n    RelatedPharmacy,\n    RelatedViralLoad\n} from '../model/pharmacy.model';\n\nconst moment = moment_;\n\ntype EntityResponseType = HttpResponse<Devolve>;\n\n@Injectable({providedIn: 'root'})\nexport class DevolveService {\n    public resourceUrl = '';\n\n    constructor(protected http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/devolves';\n    }\n\n    create(devolve: Devolve): Observable<EntityResponseType> {\n        const copy = this.convertDateFromClient(devolve);\n        return this.http\n            .post<Devolve>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    update(devolve: Devolve): Observable<EntityResponseType> {\n        const copy = this.convertDateFromClient(devolve);\n        return this.http\n            .put<Devolve>(this.resourceUrl, copy, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    find(id: number): Observable<EntityResponseType> {\n        return this.http\n            .get<Devolve>(`${this.resourceUrl}/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n    findByUuid(id: string): Observable<EntityResponseType> {\n        return this.http\n            .get<Devolve>(`${this.resourceUrl}/by-uuid/${id}`, {observe: 'response'})\n            .pipe(map((res: EntityResponseType) => this.convertDateFromServer(res)));\n    }\n\n\n    delete(id: number): Observable<HttpResponse<any>> {\n        return this.http.delete<any>(`${this.resourceUrl}/${id}`, {observe: 'response'});\n    }\n\n    getDevolveDatesByPatient(patientId: number) {\n        return this.http.get<Moment[]>(`${this.resourceUrl}/patient/${patientId}/visit-dates`)\n            .pipe(map((res) => {\n                    res.forEach(d => moment(d));\n                    return res;\n                })\n            );\n    }\n\n    getStates() {\n        return this.http.get<any[]>('/api/states');\n    }\n\n    getLgasByState(id) {\n        return this.http.get<any[]>(`/api/provinces/state/${id}`);\n    }\n\n    getCommunityPharmaciesByLga(id) {\n        return this.http.get<CommunityPharmacy[]>(`${this.resourceUrl}/community-pharmacies/lga/${id}`);\n    }\n\n    getRelatedPharmacy(devolveId: number, patientId: number, date: Moment) {\n        const d = date.format(DATE_FORMAT);\n        return this.http.get<RelatedPharmacy>(`${this.resourceUrl}/${devolveId}/patient/${patientId}/related-pharmacy/at/${d}`)\n            .pipe(map(res => {\n                if (res.dateVisit) {\n                    res.dateVisit = moment(res.dateVisit).format('DD MMM, YYYY');\n                }\n                return res;\n            }));\n    }\n\n    getRelatedClinic(devolveId: number, patientId: number, date: Moment) {\n        const d = date.format(DATE_FORMAT);\n        return this.http.get<RelatedClinic>(`${this.resourceUrl}/${devolveId}/patient/${patientId}/related-clinic/at/${d}`)\n            .pipe(map(res => {\n                if (res.dateVisit) {\n                    res.dateVisit = moment(res.dateVisit).format('DD MMM, YYYY');\n                }\n                return res;\n            }));\n    }\n\n    getRelatedViralLoad(devolveId: number, patientId: number, date: Moment) {\n        const d = date.format(DATE_FORMAT);\n        return this.http.get<RelatedViralLoad>(`${this.resourceUrl}/${devolveId}/patient/${patientId}/related-viral-load/at/${d}`)\n            .pipe(map(res => {\n                if (res.dateResultReceived) {\n                    res.dateResultReceived = moment(res.dateResultReceived).format('DD MMM, YYYY');\n                }\n                return res;\n            }));\n    }\n\n    getRelatedCD4(devolveId: number, patientId: number, date: Moment) {\n        const d = date.format(DATE_FORMAT);\n        return this.http.get<RelatedCD4>(`${this.resourceUrl}/${devolveId}/patient/${patientId}/related-cd4/at/${d}`)\n            .pipe(map(res => {\n                if (res.dateResultReceived) {\n                    res.dateResultReceived = moment(res.dateResultReceived).format('DD MMM, YYYY');\n                }\n                return res;\n            }));\n    }\n\n    getStateByLga(id) {\n        return this.http.get(`/api/provinces/${id}/state`);\n    }\n\n    protected convertDateFromClient(devolve: Devolve): Devolve {\n        const copy: Devolve = Object.assign({}, devolve, {\n            dateDevolved: devolve.dateDevolved != null && devolve.dateDevolved.isValid() ? devolve.dateDevolved.format(DATE_FORMAT) : null,\n            dateNextClinic: devolve.dateNextClinic != null && devolve.dateNextClinic.isValid() ? devolve.dateNextClinic.format(DATE_FORMAT) : null,\n            dateNextRefill: devolve.dateNextRefill != null && devolve.dateNextRefill.isValid() ? devolve.dateNextRefill.format(DATE_FORMAT) : null,\n            dateDiscontinued: devolve.dateDiscontinued != null && devolve.dateDiscontinued.isValid() ? devolve.dateDiscontinued.format(DATE_FORMAT) : null,\n            dateReturnedToFacility: devolve.dateReturnedToFacility != null && devolve.dateReturnedToFacility.isValid() ? devolve.dateReturnedToFacility.format(DATE_FORMAT) : null\n        });\n        return copy;\n    }\n\n    protected convertDateFromServer(res: EntityResponseType): EntityResponseType {\n        if (res.body) {\n            res.body.dateReturnedToFacility = res.body.dateReturnedToFacility != null ? moment(res.body.dateReturnedToFacility) : null;\n            res.body.dateNextRefill = res.body.dateNextRefill != null ? moment(res.body.dateNextRefill) : null;\n            res.body.dateNextClinic = res.body.dateNextClinic != null ? moment(res.body.dateNextClinic) : null;\n            res.body.dateDevolved = res.body.dateDevolved != null ? moment(res.body.dateDevolved) : null;\n            res.body.dateDiscontinued = res.body.dateDiscontinued != null ? moment(res.body.dateDiscontinued) : null;\n        }\n        return res;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CardViewDateItemModel, CardViewItem, CardViewTextItemModel, NotificationService} from '@alfresco/adf-core';\nimport {Devolve, RelatedCD4, RelatedClinic, RelatedPharmacy, RelatedViralLoad} from '../model/pharmacy.model';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {TdDialogService} from '@covalent/core';\nimport {DevolveService} from '../services/devolve.service';\n\n@Component({\n    selector: 'devolve-details',\n    templateUrl: './devolve.details.component.html'\n})\nexport class DevolveDetailsComponent implements OnInit {\n    properties: CardViewItem[] = [];\n    entity: Devolve;\n    relatedClinic: RelatedClinic;\n    relatedPharmacy: RelatedPharmacy;\n    relatedCD4: RelatedCD4;\n    relatedViralLoad: RelatedViralLoad;\n\n    constructor(private router: Router, private route: ActivatedRoute, private devolveService: DevolveService,\n                private _dialogService: TdDialogService,\n                private notificationService: NotificationService) {\n    }\n\n    ngOnInit() {\n        this.route.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            this.buildProperties();\n        });\n    }\n\n    edit() {\n        this.router.navigate(['/', 'devolves', this.entity.uuid, 'patient', this.entity.patient.uuid, 'edit']);\n    }\n\n    delete() {\n        this._dialogService.openConfirm({\n            title: 'Confirm',\n            message: 'Do you want to delete this client devolve, action cannot be reversed?',\n            cancelButton: 'No',\n            acceptButton: 'Yes',\n            width: '500px',\n        }).afterClosed().subscribe((accept: boolean) => {\n            if (accept) {\n                this.devolveService.delete(this.entity.id).subscribe((res) => {\n                    if (res.ok) {\n                        this.router.navigate(['patients']);\n                    } else {\n                        this.notificationService.showError('Error deleting devolve, please try again');\n                    }\n                });\n            } else {\n                // DO SOMETHING ELSE\n            }\n        });\n    }\n\n    buildProperties() {\n        this.properties.push(new CardViewDateItemModel({\n            key: 'ds',\n            value: this.entity.dateDevolved,\n            label: 'Date of Devolvement',\n            format: 'dd MMM, yyyy'\n        }));\n        let type = 'MMD';\n        switch (this.entity.dmocType) {\n            case 'ARC':\n                type = 'Adolescent Refill Club';\n                break;\n            case 'CPARP':\n                type = 'CPARP';\n                break;\n            case 'CARC':\n                type = 'CARC';\n                break;\n            case 'F_CARG':\n                type = 'F-CARG';\n                break;\n            case 'FAST_TRACK':\n                type = 'Fast Track';\n                break;\n            case 'S_CARG':\n                type = 's-CARG';\n                break;\n            case 'MMS':\n                type = 'MMS';\n                break;\n        }\n        this.properties.push(new CardViewTextItemModel({\n            key: 'ds',\n            value: type,\n            label: 'Type of DMOC'\n        }));\n        this.devolveService.getRelatedClinic(this.entity.id, this.entity.patient.id, this.entity.dateDevolved).subscribe(res => {\n            this.relatedClinic = res;\n            console.log('Related clinic', res);\n            if (this.relatedClinic.dateVisit) {\n                this.properties.push(new CardViewTextItemModel({\n                    key: 'ds',\n                    value: this.relatedClinic.dateVisit,\n                    label: 'Date of Clinical Stage'\n                }));\n                this.properties.push(new CardViewTextItemModel({\n                    key: 'ds',\n                    value: this.relatedClinic && this.relatedClinic.clinicStage,\n                    label: 'Current Clinical Stage',\n                }));\n            }\n        });\n        this.devolveService.getRelatedPharmacy(this.entity.id, this.entity.patient.id, this.entity.dateDevolved).subscribe(res => {\n            this.relatedPharmacy = res;\n            if (this.relatedPharmacy.dateVisit) {\n                this.properties.push(new CardViewTextItemModel({\n                    key: 'ds',\n                    value: this.relatedPharmacy.dateVisit,\n                    label: 'Date of Current ARV Regimen'\n                }));\n                this.properties.push(new CardViewTextItemModel({\n                    key: 'ds',\n                    value: this.relatedPharmacy && this.relatedPharmacy.regimen,\n                    label: 'Current ARV Regimen',\n                }));\n            }\n        });\n        this.devolveService.getRelatedViralLoad(this.entity.id, this.entity.patient.id, this.entity.dateDevolved).subscribe(res => {\n            this.relatedViralLoad = res;\n            if (this.relatedViralLoad.dateResultReceived) {\n                this.properties.push(new CardViewTextItemModel({\n                    key: 'ds',\n                    value: this.relatedViralLoad.dateResultReceived,\n                    label: 'Date of Viral Load'\n                }));\n                this.properties.push(new CardViewTextItemModel({\n                    key: 'ds',\n                    value: this.relatedViralLoad && this.relatedViralLoad.value,\n                    label: 'Current Viral Load',\n                }));\n            }\n        });\n        this.devolveService.getRelatedCD4(this.entity.id, this.entity.patient.id, this.entity.dateDevolved).subscribe(res => {\n            this.relatedCD4 = res;\n            if (this.relatedCD4.dateResultReceived) {\n                this.properties.push(new CardViewTextItemModel({\n                    key: 'ds',\n                    value: this.relatedCD4.dateResultReceived,\n                    label: 'Date of CD4'\n                }));\n                this.properties.push(new CardViewTextItemModel({\n                    key: 'ds',\n                    value: this.relatedCD4 && this.relatedCD4.value,\n                    label: 'Current Viral Load',\n                }));\n            }\n        });\n        this.properties.push(new CardViewDateItemModel({\n            key: 'ds',\n            value: this.entity.dateNextClinic,\n            label: 'Date of next Clinic/Lab',\n            format: 'dd MMM, yyyy'\n        }));\n        this.properties.push(new CardViewDateItemModel({\n            key: 'ds',\n            value: this.entity.dateNextRefill,\n            label: 'Date of Viral Load',\n            format: 'dd MMM, yyyy'\n        }));\n        if (this.entity.communityPharmacy) {\n            this.properties.push(new CardViewTextItemModel({\n                key: 'ds',\n                value: this.entity.communityPharmacy.name,\n                label: 'Community Pharmacy'\n            }));\n        }\n        if (this.entity.dateDiscontinued) {\n            this.properties.push(new CardViewDateItemModel({\n                key: 'ds',\n                value: this.entity.dateDiscontinued,\n                label: 'Date of Discontinuation',\n                format: 'dd MMM, yyyy'\n            }));\n\n            this.properties.push(new CardViewTextItemModel({\n                key: 'ds',\n                value: this.entity.reasonDiscontinued,\n                label: 'Reason of Discontinuation'\n            }));\n\n            if (this.entity.dateReturnedToFacility) {\n                this.properties.push(new CardViewDateItemModel({\n                    key: 'ds',\n                    value: this.entity.dateReturnedToFacility,\n                    label: 'Date Returned to Facility',\n                    format: 'dd MMM, yyyy'\n                }));\n            }\n        }\n    }\n\n    previousState() {\n        window.history.back();\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {\n    CommunityPharmacy,\n    Devolve,\n    Patient,\n    RelatedCD4,\n    RelatedClinic,\n    RelatedPharmacy,\n    RelatedViralLoad\n} from '../model/pharmacy.model';\nimport * as moment_ from 'moment';\nimport {Moment} from 'moment';\nimport {PharmacyService} from '../services/pharmacy.service';\nimport {CardViewItem, CardViewTextItemModel, NotificationService} from '@alfresco/adf-core';\nimport {AppLoaderService, entityCompare} from '@lamis/web-core';\nimport {ActivatedRoute} from '@angular/router';\nimport {DevolveService} from '../services/devolve.service';\nimport {Observable} from 'rxjs';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\n\nconst moment = moment_;\n\nexport interface Dmoc {\n    name: string;\n    value: string;\n}\n\n@Component({\n    selector: 'devolve-edit',\n    templateUrl: './devolve.edit.component.html'\n})\nexport class DevolveEditComponent implements OnInit {\n    entity: Devolve = {};\n    relatedClinic: RelatedClinic;\n    relatedPharmacy: RelatedPharmacy;\n    relatedCD4: RelatedCD4;\n    relatedViralLoad: RelatedViralLoad;\n    communityPharmacies: CommunityPharmacy[];\n    states: any[] = [];\n    lgas: any[];\n    dmocTypes: Dmoc[] = [];\n    patient: Patient;\n    dateRegistration: Moment;\n    maxNextVisit: Moment;\n    isSaving: boolean;\n    error = false;\n    tomorrow = moment().add(1, 'days');\n    today = moment();\n    minNextAppointment: Moment;\n    editing = {};\n    state: any;\n    lga: any;\n    devolveDates: Moment[] = [];\n    enableCommunityPharmacy = false;\n    properties: Array<CardViewItem> = [];\n    minDate: Moment;\n    minDiscontinued: Moment;\n\n    constructor(private pharmacyService: PharmacyService,\n                private devolveService: DevolveService,\n                protected notification: NotificationService,\n                private appLoaderService: AppLoaderService,\n                protected activatedRoute: ActivatedRoute) {\n    }\n\n    createEntity(): Devolve {\n        return <Devolve>{};\n    }\n\n    ngOnInit(): void {\n        this.dmocTypes.push({\n            name: 'Adolescent Refill Club',\n            value: 'ARC'\n        });\n        this.dmocTypes.push({\n            name: 'CARC',\n            value: 'CARC'\n        });\n        this.dmocTypes.push({\n            name: 'CPARP',\n            value: 'CPARP'\n        });\n        this.dmocTypes.push({\n            name: 'F-CARG',\n            value: 'F_CARG'\n        });\n        this.dmocTypes.push({\n            name: 'Fast Track',\n            value: 'FAST_TRACK'\n        });\n        this.dmocTypes.push({\n            name: 'S-CARG',\n            value: 'S_CARG'\n        });\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n            if (this.entity === undefined) {\n                this.entity = this.createEntity();\n            }\n            const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\n            this.pharmacyService.getPatient(patientId).subscribe((res) => {\n                this.entity.patient = res;\n                this.patient = res;\n                this.dateRegistration = res.dateRegistration;\n                this.entity.facility = res.facility;\n                this.minNextAppointment = this.dateRegistration.add(15, 'days');\n                /*this.devolveService.getDevolveDatesByPatient(res.id).subscribe((res) => {\n                    this.devolveDates = res;\n                });*/\n                this.updateRelated();\n            });\n\n            if (this.entity.id) {\n                const dmoc = this.entity.dmocType;\n                if (dmoc === 'MMD') {\n                    this.dmocTypes.push({\n                        name: 'MMD',\n                        value: 'MMD'\n                    });\n                } else if (dmoc === 'MMS') {\n                    this.dmocTypes.push({\n                        name: 'MMS',\n                        value: 'MMS'\n                    });\n                }\n\n                if (this.entity.communityPharmacy) {\n                    this.enableCommunityPharmacy = true;\n                    this.devolveService.getStateByLga(this.entity.communityPharmacy.lga.id).subscribe(res => {\n                        this.state = res;\n                        this.lga = this.entity.communityPharmacy.lga;\n                        this.lgaChanged(this.lga.id);\n                        this.stateChanged(this.state.id);\n                    });\n                }\n\n                if (this.entity.dateDiscontinued) {\n                    this.minDate = this.entity.dateDiscontinued.clone().add(2, 'day');\n                } else {\n                    this.minDiscontinued = this.entity.dateDevolved.clone().add(1, 'day');\n                    this.minDate = this.entity.dateDevolved.clone().add(2, 'day');\n                }\n            }\n\n            this.devolveService.getStates().subscribe(res => this.states = res);\n        });\n    }\n\n    dateDiscontinuedChanged() {\n        if (this.entity.dateDiscontinued) {\n            this.minDate = this.entity.dateDiscontinued.clone().add(1, 'day');\n        }\n    }\n\n    filterDates(date: Moment): boolean {\n        let exists = false;\n\n        this.devolveDates.forEach(d => {\n            if (date.diff(d, 'days') === 0) {\n                exists = true;\n            }\n        });\n        return (this.entity.id && date.diff(this.entity.dateDevolved, 'days') === 0) || !exists;\n    }\n\n    stateChanged(id) {\n        this.devolveService.getLgasByState(id).subscribe(res => this.lgas = res);\n    }\n\n    lgaChanged(id) {\n        this.devolveService.getCommunityPharmaciesByLga(id).subscribe(res => this.communityPharmacies = res);\n    }\n\n    communityPharmacyChanged(communityPharmacy: CommunityPharmacy) {\n        this.properties = [];\n        this.properties.push(new CardViewTextItemModel({\n            key: 'add',\n            label: 'Address',\n            value: communityPharmacy.address\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            key: 'phone',\n            label: 'Telephone Number',\n            value: communityPharmacy.phone\n        }));\n        this.properties.push(new CardViewTextItemModel({\n            key: 'email',\n            label: 'Email',\n            value: communityPharmacy.email\n        }));\n    }\n\n    dmocChanged(dmocType: string) {\n        this.enableCommunityPharmacy = dmocType === 'CPARP';\n    }\n\n    dateDevolvedChanged(date: Moment) {\n        this.minNextAppointment = date.clone().add(7, 'days');\n        this.maxNextVisit = date.clone().add(3, 'months');\n        console.log('Dates', this.minNextAppointment, this.maxNextVisit);\n        this.updateRelated();\n    }\n\n    updateRelated() {\n        this.entity.relatedViralLoad = null;\n        this.entity.relatedClinic = null;\n        this.entity.relatedCd4 = null;\n        this.entity.relatedPharmacy = null;\n        if (this.entity.dateDevolved) {\n            this.devolveService.getRelatedClinic(this.entity.id || 0, this.patient.id, this.entity.dateDevolved).subscribe(res => {\n                this.relatedClinic = res;\n                this.entity.relatedClinic = {id: res.id};\n            });\n            this.devolveService.getRelatedPharmacy(this.entity.id || 0, this.patient.id, this.entity.dateDevolved).subscribe(res => {\n                this.relatedPharmacy = res;\n                this.entity.relatedPharmacy = {id: res.id};\n            });\n            this.devolveService.getRelatedCD4(this.entity.id || 0, this.patient.id, this.entity.dateDevolved).subscribe(res => {\n                this.relatedCD4 = res;\n                this.entity.relatedCd4 = {id: res.id};\n            });\n            this.devolveService.getRelatedViralLoad(this.entity.id || 0, this.patient.id, this.entity.dateDevolved).subscribe(res => {\n                this.relatedViralLoad = res;\n                this.entity.relatedViralLoad = {id: res.id};\n            });\n        }\n    }\n\n    entityCompare(e1, e2) {\n        return entityCompare(e1, e2);\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        // this.progressBar.mode = 'indeterminate';\n        this.appLoaderService.open('Saving visit...');\n        this.isSaving = true;\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.devolveService.update(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.devolveService.create(this.entity));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.appLoaderService.close();\n                this.onSaveError();\n                this.onError(res.message);\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.showInfo('Devolve successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.error = true;\n        this.notification.showError('Error saving devolve');\n    }\n\n    protected onError(errorMessage: string) {\n        this.isSaving = false;\n        this.notification.showError(errorMessage);\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {PharmacyService} from '../services/pharmacy.service';\nimport {DevolveService} from '../services/devolve.service';\nimport {NotificationService} from '@alfresco/adf-core';\nimport {AppLoaderService} from '@lamis/web-core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Devolve} from '../model/pharmacy.model';\nimport {Observable} from 'rxjs';\nimport {HttpErrorResponse, HttpResponse} from '@angular/common/http';\nimport {Moment} from 'moment';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n    selector: 'end-devolve',\n    templateUrl: './end.devolve.component.html'\n})\nexport class EndDevolveComponent implements OnInit {\n    entity: Devolve = {};\n    dmocType: string = '';\n    isSaving = false;\n    minDate: Moment;\n    minDiscontinued: Moment;\n    today = moment();\n\n    constructor(private pharmacyService: PharmacyService,\n                private devolveService: DevolveService,\n                protected notification: NotificationService,\n                private appLoaderService: AppLoaderService,\n                protected activatedRoute: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        const patientId = this.activatedRoute.snapshot.paramMap.get('patientId');\n        this.pharmacyService.getPatient(patientId).subscribe((res) => {\n            this.pharmacyService.getDevolvement(res.id, moment()).subscribe(r => {\n                this.entity = r;\n                if (this.entity.dateDiscontinued) {\n                    this.minDate = r.dateDiscontinued.clone().add(2, 'day');\n                } else {\n                    this.minDiscontinued = r.dateDevolved.clone().add(1, 'day');\n                    this.minDate = r.dateDevolved.clone().add(2, 'day');\n                }\n\n                let type = 'MMD';\n                switch (r.dmocType) {\n                    case 'ARC':\n                        type = 'Adolescent Refill Club';\n                        break;\n                    case 'CPARP':\n                        type = 'CPARP';\n                        break;\n                    case 'CARC':\n                        type = 'CARC';\n                        break;\n                    case 'F_CARG':\n                        type = 'F-CARG';\n                        break;\n                    case 'FAST_TRACK':\n                        type = 'Fast Track';\n                        break;\n                    case 'S_CARG':\n                        type = 'S-CARG';\n                        break;\n                    case 'MMS':\n                        type = 'MMS';\n                        break;\n                }\n                this.dmocType = type;\n            });\n        });\n        this.activatedRoute.data.subscribe(({entity}) => {\n            this.entity = !!entity && entity.body ? entity.body : entity;\n        });\n\n    }\n\n    dateDiscontinuedChanged() {\n        if (this.entity.dateDiscontinued) {\n            this.minDate = this.entity.dateDiscontinued.clone().add(1, 'day');\n        }\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.appLoaderService.open('Saving visit...');\n        this.isSaving = true;\n        if (this.entity.id !== undefined) {\n            this.subscribeToSaveResponse(this.devolveService.update(this.entity));\n        } else {\n            this.subscribeToSaveResponse(this.devolveService.create(this.entity));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<any>>) {\n        result.subscribe(\n            (res: HttpResponse<any>) => this.onSaveSuccess(res.body),\n            (res: HttpErrorResponse) => {\n                this.appLoaderService.close();\n                this.onSaveError();\n                this.onError(res.message);\n            });\n    }\n\n    private onSaveSuccess(result: any) {\n        this.appLoaderService.close();\n        this.isSaving = false;\n        this.notification.showInfo('Devolve successfully saved');\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n        this.notification.showError('Error saving devolve');\n    }\n\n    protected onError(errorMessage: string) {\n        this.isSaving = false;\n        this.notification.showError(errorMessage);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpResponse} from '@angular/common/http';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot, Routes} from '@angular/router';\nimport {Observable, of} from 'rxjs';\nimport {filter, map} from 'rxjs/operators';\nimport {Devolve} from '../model/pharmacy.model';\nimport {DevolveEditComponent} from '../components/devolve.edit.component';\nimport {DevolveDetailsComponent} from '../components/devolve.details.component';\nimport {DevolveService} from './devolve.service';\nimport {EndDevolveComponent} from '../components/end.devolve.component';\n\n@Injectable()\nexport class DevolveResolve implements Resolve<Devolve> {\n    constructor(private service: DevolveService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Devolve> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.findByUuid(id).pipe(\n                filter((response: HttpResponse<Devolve>) => response.ok),\n                map((patient: HttpResponse<Devolve>) => patient.body)\n            );\n        }\n        return of(<Devolve>{});\n    }\n}\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'Client Devolvement',\n            breadcrumb: 'CLIENT DEVOLVEMENT'\n        },\n        children: [\n            {\n                path: ':id/patient/:patientId/view',\n                component: DevolveDetailsComponent,\n                resolve: {\n                    entity: DevolveResolve\n                },\n                data: {\n                    authorities: ['ROLE_USER'],\n                    title: 'Client Devolve',\n                    breadcrumb: 'CLIENT DEVOLVE'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'patient/:patientId/new',\n                component: DevolveEditComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Client Devolve',\n                    breadcrumb: 'DEVOLVE CLIENT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: ':id/patient/:patientId/edit',\n                component: DevolveEditComponent,\n                resolve: {\n                    entity: DevolveResolve\n                },\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'Devolve Edit',\n                    breadcrumb: 'DEVOLVE EDIT'\n                },\n                //canActivate: [UserRouteAccessService]\n            },\n            {\n                path: 'return/patient/:patientId/new',\n                component: EndDevolveComponent,\n                data: {\n                    authorities: ['ROLE_DEC'],\n                    title: 'End Devolve',\n                    breadcrumb: 'END CLIENT DEVOLVE'\n                },\n                //canActivate: [UserRouteAccessService]\n            }\n        ]\n    }\n];\n\n","import {NgModule} from '@angular/core';\nimport {DevolveDetailsComponent} from './components/devolve.details.component';\nimport {DevolveEditComponent} from './components/devolve.edit.component';\nimport {CoreModule} from '@alfresco/adf-core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {CustomFormsModule} from 'ng2-validation';\nimport {MatDateFormatModule} from '@lamis/web-core';\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatSelectModule\n} from '@angular/material';\nimport {DevolveResolve, ROUTES} from './services/devolve.route';\nimport {RouterModule} from '@angular/router';\nimport {CovalentCommonModule, CovalentDialogsModule} from '@covalent/core';\nimport {EndDevolveComponent} from './components/end.devolve.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        RouterModule.forChild(ROUTES),\n        ReactiveFormsModule,\n        CustomFormsModule,\n        CoreModule,\n        MatDatepickerModule,\n        MatDateFormatModule,\n        MatInputModule,\n        MatButtonModule,\n        MatCardModule,\n        MatSelectModule,\n        CovalentCommonModule,\n        CovalentDialogsModule\n    ],\n    declarations: [\n        DevolveDetailsComponent,\n        DevolveEditComponent,\n        EndDevolveComponent\n    ],\n    providers: [\n        DevolveResolve\n    ]\n})\nexport class DevolveModule {\n\n}\n","/*\n * Public API Surface of Clinic\n */\n\nexport * from './lib/model/pharmacy.model';\nexport * from './lib/services/pharmacy.service';\nexport * from './lib/pharmacy.module';\nexport * from './lib/pharmacy.widget.module';\nexport * from './lib/devolve.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {DevolveDetailsComponent as Éµj} from './lib/components/devolve.details.component';\nexport {DevolveEditComponent as Éµl} from './lib/components/devolve.edit.component';\nexport {EndDevolveComponent as Éµm} from './lib/components/end.devolve.component';\nexport {PharmacyDetailsComponent as Éµa} from './lib/components/pharmacy-details.component';\nexport {PharmacyEditComponent as Éµb} from './lib/components/pharmacy-edit.component';\nexport {PharmacyWidget as Éµg} from './lib/components/pharmacy.widget';\nexport {MaterialModule as Éµf,modules as Éµe} from './lib/material.module';\nexport {DevolveResolve as Éµh,ROUTES as Éµi} from './lib/services/devolve.route';\nexport {DevolveService as Éµk} from './lib/services/devolve.service';\nexport {PharmacyResolve as Éµc,ROUTES as Éµd} from './lib/services/pharmacy.route';"],"names":["tslib_1.__param","moment","tslib_1.__decorate","ROUTES"],"mappings":"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"}
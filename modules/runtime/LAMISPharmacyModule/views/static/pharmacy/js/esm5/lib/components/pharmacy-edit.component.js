import * as tslib_1 from "tslib";
import {Component, ViewChild} from '@angular/core';
import {PharmacyService} from '../services/pharmacy.service';
import {NotificationService} from '@alfresco/adf-core';
import {ActivatedRoute} from '@angular/router';
import {MatButton, MatProgressBar} from '@angular/material';
import {ColumnMode} from '@swimlane/ngx-datatable';
import * as moment_ from 'moment';
import {AppLoaderService, entityCompare} from '@lamis/web-core';

var moment = moment_;
var PharmacyEditComponent = /** @class */ (function () {
    function PharmacyEditComponent(pharmacyService, notification, appLoaderService, activatedRoute) {
        this.pharmacyService = pharmacyService;
        this.notification = notification;
        this.appLoaderService = appLoaderService;
        this.activatedRoute = activatedRoute;
        this.entity = {};
        this.regimenTypes = [];
        this.regimens = [];
        this.selectedRegimens = [];
        this.error = false;
        this.tomorrow = moment().add(1, 'days');
        this.today = moment();
        this.ColumnMode = ColumnMode;
        this.editing = {};
        this.rows = [];
        this.drugIds = new Set();
        this.visitDates = [];
        this.drugs = [];
    }

    PharmacyEditComponent.prototype.createEntity = function () {
        return {};
    };
    PharmacyEditComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.isSaving = false;
        this.activatedRoute.data.subscribe(function (_a) {
            var entity = _a.entity;
            _this.entity = !!entity && entity.body ? entity.body : entity;
            if (_this.entity === undefined) {
                _this.entity = _this.createEntity();
            }
            var patientId = _this.activatedRoute.snapshot.paramMap.get('patientId');
            _this.pharmacyService.getPatient(patientId).subscribe(function (res) {
                _this.entity.patient = res;
                _this.patient = res;
                _this.dateRegistration = res.dateRegistration;
                _this.entity.facility = res.facility;
                _this.minNextAppointment = _this.dateRegistration.clone().add(15, 'days');
                _this.pharmacyService.getVisitDatesByPatient(res.id).subscribe(function (res) {
                    _this.visitDates = res;
                });
            });
            if (_this.entity.id) {
                _this.pharmacyService.getLinesByPharmacy(_this.entity.id)
                    .subscribe(function (res) {
                        _this.rows = res.map(function (r) {
                            r.quantity = (r.morning + r.afternoon + r.evening) * r.duration;
                            _this.pharmacyService.getRegimenById(r.regimen.id).subscribe(function (res) {
                                if (!_this.regimens.map(function (r) {
                                    return r.id;
                                }).includes(r.regimen.id)) {
                                    _this.regimens.push(res);
                                    _this.selectedRegimens.push(res);
                                    _this.regimens = tslib_1.__spread(_this.regimens);
                                    _this.selectedRegimens = tslib_1.__spread(_this.selectedRegimens);
                                }
                            });
                            return r;
                        });
                        _this.entity.duration = res.map(function (r) {
                            return r.duration;
                        })
                            .sort(function (r1, r2) {
                                return r1 - r2;
                            })
                            .pop();
                    });
                _this.pharmacyService.getDevolvement(_this.entity.patient.id, _this.entity.dateVisit).subscribe(function (res) {
                    _this.devolve = res;
                    _this.updateDmocType();
                });
            }
            _this.pharmacyService.regimenTypes().subscribe(function (res) {
                return _this.regimenTypes = res;
            });
        });
    };
    PharmacyEditComponent.prototype.dateVisitChanged = function (date) {
        var _this = this;
        this.entity.nextAppointment = this.suggestedNextAppointment();
        this.minNextAppointment = this.entity.nextAppointment.clone().subtract(7, 'days');
        this.maxNextVisit = this.entity.nextAppointment.clone().add(180, 'days');
        this.pharmacyService.getDevolvement(this.entity.patient.id, this.entity.dateVisit).subscribe(function (res) {
            _this.devolve = res;
            _this.updateDmocType();
        });
    };
    PharmacyEditComponent.prototype.suggestedNextAppointment = function () {
        if (this.entity.dateVisit) {
            var nextAppointment = this.entity.dateVisit.clone().add(this.entity.duration - 2 || 13, 'days');
            var weekday = nextAppointment.isoWeekday();
            if (weekday === 6) {
                nextAppointment = nextAppointment.clone().add(2, 'days');
            } else if (weekday === 7) {
                nextAppointment = nextAppointment.clone().add(1, 'days');
            }
            return nextAppointment;
        }
        return null;
    };
    PharmacyEditComponent.prototype.updateDmocType = function () {
        var type = 'MMD';
        switch (this.devolve.dmocType) {
            case 'ARC':
                type = 'Adolescent Refill Club';
                break;
            case 'CPARP':
                type = 'CPARP';
                break;
            case 'CARC':
                type = 'CARC';
                break;
            case 'F_CARG':
                type = 'F-CARG';
                break;
            case 'FAST_TRACK':
                type = 'Fast Track';
                break;
            case 'S_CARG':
                type = 'S-CARG';
                break;
            case 'MMS':
                type = 'MMS';
                break;
        }
        this.dmocType = type;
    };
    PharmacyEditComponent.prototype.filterDates = function (date) {
        var exists = false;
        this.visitDates.forEach(function (d) {
            if (date.diff(d, 'days') === 0) {
                exists = true;
            }
        });
        return (this.entity.id && date.diff(this.entity.dateVisit, 'days') === 0) || !exists;
    };
    PharmacyEditComponent.prototype.previousState = function () {
        window.history.back();
    };
    PharmacyEditComponent.prototype.entityCompare = function (e1, e2) {
        return entityCompare(e1, e2);
    };
    PharmacyEditComponent.prototype.save = function () {
        this.submitButton.disabled = true;
        //this.progressBar.mode = 'indeterminate';
        this.appLoaderService.open('Saving visit...');
        this.entity.lines = this.rows;
        this.isSaving = true;
        if (this.entity.id !== undefined) {
            this.subscribeToSaveResponse(this.pharmacyService.update(this.entity));
        } else {
            this.subscribeToSaveResponse(this.pharmacyService.create(this.entity));
        }
    };
    PharmacyEditComponent.prototype.regimenTypeChange = function (type) {
        var _this = this;
        this.pharmacyService.regimesByRegimenType(type.id).subscribe(function (res) {
            res.forEach(function (regimen) {
                if (!_this.regimens.map(function (r) {
                    return r.id;
                }).includes(regimen.id)) {
                    _this.regimens.push(regimen);
                    _this.regimens = tslib_1.__spread(_this.regimens);
                }
            });
        });
    };
    PharmacyEditComponent.prototype.durationChanged = function (duration) {
        this.rows = this.rows.map(function (r) {
            r.duration = duration;
            r.quantity = (r.morning + r.afternoon + r.evening) * duration;
            return r;
        });
        this.rows = tslib_1.__spread(this.rows);
        this.entity.nextAppointment = this.suggestedNextAppointment();
        if (duration === 90) {
            this.entity.mmdType = 'MMD-3';
        } else if (duration === 120) {
            this.entity.mmdType = 'MMD-4';
        } else if (duration === 150) {
            this.entity.mmdType = 'MMD-5';
        } else if (duration === 180) {
            this.entity.mmdType = 'MMD-6';
        } else {
            this.entity.mmdType = null;
        }
    };
    PharmacyEditComponent.prototype.regimenChange = function (event) {
        var _this = this;
        this.selectedRegimens.forEach(function (regimen) {
            _this.pharmacyService.getDrugsByRegimen(regimen.id).subscribe(function (res) {
                res.forEach(function (drug) {
                    console.log('Drug', drug, _this.rows);
                    if (!_this.rows.map(function (r) {
                        return r.drug.id;
                    }).includes(drug.drug.id)) {
                        _this.rows.push({
                            drug: drug.drug,
                            description: drug.drug.name,
                            morning: drug.drug.morning,
                            afternoon: drug.drug.afternoon,
                            evening: drug.drug.evening,
                            regimen: regimen,
                            duration: _this.entity.duration,
                            quantity: _this.entity.duration * (drug.drug.morning + drug.drug.afternoon + drug.drug.evening),
                            regimenType: regimen.regimenType,
                            regimenDrug: drug.regimenDrug
                        });
                        _this.rows = tslib_1.__spread(_this.rows);
                        //this.drugs.push(drug.drug);
                    }
                    _this.rows = _this.rows.filter(function (row) {
                        return _this.selectedRegimens.map(function (regimen) {
                            return regimen.id;
                        }).includes(row.regimen.id);
                    });
                    _this.drugs.forEach(function (drug) {
                        if (!_this.rows.map(function (r) {
                            return r.drug.id;
                        }).includes(drug.id)) {
                            _this.drugs = _this.drugs.filter(function (d) {
                                return d.id !== drug.id;
                            });
                        }
                    });
                });
            });
        });
    };
    PharmacyEditComponent.prototype.updateValue = function (event, cell, rowIndex) {
        this.editing[rowIndex + '-' + cell] = false;
        this.rows[rowIndex][cell] = event.target.value;
        if (this.entity.duration) {
            var total = parseInt(this.rows[rowIndex]['morning'] + '' || '0') + parseInt(this.rows[rowIndex]['afternoon'] + '' || '0') +
                parseInt(this.rows[rowIndex]['evening'] + '' || '0');
            this.rows[rowIndex]['quantity'] = (total * this.entity.duration);
        }
        this.rows = tslib_1.__spread(this.rows);
    };
    PharmacyEditComponent.prototype.subscribeToSaveResponse = function (result) {
        var _this = this;
        result.subscribe(function (res) {
            return _this.onSaveSuccess(res.body);
        }, function (res) {
            _this.appLoaderService.close();
            _this.onSaveError();
            _this.onError(res.message);
        });
    };
    PharmacyEditComponent.prototype.onSaveSuccess = function (result) {
        this.appLoaderService.close();
        this.isSaving = false;
        this.notification.showInfo('Pharmacy visit successfully saved');
        this.previousState();
    };
    PharmacyEditComponent.prototype.onSaveError = function () {
        this.isSaving = false;
        this.error = true;
        this.notification.showError('Error saving pharmacy visit');
    };
    PharmacyEditComponent.prototype.onError = function (errorMessage) {
        this.isSaving = false;
        this.notification.showError(errorMessage);
    };
    PharmacyEditComponent.ctorParameters = function () {
        return [
            {type: PharmacyService},
            {type: NotificationService},
            {type: AppLoaderService},
            {type: ActivatedRoute}
        ];
    };
    tslib_1.__decorate([
        ViewChild(MatProgressBar, {static: true}),
        tslib_1.__metadata("design:type", MatProgressBar)
    ], PharmacyEditComponent.prototype, "progressBar", void 0);
    tslib_1.__decorate([
        ViewChild(MatButton, {static: true}),
        tslib_1.__metadata("design:type", MatButton)
    ], PharmacyEditComponent.prototype, "submitButton", void 0);
    PharmacyEditComponent = tslib_1.__decorate([
        Component({
            selector: 'lamis-pharmacy-edit',
            template: "<div class=\"lamis-edit-form\">\r\n    <div class=\"lamis-edit-form-container\">\r\n        <form name=\"form\" role=\"form\" novalidate (ngSubmit)=\"save()\" #pharmacyForm=\"ngForm\">\r\n            <mat-card class=\"default\">\r\n                <mat-card-header>\r\n                </mat-card-header>\r\n                <mat-card-content *ngIf=\"patient\">\r\n                    <div>\r\n                        <mat-form-field class=\"full-width\" *ngIf=\"entity && dateRegistration\">\r\n                            <input matInput [matDatepicker]=\"picker\"\r\n                                   placeholder=\"Date of Dispensing\"\r\n                                   [(ngModel)]=\"entity.dateVisit\"\r\n                                   [matDatepickerFilter]=\"filterDates.bind(this)\"\r\n                                   (dateChange)=\"dateVisitChanged($event.value)\"\r\n                                   #visit=\"ngModel\"\r\n                                   [max]=\"today\"\r\n                                   [min]=\"dateRegistration\"\r\n                                   name=\"visit\"\r\n                                   required>\r\n                            <mat-datepicker-toggle\r\n                                    matSuffix\r\n                                    [for]=\"picker\">\r\n                            </mat-datepicker-toggle>\r\n                            <mat-datepicker #picker></mat-datepicker>\r\n                            <mat-error\r\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.required)\">\r\n                                Date of dispensing is required\r\n                            </mat-error>\r\n                            <mat-error\r\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.min)\">\r\n                                Date of dispensing cannot be before {{dateRegistration | date: 'dd MMM, yyyy'}}\r\n                            </mat-error>\r\n                            <mat-error\r\n                                    *ngIf=\"visit.errors && (visit.dirty || visit.touched) && (visit.errors.max)\">\r\n                                Date of dispensing cannot be in the future\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"row\" *ngIf=\"devolve && !devolve.dateReturnedToFacility\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>Date of Devolvement</mat-label>\r\n                                <input matInput disabled value=\"{{devolve.dateDevolved | date: 'dd MMM, yyyy'}}\">\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field class=\"full-width\">\r\n                                <mat-label>DMOC Type</mat-label>\r\n                                <input matInput disabled [value]=\"dmocType\">\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <mat-form-field class=\"full-width\">\r\n                            <mat-select [(ngModel)]=\"entity.duration\"\r\n                                        placeholder=\"Refill Period (days)\"\r\n                                        (selectionChange)=\"durationChanged($event.value)\"\r\n                                        #refill=\"ngModel\" required name=\"refill\">\r\n                                <mat-option></mat-option>\r\n                                <mat-option [value]=\"15\">15</mat-option>\r\n                                <mat-option [value]=\"30\">30</mat-option>\r\n                                <mat-option [value]=\"60\">60</mat-option>\r\n                                <mat-option [value]=\"90\">90</mat-option>\r\n                                <mat-option [value]=\"120\">120</mat-option>\r\n                                <mat-option [value]=\"150\">150</mat-option>\r\n                                <mat-option [value]=\"180\">180</mat-option>\r\n                            </mat-select>\r\n                            <mat-error\r\n                                    *ngIf=\"refill.errors && (refill.dirty || refill.touched) && (refill.errors.required)\">\r\n                                Refill Duration is required\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div *ngIf=\"minNextAppointment\">\r\n                        <mat-form-field class=\"full-width\">\r\n                            <input matInput [matDatepicker]=\"picker1\"\r\n                                   placeholder=\"Date of Next Appointment\"\r\n                                   [(ngModel)]=\"entity.nextAppointment\"\r\n                                   #next=\"ngModel\"\r\n                                   [min]=\"minNextAppointment\"\r\n                                   [max]=\"maxNextVisit\"\r\n                                   name=\"next\"\r\n                                   required>\r\n                            <mat-datepicker-toggle\r\n                                    matSuffix\r\n                                    [for]=\"picker1\">\r\n                            </mat-datepicker-toggle>\r\n                            <mat-datepicker #picker1></mat-datepicker>\r\n                            <mat-error\r\n                                    *ngIf=\"next.errors && (next.dirty || next.touched) && (next.errors.required)\">\r\n                                Date of Next Appointment is required\r\n                            </mat-error>\r\n                            <mat-error\r\n                                    *ngIf=\"next.errors && (next.dirty || next.touched) && (next.errors.max)\">\r\n                                Date of Next Appointment must be after {{maxNextVisit | date:'dd MMM, yyyy'}}\r\n                            </mat-error>\r\n                            <mat-error\r\n                                    *ngIf=\"next.errors && (next.dirty || next.touched) && (next.errors.min)\">\r\n                                Date of Next Appointment must be after {{minNextAppointment | date:'dd MMM, yyyy'}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div>\r\n                        <mat-form-field class=\"full-width\" *ngIf=\"entity.mmdType\">\r\n                            <mat-label>MMD Type</mat-label>\r\n                            <input matInput disabled [value]=\"entity.mmdType || ''\">\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-checkbox [(ngModel)]=\"entity.prescriptionError\" name=\"error\">Any prescription error?\r\n                            </mat-checkbox>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-checkbox [(ngModel)]=\"entity.adrScreened\" name=\"screened\">Adverse Drug Reactions\r\n                            </mat-checkbox>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field *ngIf=\"entity.adrScreened\">\r\n                                <mat-select multiple [(ngModel)]=\"entity.adrs\"\r\n                                            name=\"adrs\"\r\n                                >\r\n                                    <mat-option></mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"Regimen Type\"\r\n                                            (selectionChange)=\"regimenTypeChange($event.value)\">\r\n                                    <mat-option></mat-option>\r\n                                    <mat-option *ngFor=\"let type of regimenTypes\"\r\n                                                [value]=\"type\">{{type.description}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <mat-form-field>\r\n                                <mat-select placeholder=\"Regimen\"\r\n                                            multiple\r\n                                            name=\"regimen\"\r\n                                            [(ngModel)]=\"selectedRegimens\"\r\n                                            [compareWith]=\"entityCompare\"\r\n                                            (selectionChange)=\"regimenChange($event.value)\">\r\n                                    <mat-option *ngFor=\"let regimen of regimens\"\r\n                                                [value]=\"regimen\">{{regimen.description}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        Drug Dispensed\r\n                        <mat-divider></mat-divider>\r\n                        <ngx-datatable\r\n                            #mydatatable\r\n                            class=\"material\"\r\n                            [headerHeight]=\"50\"\r\n                            [limit]=\"8\"\r\n                            [columnMode]=\"ColumnMode.force\"\r\n                            [footerHeight]=\"50\"\r\n                            rowHeight=\"auto\"\r\n                            [rows]=\"rows\"\r\n                        >\r\n                            <ngx-datatable-column name=\"Description\">\r\n                                <ng-template ngx-datatable-cell-template let-value=\"value\">\r\n                                    <mat-form-field>\r\n                                        <input matInput disabled [value]=\"value\" style=\"font-weight: 900\">\r\n                                    </mat-form-field>\r\n                                </ng-template>\r\n                            </ngx-datatable-column>\r\n                            <ngx-datatable-column [maxWidth]=\"1\">\r\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\r\n                                             let-row=\"row\">\r\n                                </ng-template>\r\n                            </ngx-datatable-column>\r\n                            <ngx-datatable-column name=\"Morning\">\r\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\r\n                                             let-row=\"row\">\r\n                                    <mat-form-field class=\"full-width\">\r\n                                        <input\r\n                                                autofocus\r\n                                                matInput\r\n                                                type=\"number\"\r\n                                                (blur)=\"updateValue($event, 'morning', rowIndex)\"\r\n                                                [value]=\"value\"\r\n                                        >\r\n                                    </mat-form-field>\r\n                                </ng-template>\r\n                            </ngx-datatable-column>\r\n                            <ngx-datatable-column [maxWidth]=\"1\">\r\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\r\n                                             let-row=\"row\">\r\n                                </ng-template>\r\n                            </ngx-datatable-column>\r\n                            <ngx-datatable-column name=\"Afternoon\">\r\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\r\n                                             let-row=\"row\">\r\n                                    <mat-form-field class=\"full-width\">\r\n                                        <input\r\n                                                autofocus\r\n                                                matInput\r\n                                                type=\"number\"\r\n                                                (blur)=\"updateValue($event, 'afternoon', rowIndex)\"\r\n                                                [value]=\"value\"\r\n                                        >\r\n                                    </mat-form-field>\r\n                                </ng-template>\r\n                            </ngx-datatable-column>\r\n                            <ngx-datatable-column [maxWidth]=\"1\">\r\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\r\n                                             let-row=\"row\">\r\n                                </ng-template>\r\n                            </ngx-datatable-column>\r\n                            <ngx-datatable-column name=\"Evening\">\r\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\r\n                                             let-row=\"row\">\r\n                                    <mat-form-field class=\"full-width\">\r\n                                        <input\r\n                                                autofocus\r\n                                                matInput\r\n                                                type=\"number\"\r\n                                                (blur)=\"updateValue($event, 'evening', rowIndex)\"\r\n                                                [value]=\"value\"\r\n                                        >\r\n                                    </mat-form-field>\r\n                                </ng-template>\r\n                            </ngx-datatable-column>\r\n                            <ngx-datatable-column [maxWidth]=\"1\">\r\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\r\n                                             let-row=\"row\">\r\n                                </ng-template>\r\n                            </ngx-datatable-column>\r\n                            <ngx-datatable-column name=\"Duration\">\r\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\r\n                                             let-row=\"row\">\r\n                                    <mat-form-field class=\"full-width\">\r\n                                        <input\r\n                                                autofocus\r\n                                                matInput\r\n                                                type=\"number\"\r\n                                                (blur)=\"updateValue($event, 'duration', rowIndex)\"\r\n                                                [value]=\"value\"\r\n                                        >\r\n                                    </mat-form-field>\r\n                                </ng-template>\r\n                            </ngx-datatable-column>\r\n                            <ngx-datatable-column [maxWidth]=\"1\">\r\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\r\n                                             let-row=\"row\">\r\n                                </ng-template>\r\n                            </ngx-datatable-column>\r\n                            <ngx-datatable-column name=\"Quantity\">\r\n                                <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\"\r\n                                             let-row=\"row\">\r\n                                    <mat-form-field>\r\n                                        <input matInput disabled [value]=\"value\" style=\"font-weight: 900\">\r\n                                    </mat-form-field>\r\n                                </ng-template>\r\n                            </ngx-datatable-column>\r\n                        </ngx-datatable>\r\n                    </div>\r\n                    <mat-divider></mat-divider>\r\n                </mat-card-content>\r\n                <mat-card-actions class=\"lamis-edit-form-actions\">\r\n                    <button mat-raised-button type=\"button\" (click)=\"previousState()\">Back</button>\r\n                    <button mat-raised-button color='primary'\r\n                            [disabled]=\"pharmacyForm.invalid || rows.length === 0 || isSaving\"\r\n                            type=\"submit\">\r\n                        {{entity.id !== undefined ? 'Update' : 'Save'}}\r\n                    </button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </form>\r\n    </div>\r\n</div>\r\n"
        }),
        tslib_1.__metadata("design:paramtypes", [PharmacyService,
            NotificationService,
            AppLoaderService,
            ActivatedRoute])
    ], PharmacyEditComponent);
    return PharmacyEditComponent;
}());
export {PharmacyEditComponent};
//# sourceMappingURL=data:application/json;base64,

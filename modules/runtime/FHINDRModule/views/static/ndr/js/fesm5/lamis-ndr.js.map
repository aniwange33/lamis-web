{"version":3,"file":"lamis-ndr.js","sources":["ng://lamis-ndr/lib/services/ndr-converter.service.ts","ng://lamis-ndr/lib/components/ndr-converter.component.ts","ng://lamis-ndr/lib/services/ndr.route.ts","ng://lamis-ndr/lib/ndr.module.ts","ng://lamis-ndr/public_api.ts","ng://lamis-ndr/lamis-ndr.ts"],"sourcesContent":["import { Inject, Injectable } from \"@angular/core\";\nimport { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { SERVER_API_URL_CONFIG, ServerApiUrlConfig } from \"@lamis/web-core\";\nimport { Facility } from \"../components/ndr-converter.component\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class NdrConverterService {\n    public resourceUrl = '';\n\n    constructor(private http: HttpClient, @Inject(SERVER_API_URL_CONFIG) private serverUrl: ServerApiUrlConfig) {\n        this.resourceUrl = serverUrl.SERVER_API_URL + '/api/ndr';\n    }\n\n    convert(ids: number[]) {\n        let params = new HttpParams();\n        ids.forEach(id => params = params.append(\"ids\", id.toString()));\n        return this.http.get(`${this.resourceUrl}/run`, {params})\n    }\n\n    listFacilities() {\n        return this.http.get<Facility[]>(`${this.resourceUrl}/list-facilities`)\n    }\n\n    download(name: string): Observable<Blob> {\n        return this.http.get(`${this.resourceUrl}/download/${name}`, {responseType: 'blob'})\n    }\n\n    listFiles() {\n        return this.http.get<string[]>(`${this.resourceUrl}/list-files`)\n    }\n\n    deduplicate() {\n        return this.http.get(`${this.resourceUrl}/remove-duplicates`)\n    }\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NdrConverterService } from \"../services/ndr-converter.service\";\nimport { RxStompService } from \"@stomp/ng2-stompjs\";\nimport { Message } from '@stomp/stompjs';\nimport { Subscription } from \"rxjs\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\nimport { saveAs } from 'file-saver';\n\nexport interface Facility {\n    id: number;\n    name: string;\n    selected: boolean;\n}\n\n@Component({\n    selector: 'ndr-converter',\n    templateUrl: './ndr-convert.component.html'\n})\nexport class NdrConverterComponent implements OnInit, OnDestroy {\n    private topicSubscription: Subscription;\n    facilities: Facility[] = [];\n    files: string[];\n    running = false;\n    message: any;\n    finished = false;\n\n    constructor(private ndrService: NdrConverterService, private stompService: RxStompService, private domSanitizer: DomSanitizer) {\n    }\n\n    ngOnInit() {\n        this.ndrService.listFacilities().subscribe(res => this.facilities = res);\n        this.topicSubscription = this.stompService.watch(\"/topic/ndr-status\").subscribe((msg: Message) => {\n            if (msg.body === 'start') {\n                this.running = true\n            } else if (msg.body === 'end') {\n                this.running = false;\n                this.message = \"Conversion finished; download files from Download tab\";\n                this.finished = true;\n                this.ndrService.listFiles().subscribe(res => {\n                    this.files = res;\n                })\n            } else {\n                this.message = msg.body;\n                this.running = true;\n            }\n        })\n    }\n\n    selected(): boolean {\n        return this.facilities.filter(f => f.selected).length > 0\n    }\n\n    download(name: string) {\n        this.ndrService.download(name).subscribe(res => {\n            const file = new File([res], name + '.zip', {type: 'application/octet-stream'});\n            saveAs(file);\n        });\n    }\n\n    tabChanged(event) {\n        if (event.index === 1) {\n            this.ndrService.listFiles().subscribe(res => {\n                this.files = res;\n            })\n        }\n    }\n\n    convert() {\n        let ids = this.facilities.filter(f => f.selected)\n            .map(f => f.id);\n        this.ndrService.convert(ids).subscribe()\n    }\n\n    deduplicate() {\n        this.running = true;\n        this.ndrService.deduplicate().subscribe(res => this.running = false)\n    }\n\n    ngOnDestroy(): void {\n        this.topicSubscription.unsubscribe()\n    }\n}\n","import { Routes } from '@angular/router';\nimport { NdrConverterComponent } from '../components/ndr-converter.component';\n\n\nexport const ROUTES: Routes = [\n    {\n        path: '',\n        data: {\n            title: 'NDR Converter',\n            breadcrumb: 'NDR CONVERTER'\n        },\n        children: [\n            {\n                path: '',\n                component: NdrConverterComponent,\n                data: {\n                    breadcrumb: 'NDR CONVERTER'\n                },\n            }\n        ]\n    }\n];\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatProgressBarModule,\n    MatSelectModule,\n    MatTabsModule\n} from '@angular/material';\nimport { RouterModule } from '@angular/router';\nimport { NdrConverterComponent } from './components/ndr-converter.component';\nimport { NdrConverterService } from \"./services/ndr-converter.service\";\nimport { ROUTES } from \"./services/ndr.route\";\nimport { FormsModule } from \"@angular/forms\";\n\n@NgModule({\n    declarations: [\n        NdrConverterComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        MatInputModule,\n        MatIconModule,\n        MatDividerModule,\n        MatCardModule,\n        MatSelectModule,\n        MatButtonModule,\n        MatTabsModule,\n        RouterModule.forChild(ROUTES),\n        MatProgressBarModule,\n        MatListModule,\n        MatCheckboxModule\n    ],\n    exports: [\n        NdrConverterComponent\n    ],\n    providers: [\n        NdrConverterService\n    ]\n})\nexport class NdrModule {\n}\n","/*\n * Public API Surface of Patient\n */\n\nexport * from './lib/components/ndr-converter.component';\nexport * from './lib/services/ndr-converter.service';\nexport * from './lib/ndr.module';\nexport * from './lib/services/ndr.route';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["tslib_1.__param"],"mappings":"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"}
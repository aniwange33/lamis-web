!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common/http"),require("@lamis/web-core"),require("@stomp/ng2-stompjs"),require("@angular/platform-browser"),require("file-saver"),require("@angular/common"),require("@angular/material"),require("@angular/router"),require("@angular/forms")):"function"==typeof define&&define.amd?define("fhi-ndr",["exports","@angular/core","@angular/common/http","@lamis/web-core","@stomp/ng2-stompjs","@angular/platform-browser","file-saver","@angular/common","@angular/material","@angular/router","@angular/forms"],e):e((t=t||self)["fhi-ndr"]={},t.ng.core,t.ng.common.http,t.webCore,t.ng2Stompjs,t.ng.platformBrowser,t.fileSaver,t.ng.common,t.ng.material,t.ng.router,t.ng.forms)}(this,(function(t,e,r,n,i,o,a,s,c,l,u){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function d(t,e,r,n){var i,o=arguments.length,a=o<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,r,n);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(a=(o<3?i(a):o>3?i(e,r,a):i(e,r))||a);return o>3&&a&&Object.defineProperty(e,r,a),a}function m(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)}var p=function(){function t(t,e){this.http=t,this.serverUrl=e,this.resourceUrl="",this.resourceUrl=e.SERVER_API_URL+"/api/ndr"}var i,o;return t.prototype.convert=function(t){var e=new r.HttpParams;return t.forEach((function(t){return e=e.append("ids",t.toString())})),this.http.get(this.resourceUrl+"/run",{params:e})},t.prototype.listFacilities=function(){return this.http.get(this.resourceUrl+"/list-facilities")},t.prototype.download=function(t){return this.http.get(this.resourceUrl+"/download/"+t,{responseType:"blob"})},t.prototype.listFiles=function(){return this.http.get(this.resourceUrl+"/list-files")},t.prototype.deduplicate=function(){return this.http.get(this.resourceUrl+"/remove-duplicates")},t.ctorParameters=function(){return[{type:r.HttpClient},{type:void 0,decorators:[{type:e.Inject,args:[n.SERVER_API_URL_CONFIG]}]}]},t=d([e.Injectable(),(i=1,o=e.Inject(n.SERVER_API_URL_CONFIG),function(t,e){o(t,e,i)}),m("design:paramtypes",[r.HttpClient,Object])],t)}(),f=function(){function t(t,e,r){this.ndrService=t,this.stompService=e,this.domSanitizer=r,this.facilities=[],this.running=!1,this.finished=!1}return t.prototype.ngOnInit=function(){var t=this;this.ndrService.listFacilities().subscribe((function(e){return t.facilities=e})),this.topicSubscription=this.stompService.watch("/topic/ndr-status").subscribe((function(e){"start"===e.body?t.running=!0:"end"===e.body?(t.running=!1,t.message="Conversion finished; download files from Download tab",t.finished=!0,t.ndrService.listFiles().subscribe((function(e){t.files=e}))):(t.message=e.body,t.running=!0)}))},t.prototype.selected=function(){return this.facilities.filter((function(t){return t.selected})).length>0},t.prototype.download=function(t){this.ndrService.download(t).subscribe((function(e){var r=new File([e],t+".zip",{type:"application/octet-stream"});a.saveAs(r)}))},t.prototype.tabChanged=function(t){var e=this;1===t.index&&this.ndrService.listFiles().subscribe((function(t){e.files=t}))},t.prototype.convert=function(){var t=this.facilities.filter((function(t){return t.selected})).map((function(t){return t.id}));this.ndrService.convert(t).subscribe()},t.prototype.deduplicate=function(){var t=this;this.running=!0,this.ndrService.deduplicate().subscribe((function(e){return t.running=!1}))},t.prototype.ngOnDestroy=function(){this.topicSubscription.unsubscribe()},t.ctorParameters=function(){return[{type:p},{type:i.RxStompService},{type:o.DomSanitizer}]},t=d([e.Component({selector:"ndr-converter",template:'<mat-card>\r\n    <mat-card-content>\r\n        <mat-tab-group (selectedTabChange)="tabChanged($event)">\r\n            <mat-tab label="Conversion">\r\n                <ng-container *ngIf="running">\r\n                    <mat-progress-bar mode="indeterminate"></mat-progress-bar>\r\n                    <mat-form-field style="width: 100%">\r\n                        <input [disabled]="true" matInput [value]="message"/>\r\n                    </mat-form-field>\r\n                </ng-container>\r\n                <ng-container *ngIf="finished">\r\n                    <mat-form-field style="width: 100%">\r\n                        <input [disabled]="true" matInput [value]="message"/>\r\n                    </mat-form-field>\r\n                </ng-container>\r\n                <mat-list>\r\n                    <div mat-subheader>Available Facilities</div>\r\n                    <mat-list-item *ngFor="let facility of facilities">\r\n                        <mat-icon mat-list-icon>account_balance</mat-icon>\r\n                        <div mat-line>\r\n                            <mat-checkbox\r\n                                    [(ngModel)]="facility.selected"\r\n                                    labelPosition="before">\r\n                                {{facility.name}}\r\n                            </mat-checkbox>\r\n                        </div>\r\n                    </mat-list-item>\r\n                    <mat-divider></mat-divider>\r\n                    <button mat-button\r\n                            (click)="deduplicate()"\r\n                            [disabled]="running">Remove Duplicate Records\r\n                    </button>\r\n                    <button mat-raised-button color="primary"\r\n                            (click)="convert()"\r\n                            [disabled]="running || !selected()">Generate NDR\r\n                    </button>\r\n                </mat-list>\r\n            </mat-tab>\r\n            <mat-tab label="Download">\r\n                <mat-list>\r\n                    <div mat-subheader>Available NDR Files</div>\r\n                    <mat-list-item *ngFor="let file of files">\r\n                        <div mat-line>\r\n                            {{file}}\r\n                            <button mat-list-icon\r\n                                    (click)="download(file)">\r\n                                <mat-icon>file_download</mat-icon>\r\n                            </button>\r\n                        </div>\r\n                    </mat-list-item>\r\n                </mat-list>\r\n            </mat-tab>\r\n        </mat-tab-group>\r\n    </mat-card-content>\r\n</mat-card>'}),m("design:paramtypes",[p,i.RxStompService,o.DomSanitizer])],t)}(),b={title:"NDR Converter",breadcrumb:"NDR CONVERTER"},g={breadcrumb:"NDR CONVERTER"},h=[{path:"",data:b,children:[{path:"",component:f,data:g}]}],v=function(){function t(){}return t=d([e.NgModule({declarations:[f],imports:[s.CommonModule,u.FormsModule,c.MatInputModule,c.MatIconModule,c.MatDividerModule,c.MatCardModule,c.MatSelectModule,c.MatButtonModule,c.MatTabsModule,l.RouterModule.forChild(h),c.MatProgressBarModule,c.MatListModule,c.MatCheckboxModule],exports:[f],providers:[p]})],t)}();t.NdrConverterComponent=f,t.NdrConverterService=p,t.NdrModule=v,t.ROUTES=h,t.ɵ0=b,t.ɵ1=g,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=fhi-ndr.umd.min.js.map
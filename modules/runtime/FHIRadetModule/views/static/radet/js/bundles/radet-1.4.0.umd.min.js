!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common/http"),require("@lamis/web-core"),require("moment"),require("@stomp/ng2-stompjs"),require("@angular/platform-browser"),require("file-saver"),require("@angular/common"),require("@angular/material"),require("@angular/router"),require("@angular/forms"),require("@syncfusion/ej2-angular-dropdowns"),require("@syncfusion/ej2-angular-calendars")):"function"==typeof define&&define.amd?define("radet-1.4.0",["exports","@angular/core","@angular/common/http","@lamis/web-core","moment","@stomp/ng2-stompjs","@angular/platform-browser","file-saver","@angular/common","@angular/material","@angular/router","@angular/forms","@syncfusion/ej2-angular-dropdowns","@syncfusion/ej2-angular-calendars"],t):t(((e=e||self)["radet-1"]=e["radet-1"]||{},e["radet-1"][4]=e["radet-1"][4]||{},e["radet-1"][4][0]={}),e.ng.core,e.ng.common.http,e.webCore,e.moment_,e.ng2Stompjs,e.ng.platformBrowser,e.fileSaver,e.ng.common,e.ng.material,e.ng.router,e.ng.forms,e.ej2AngularDropdowns,e.ej2AngularCalendars)}(this,(function(e,t,n,i,r,a,o,s,d,l,c,u,p,m){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */function f(e,t,n,i){var r,a=arguments.length,o=a<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(o=(a<3?r(o):a>3?r(t,n,o):r(t,n))||o);return a>3&&o&&Object.defineProperty(t,n,o),o}function h(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}var g=r,b=function(){function e(e,t){this.http=e,this.serverUrl=t,this.resourceUrl="",this.prepResourceUrl="",this.resourceUrl=t.SERVER_API_URL+"/api/radet",this.prepResourceUrl=t.SERVER_API_URL+"/api/prep"}var r,a;return e.prototype.convert=function(e,t,r,a,o){var s=new n.HttpParams;return s=(s=(s=(s=s.append("cohortStart",g(e).format(i.DATE_FORMAT))).append("cohortEnd",g(t).format(i.DATE_FORMAT))).append("reportingPeriod",g(r).format(i.DATE_FORMAT))).append("today",o),a.forEach((function(e){return s=s.append("ids",e.toString())})),this.http.get(this.resourceUrl+"/convert",{params:s})},e.prototype.listFacilities=function(){return this.http.get(this.resourceUrl+"/list-facilities")},e.prototype.download=function(e){return this.http.get(this.resourceUrl+"/download/"+e,{responseType:"blob"})},e.prototype.listFiles=function(){return this.http.get(this.resourceUrl+"/list-files")},e.prototype.convertPrep=function(e,t,r,a,o){var s=new n.HttpParams;return s=(s=(s=(s=s.append("cohortStart",g(e).format(i.DATE_FORMAT))).append("cohortEnd",g(t).format(i.DATE_FORMAT))).append("reportingPeriod",g(r).format(i.DATE_FORMAT))).append("today",o),a.forEach((function(e){return s=s.append("ids",e.toString())})),this.http.get(this.prepResourceUrl+"/convert",{params:s})},e.prototype.downloadPrepFile=function(e){return this.http.get(this.prepResourceUrl+"/download/"+e,{responseType:"blob"})},e.prototype.listPrepFiles=function(){return this.http.get(this.prepResourceUrl+"/list-files")},e.ctorParameters=function(){return[{type:n.HttpClient},{type:void 0,decorators:[{type:t.Inject,args:[i.SERVER_API_URL_CONFIG]}]}]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e(t.ɵɵinject(n.HttpClient),t.ɵɵinject(i.SERVER_API_URL_CONFIG))},token:e,providedIn:"root"}),e=f([t.Injectable({providedIn:"root"}),(r=1,a=t.Inject(i.SERVER_API_URL_CONFIG),function(e,t){a(e,t,r)}),h("design:paramtypes",[n.HttpClient,Object])],e)}(),v=function(){function e(e,t,n){this.service=e,this.stompService=t,this.domSanitizer=n,this.facilities=[],this.running=!1,this.finished=!1,this.dateRange={start:new Date(1900,0,1),end:new Date},this.reportingPeriod=new Date,this.todaySelectable=!0,this.today=new Date,this.current=!1}return e.prototype.ngOnInit=function(){var e=this;this.service.listFacilities().subscribe((function(t){return e.facilities=t})),this.topicSubscription=this.stompService.watch("/topic/radet/status").subscribe((function(t){"start"===t.body?e.running=!0:"end"===t.body?(e.running=!1,e.message="Conversion finished; download files from Download tab",e.finished=!0,e.service.listFiles().subscribe((function(t){e.files=t}))):(e.message=t.body,e.running=!0)}))},e.prototype.selected=function(){return this.facilities.filter((function(e){return e.selected})).length>0},e.prototype.download=function(e){this.service.download(e).subscribe((function(t){var n=new File([t],e+"_Radet.xlsx",{type:"application/octet-stream"});s.saveAs(n)}))},e.prototype.tabChanged=function(e){var t=this;1===e.index&&this.service.listFiles().subscribe((function(e){t.files=e}))},e.prototype.monthChanged=function(e){this.todaySelectable=(new Date).getMonth()===e.getMonth()},e.prototype.convert=function(){this.running=!0,this.finished=!1;var e=this.facilities.filter((function(e){return e.selected})).map((function(e){return e.id}));this.service.convert(this.dateRange.start,this.dateRange.end,this.reportingPeriod,e,this.current).subscribe()},e.prototype.ngOnDestroy=function(){this.topicSubscription.unsubscribe()},e.ctorParameters=function(){return[{type:b},{type:a.RxStompService},{type:o.DomSanitizer}]},e=f([t.Component({selector:"radet-converter",template:'<mat-card>\n    <mat-card-content>\n        <mat-tab-group (selectedTabChange)="tabChanged($event)">\n            <mat-tab label="Conversion">\n                <mat-card>\n                    <mat-card-header class="full-width">\n                        <ng-container *ngIf="running">\n                            <div class="full-width">\n                                <mat-progress-bar class="full-width" mode="indeterminate"></mat-progress-bar>\n                                <mat-form-field class="full-width">\n                                    <input [disabled]="true" matInput [value]="message"/>\n                                </mat-form-field>\n                            </div>\n                        </ng-container>\n                        <ng-container *ngIf="finished">\n                            <div class="full-width">\n                                <mat-form-field class="full-width">\n                                    <input [disabled]="true" matInput [value]="message"/>\n                                </mat-form-field>\n                            </div>\n                        </ng-container>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <mat-list>\n                            <div mat-subheader>Available Facilities</div>\n                            <mat-list-item *ngFor="let facility of facilities">\n                                <div mat-line>\n                                    <mat-checkbox\n                                            [(ngModel)]="facility.selected"\n                                            labelPosition="after">\n                                        {{facility.name}}\n                                    </mat-checkbox>\n                                </div>\n                            </mat-list-item>\n                        </mat-list>\n                        <mat-divider></mat-divider>\n                        <div class="row">\n                            <div class="col-md-6">\n                                <ejs-daterangepicker placeholder="Select Cohort" [start]="\'Year\'" [format]="\'MMM yyyy\'"\n                                                     [max]="today"\n                                                     [(value)]="dateRange"\n                                                     [depth]="\'Year\'">\n                                </ejs-daterangepicker>\n                            </div>\n                            <div class="col-md-6">\n                                <ejs-datepicker placeholder="Select Reporting period" [start]="\'Year\'"\n                                                [format]="\'MMMM y\'"\n                                                [(value)]="reportingPeriod"\n                                                (valueChange)="monthChanged($event)"\n                                                [depth]="\'Year\'">\n                                </ejs-datepicker>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-md-6">\n                                <mat-checkbox [(ngModel)]="current" name="today" *ngIf="todaySelectable">As at today\n                                </mat-checkbox>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                    <mat-card-actions>\n                        <button mat-raised-button color="primary"\n                                (click)="convert()"\n                                [disabled]="running || !selected() || !dateRange || !reportingPeriod">Generate Radet\n                        </button>\n                    </mat-card-actions>\n                </mat-card>\n            </mat-tab>\n            <mat-tab label="Download">\n                <mat-list>\n                    <div mat-subheader>Available Radet Files</div>\n                    <mat-list-item *ngFor="let file of files">\n                        <div mat-line>\n                            {{file}}\n                            <button mat-list-icon\n                                    (click)="download(file)">\n                                <mat-icon>file_download</mat-icon>\n                            </button>\n                        </div>\n                    </mat-list-item>\n                </mat-list>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-card-content>\n</mat-card>\n'}),h("design:paramtypes",[b,a.RxStompService,o.DomSanitizer])],e)}(),y=[{path:"",data:{title:"Radet Converter",breadcrumb:"RADET CONVERTER"},children:[{path:"",component:v,data:{breadcrumb:"RADET CONVERTER",title:"Radet Converter"}}]}],M=function(){function e(){}return e=f([t.NgModule({declarations:[v],imports:[d.CommonModule,u.FormsModule,l.MatInputModule,l.MatIconModule,l.MatDividerModule,l.MatCardModule,l.MatSelectModule,l.MatButtonModule,l.MatTabsModule,c.RouterModule.forChild(y),l.MatProgressBarModule,l.MatListModule,l.MatCheckboxModule,m.DateRangePickerModule,p.DropDownListModule,m.DatePickerModule]})],e)}(),R=function(){function e(e,t,n){this.service=e,this.stompService=t,this.domSanitizer=n,this.facilities=[],this.running=!1,this.finished=!1,this.dateRange={start:new Date(1900,0,1),end:new Date},this.reportingPeriod=new Date,this.todaySelectable=!0,this.today=new Date,this.current=!1}return e.prototype.ngOnInit=function(){var e=this;this.service.listFacilities().subscribe((function(t){return e.facilities=t})),this.topicSubscription=this.stompService.watch("/topic/prep/status").subscribe((function(t){"start"===t.body?e.running=!0:"end"===t.body?(e.running=!1,e.message="Conversion finished; download files from Download tab",e.finished=!0,e.service.listFiles().subscribe((function(t){e.files=t}))):(e.message=t.body,e.running=!0)}))},e.prototype.selected=function(){return this.facilities.filter((function(e){return e.selected})).length>0},e.prototype.download=function(e){this.service.downloadPrepFile(e).subscribe((function(t){var n=new File([t],e+"_PrEP.xlsx",{type:"application/octet-stream"});s.saveAs(n)}))},e.prototype.tabChanged=function(e){var t=this;1===e.index&&this.service.listPrepFiles().subscribe((function(e){t.files=e}))},e.prototype.monthChanged=function(e){this.todaySelectable=(new Date).getMonth()===e.getMonth()},e.prototype.convert=function(){this.running=!0,this.finished=!1;var e=this.facilities.filter((function(e){return e.selected})).map((function(e){return e.id}));this.service.convertPrep(this.dateRange.start,this.dateRange.end,this.reportingPeriod,e,this.current).subscribe()},e.prototype.ngOnDestroy=function(){this.topicSubscription.unsubscribe()},e.ctorParameters=function(){return[{type:b},{type:a.RxStompService},{type:o.DomSanitizer}]},e=f([t.Component({selector:"prep-converter",template:'<mat-card>\n    <mat-card-content>\n        <mat-tab-group (selectedTabChange)="tabChanged($event)">\n            <mat-tab label="Conversion">\n                <mat-card>\n                    <mat-card-header class="full-width">\n                        <ng-container *ngIf="running">\n                            <div class="full-width">\n                                <mat-progress-bar class="full-width" mode="indeterminate"></mat-progress-bar>\n                                <mat-form-field class="full-width">\n                                    <input [disabled]="true" matInput [value]="message"/>\n                                </mat-form-field>\n                            </div>\n                        </ng-container>\n                        <ng-container *ngIf="finished">\n                            <div class="full-width">\n                                <mat-form-field class="full-width">\n                                    <input [disabled]="true" matInput [value]="message"/>\n                                </mat-form-field>\n                            </div>\n                        </ng-container>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <mat-list>\n                            <div mat-subheader>Available Facilities</div>\n                            <mat-list-item *ngFor="let facility of facilities">\n                                <div mat-line>\n                                    <mat-checkbox\n                                            [(ngModel)]="facility.selected"\n                                            labelPosition="after">\n                                        {{facility.name}}\n                                    </mat-checkbox>\n                                </div>\n                            </mat-list-item>\n                        </mat-list>\n                        <mat-divider></mat-divider>\n                        <div class="row">\n                            <div class="col-md-6">\n                                <ejs-daterangepicker placeholder="Select Cohort" [start]="\'Year\'" [format]="\'MMM yyyy\'"\n                                                     [max]="today"\n                                                     [(value)]="dateRange"\n                                                     [depth]="\'Year\'">\n                                </ejs-daterangepicker>\n                            </div>\n                            <div class="col-md-6">\n                                <ejs-datepicker placeholder="Select Reporting period" [start]="\'Year\'"\n                                                [format]="\'MMMM y\'"\n                                                [(value)]="reportingPeriod"\n                                                (valueChange)="monthChanged($event)"\n                                                [depth]="\'Year\'">\n                                </ejs-datepicker>\n                            </div>\n                        </div>\n                        <div class="row">\n                            <div class="col-md-6">\n                                <mat-checkbox [(ngModel)]="current" name="today" *ngIf="todaySelectable">As at today\n                                </mat-checkbox>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                    <mat-card-actions>\n                        <button mat-raised-button color="primary"\n                                (click)="convert()"\n                                [disabled]="running || !selected() || !dateRange || !reportingPeriod">Generate PrEP\n                            Report\n                        </button>\n                    </mat-card-actions>\n                </mat-card>\n            </mat-tab>\n            <mat-tab label="Download">\n                <mat-list>\n                    <div mat-subheader>Available PrEP Files</div>\n                    <mat-list-item *ngFor="let file of files">\n                        <div mat-line>\n                            {{file}}\n                            <button mat-list-icon\n                                    (click)="download(file)">\n                                <mat-icon>file_download</mat-icon>\n                            </button>\n                        </div>\n                    </mat-list-item>\n                </mat-list>\n            </mat-tab>\n        </mat-tab-group>\n    </mat-card-content>\n</mat-card>\n'}),h("design:paramtypes",[b,a.RxStompService,o.DomSanitizer])],e)}(),w={breadcrumb:"PREP CONVERTER",title:"PrEP Converter"},P={breadcrumb:"PREP CONVERTER",title:"PrEP Converter"},S=[{path:"",data:w,children:[{path:"",component:R,data:P}]}],C=function(){function e(){}return e=f([t.NgModule({declarations:[R],imports:[d.CommonModule,u.FormsModule,l.MatInputModule,l.MatIconModule,l.MatDividerModule,l.MatCardModule,l.MatSelectModule,l.MatButtonModule,l.MatTabsModule,c.RouterModule.forChild(S),l.MatProgressBarModule,l.MatListModule,l.MatCheckboxModule,m.DateRangePickerModule,p.DropDownListModule,m.DatePickerModule]})],e)}();e.PREP_ROUTES=S,e.PrepModule=C,e.ROUTES=y,e.RadetConverterComponent=v,e.RadetConverterService=b,e.RadetModule=M,e.ɵ0=w,e.ɵ1=P,e.ɵa=R,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=radet-1.4.0.umd.min.js.map